using CSSPWebToolsDBDLL.Models;
using CSSPWebToolsDBDLL.Services;
using CSSPWebToolsTaskRunner.Services.Resources;
using DocumentFormat.OpenXml;
using DocumentFormat.OpenXml.Packaging;
using DocumentFormat.OpenXml.Wordprocessing;
using System;
using System.Collections.Generic;
using System.Linq;
using Ap = DocumentFormat.OpenXml.ExtendedProperties;
using Vt = DocumentFormat.OpenXml.VariantTypes;
using Wp = DocumentFormat.OpenXml.Drawing.Wordprocessing;
using A = DocumentFormat.OpenXml.Drawing;
using C = DocumentFormat.OpenXml.Drawing.Charts;
using Ds = DocumentFormat.OpenXml.CustomXmlDataProperties;
using Thm15 = DocumentFormat.OpenXml.Office2013.Theme;
using C14 = DocumentFormat.OpenXml.Office2010.Drawing.Charts;
using C15 = DocumentFormat.OpenXml.Office2013.Drawing.Chart;
using Cs = DocumentFormat.OpenXml.Office2013.Drawing.ChartStyle;
using M = DocumentFormat.OpenXml.Math;
using Ovml = DocumentFormat.OpenXml.Vml.Office;
using V = DocumentFormat.OpenXml.Vml;
using W15 = DocumentFormat.OpenXml.Office2013.Word;
using CSSPModelsDLL.Models;

namespace CSSPWebToolsTaskRunner.Services
{
    public class DocxServiceBase
    {
        #region Variables
        #endregion Variables

        #region Properties
        TaskRunnerBaseService _TaskRunnerBaseService { get; set; }
        public int CurrentID { get; set; }
        public int? CurrentFontSize { get; set; }
        public System.Drawing.Color? CurrentFontColor { get; set; }
        public FontNameEnum? CurrentFontName { get; set; }
        public bool CurrentFontBold { get; set; }
        public bool CurrentFontItalic { get; set; }
        public bool CurrentFontUnderline { get; set; }
        public JustificationValues? CurrentJustificationValue { get; set; }
        public BulletStyleEnum? CurrentBulletStyle { get; set; }
        public int? CurrentBulletLevel { get; set; }
        public HighlightColorValues? CurrentHighlightColorValue { get; set; }
        public VerticalPositionValues? CurrentVerticalPositionValue { get; set; }
        public RunStyleEnum? CurrentRunStyle { get; set; }
        public ParagraphStyleEnum? CurrentParagraphStyle { get; set; }
        public List<UsedHyperlink> UsedHyperlinkList { get; set; }
        public int? CurrentColumnCount { get; set; }
        public int? CurrentTableWidthInPerc { get; set; }
        public TableRowAlignmentValues? CurrentTableRowAlignmentValue { get; set; }
        public bool CurrentTableLeftBorder { get; set; }
        public bool CurrentTableRightBorder { get; set; }
        public bool CurrentTableTopBorder { get; set; }
        public bool CurrentTableBottomBorder { get; set; }
        public bool CurrentTableInsideHorizontalBorder { get; set; }
        public bool CurrentTableInsideVerticalBorder { get; set; }
        public BorderValues? CurrentLeftBorderValue { get; set; }
        public BorderValues? CurrentRightBorderValue { get; set; }
        public BorderValues? CurrentTopBorderValue { get; set; }
        public BorderValues? CurrentBottomBorderValue { get; set; }
        public BorderValues? CurrentInsideHorizontalBorderValue { get; set; }
        public BorderValues? CurrentInsideVerticalBorderValue { get; set; }
        public System.Drawing.Color? CurrentTableBorderColor { get; set; }
        public TableStyleEnum? CurrentTableStyle { get; set; }
        public string CurrentTitle { get; set; }
        #endregion Properties

        #region Constructors
        public DocxServiceBase(TaskRunnerBaseService taskRunnerBaseService)
        {
            _TaskRunnerBaseService = taskRunnerBaseService;
            UsedHyperlinkList = new List<UsedHyperlink>();
            SetDefaults();
        }
        #endregion Constructors

        #region Functions public
        public string AddHyperlinkRelationship(MainDocumentPart mainDocumentPart)
        {
            if (UsedHyperlinkList.Count > 0)
            {
                foreach (UsedHyperlink usedHyperlink in UsedHyperlinkList)
                {
                    mainDocumentPart.AddHyperlinkRelationship(new System.Uri(usedHyperlink.URL, System.UriKind.Absolute), true, "rId" + usedHyperlink.Id.ToString());
                }
            }

            return "";
        }
        public Paragraph AddParagraph(Body body)
        {
            Paragraph paragraph = new Paragraph();

            ParagraphProperties paragraphProperties = new ParagraphProperties();

            if (CurrentParagraphStyle != null)
            {
                ParagraphStyleId paragraphStyleId = new ParagraphStyleId() { Val = CurrentParagraphStyle.ToString() };
                paragraphProperties.Append(paragraphStyleId);
            }
            else
            {
                ParagraphStyleId paragraphStyleId = new ParagraphStyleId() { Val = ParagraphStyleEnum.Normal.ToString() };
                paragraphProperties.Append(paragraphStyleId);
            }

            if (CurrentJustificationValue == null)
            {
                Justification justification = new Justification() { Val = JustificationValues.Left };
                paragraphProperties.Append(justification);
            }
            else
            {
                Justification justification = new Justification() { Val = CurrentJustificationValue };
                paragraphProperties.Append(justification);
            }
            //if (CurrentBulletStyle != null && CurrentBulletStyle != BulletStyleEnum.Error)
            //{
            //    NumberingProperties numberingProperties = new NumberingProperties();
            //    NumberingLevelReference numberingLevelReference = new NumberingLevelReference() { Val = CurrentBulletLevel };
            //    NumberingId numberingId = new NumberingId() { Val = (int)CurrentBulletStyle };

            //    numberingProperties.Append(numberingLevelReference);
            //    numberingProperties.Append(numberingId);

            //    paragraphProperties.Append(numberingProperties);
            //}

            //ParagraphMarkRunProperties paragraphMarkRunProperties = new ParagraphMarkRunProperties();
            //if (CurrentFontBold)
            //{
            //    Bold bold = new Bold();
            //    paragraphMarkRunProperties.Append(bold);
            //}
            //if (CurrentFontItalic)
            //{
            //    Italic italic = new Italic();
            //    paragraphMarkRunProperties.Append(italic);
            //}
            //if (CurrentFontUnderline)
            //{
            //    Underline underline = new Underline();
            //    paragraphMarkRunProperties.Append(underline);
            //}

            //FontSize fontSize = new FontSize() { Val = CurrentFontSize.ToString() };
            //paragraphMarkRunProperties.Append(fontSize);

            //Languages language = new Languages() { Val = _TaskRunnerBaseService._BWObj.appTaskModel.Language + "-CA" };
            //paragraphMarkRunProperties.Append(language);

            paragraph.Append(paragraphProperties);

            body.Append(paragraph);

            return paragraph;
        }
        public Run AddRunWithCurrentFontStyle(Paragraph paragraph, string Text)
        {
            Run run = new Run();
            RunProperties runProperties = new RunProperties();
            if (CurrentFontBold)
            {
                Bold bold = new Bold();
                runProperties.Append(bold);
            }
            if (CurrentFontItalic)
            {
                Italic italic = new Italic();
                runProperties.Append(italic);
            }
            if (CurrentFontUnderline)
            {
                Underline underline = new Underline();
                runProperties.Append(underline);
            }

            FontSize fontSize = new FontSize() { Val = CurrentFontSize.ToString() };
            runProperties.Append(fontSize);

            if (CurrentFontColor != null)
            {
                string RGB = CurrentFontColor.Value.R.ToString("X2") + CurrentFontColor.Value.G.ToString("X2") + CurrentFontColor.Value.B.ToString("X2");
                Color color = new Color() { Val = RGB };

                runProperties.Append(color);
            }

            if (CurrentHighlightColorValue != null)
            {
                Highlight highlight = new Highlight() { Val = HighlightColorValues.Yellow };
                runProperties.Append(highlight);
            }

            if (CurrentVerticalPositionValue != null)
            {
                VerticalTextAlignment verticalTextAlignment = new VerticalTextAlignment() { Val = CurrentVerticalPositionValue };
                runProperties.Append(verticalTextAlignment);
            }

            Text text = new Text();
            text.Text = Text;
            text.Space = SpaceProcessingModeValues.Preserve;

            run.Append(runProperties);
            run.Append(text);

            paragraph.Append(run);

            return run;
        }
        public Run AddRunWithCurrentParagraphStyle(Paragraph paragraph, string Text)
        {
            Run run = new Run();
            Text text = new Text();
            text.Text = Text;
            text.Space = SpaceProcessingModeValues.Preserve;

            run.Append(text);

            paragraph.Append(run);

            return run;
        }
        public Run AddRunWithCurrentRunStyle(Paragraph paragraph, string Text)
        {
            RunProperties runProperties = new RunProperties();
            RunStyle runStyle = new RunStyle() { Val = CurrentRunStyle.ToString() };

            runProperties.Append(runStyle);

            Run run = new Run();
            Text text = new Text();
            text.Text = Text;
            text.Space = SpaceProcessingModeValues.Preserve;

            run.Append(runProperties);
            run.Append(text);

            paragraph.Append(run);

            return run;
        }
        public Run AddRunHyperlink(Paragraph paragraph, string URL, string Text)
        {
            Run run = new Run();
            RunProperties runProperties = new RunProperties();

            if (CurrentRunStyle != null)
            {
                RunStyle runStyle = new RunStyle() { Val = "Hyperlink" };
                runProperties.Append(runStyle);
            }

            Text text = new Text();
            text.Text = Text;
            text.Space = SpaceProcessingModeValues.Preserve;

            run.Append(runProperties);
            run.Append(text);

            UsedHyperlink usedHyperlink = (from c in UsedHyperlinkList
                                           where c.URL == URL
                                           select c).FirstOrDefault();

            Hyperlink hyperlink = new Hyperlink();
            if (usedHyperlink == null)
            {
                string Id = "rId" + (UsedHyperlinkList.Count + 100).ToString();
                hyperlink.Id = Id;

                usedHyperlink = new UsedHyperlink()
                {
                    URL = URL,
                    Id = Id,
                };

                UsedHyperlinkList.Add(usedHyperlink);
            }
            else
            {
                hyperlink.Id = usedHyperlink.Id;
            }

            hyperlink.Append(run);

            paragraph.Append(hyperlink);

            return run;
        }
        public void AddSectionProp(Body body)
        {
            SectionProperties sectionProperties = new SectionProperties() { RsidR = "000038AC" };
            PageSize pageSize = new PageSize() { Width = (UInt32Value)12240U, Height = (UInt32Value)15840U };
            PageMargin pageMargin = new PageMargin() { Top = 1440, Right = (UInt32Value)1440U, Bottom = 1440, Left = (UInt32Value)1440U, Header = (UInt32Value)720U, Footer = (UInt32Value)720U, Gutter = (UInt32Value)0U };
            Columns columns = new Columns() { Space = "720" };
            DocGrid docGrid = new DocGrid() { LinePitch = 360 };

            sectionProperties.Append(pageSize);
            sectionProperties.Append(pageMargin);
            sectionProperties.Append(columns);
            sectionProperties.Append(docGrid);

            body.Append(sectionProperties);
        }
        public Table AddTable(Body body)
        {
            string RGB = "";
            if (CurrentTableBorderColor != null)
            {
                RGB = CurrentTableBorderColor.Value.R.ToString("X2") + CurrentTableBorderColor.Value.G.ToString("X2") + CurrentTableBorderColor.Value.B.ToString("X2");
            }
            Table table = new Table();

            TableGrid tableGrid = new TableGrid();
            for (int i = 0; i < CurrentColumnCount; i++)
            {
                GridColumn gridColumn = new GridColumn();
                tableGrid.Append(gridColumn);
            }
            table.Append(tableGrid);

            TableProperties tableProperties = new TableProperties();
            if (CurrentTableWidthInPerc == null)
            {
                TableWidth tableWidth = new TableWidth() { Width = "0%", Type = TableWidthUnitValues.Auto };
                tableProperties.Append(tableWidth);
            }
            else
            {
                TableWidth tableWidth = new TableWidth() { Width = CurrentTableWidthInPerc + "%", Type = TableWidthUnitValues.Auto };
                tableProperties.Append(tableWidth);
            }
            if (CurrentTableRowAlignmentValue == null)
            {
                TableJustification tableJustification = new TableJustification() { Val = TableRowAlignmentValues.Center };
                tableProperties.Append(tableJustification);
            }
            else
            {
                TableJustification tableJustification = new TableJustification() { Val = CurrentTableRowAlignmentValue };
                tableProperties.Append(tableJustification);
            }

            if (CurrentTableBottomBorder || CurrentTableInsideHorizontalBorder || CurrentTableInsideVerticalBorder || CurrentTableLeftBorder || CurrentTableRightBorder || CurrentTableTopBorder)
            {
                TableBorders tableBorders = new TableBorders();
                if (CurrentTableBottomBorder)
                {
                    BottomBorder bottomBorder = new BottomBorder() { Val = (CurrentBottomBorderValue == null ? BorderValues.None : CurrentBottomBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(bottomBorder);
                }

                if (CurrentTableLeftBorder)
                {
                    LeftBorder leftBorder = new LeftBorder() { Val = (CurrentLeftBorderValue == null ? BorderValues.None : CurrentLeftBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(leftBorder);
                }

                if (CurrentTableRightBorder)
                {
                    RightBorder rightBorder = new RightBorder() { Val = (CurrentRightBorderValue == null ? BorderValues.None : CurrentRightBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(rightBorder);
                }

                if (CurrentTableTopBorder)
                {
                    TopBorder topBorder = new TopBorder() { Val = (CurrentTopBorderValue == null ? BorderValues.None : CurrentTopBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(topBorder);
                }

                if (CurrentTableInsideHorizontalBorder)
                {
                    InsideHorizontalBorder insideHorizontalBorder = new InsideHorizontalBorder() { Val = (CurrentInsideHorizontalBorderValue == null ? BorderValues.None : CurrentInsideHorizontalBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(insideHorizontalBorder);
                }

                if (CurrentTableInsideVerticalBorder)
                {
                    InsideVerticalBorder nsideVerticalBorder = new InsideVerticalBorder() { Val = (CurrentInsideVerticalBorderValue == null ? BorderValues.None : CurrentInsideVerticalBorderValue), Color = (CurrentTableBorderColor == null ? "auto" : RGB) };
                    tableBorders.Append(nsideVerticalBorder);
                }

                table.Append(tableBorders);
            }

            table.Append(tableProperties);
            body.Append(table);

            return table;
        }
        public Table AddTableStyle(Body body)
        {
            TableProperties tableProperties = new TableProperties();
            if (CurrentTableStyle == null)
            {
                TableStyle tableStyle = new TableStyle() { Val = TableStyleEnum.TableGrid.ToString().Replace("_", "-") };
                tableProperties.Append(tableStyle);
            }
            else
            {
                TableStyle tableStyle = new TableStyle() { Val = CurrentTableStyle.ToString().Replace("_", "-") };
                tableProperties.Append(tableStyle);
            }
            TableWidth tableWidth = new TableWidth() { Width = "0", Type = TableWidthUnitValues.Auto };
            tableProperties.Append(tableWidth);

            if (CurrentTableRowAlignmentValue == null)
            {
                TableJustification tableJustification = new TableJustification() { Val = TableRowAlignmentValues.Center };
                tableProperties.Append(tableJustification);
            }
            else
            {
                TableJustification tableJustification = new TableJustification() { Val = CurrentTableRowAlignmentValue };
                tableProperties.Append(tableJustification);
            }

            Table table = new Table();

            table.Append(tableProperties);
            body.Append(table);

            return table;
        }
        public TableRow AddTableRow(Table table)
        {
            TableRow tableRow = new TableRow();

            table.Append(tableRow);

            return tableRow;
        }
        public TableCell AddTableCell(TableRow tableRow)
        {
            TableCell tableCell = new TableCell();

            tableRow.Append(tableCell);

            return tableCell;
        }
        public Paragraph AddTableCellParagraph(TableCell tableCell)
        {
            Paragraph paragraph = new Paragraph();

            tableCell.Append(paragraph);

            return paragraph;
        }
        public string AddTableOfContents(Body body)
        {
            SdtBlock sdtBlock = new SdtBlock();

            SdtProperties sdtProperties = new SdtProperties();
            SdtId sdtId = new SdtId() { Val = -999658047 };

            SdtContentDocPartObject sdtContentDocPartObject = new SdtContentDocPartObject();
            DocPartGallery docPartGallery = new DocPartGallery() { Val = DocxServiceRootRes.TableOfContents };
            DocPartUnique docPartUnique = new DocPartUnique();

            sdtContentDocPartObject.Append(docPartGallery);
            sdtContentDocPartObject.Append(docPartUnique);

            sdtProperties.Append(sdtId);
            sdtProperties.Append(sdtContentDocPartObject);

            SdtEndCharProperties sdtEndCharProperties = new SdtEndCharProperties();

            RunProperties runProperties = new RunProperties();
            RunFonts runFonts = new RunFonts() { AsciiTheme = ThemeFontValues.MinorHighAnsi, HighAnsiTheme = ThemeFontValues.MinorHighAnsi, EastAsiaTheme = ThemeFontValues.MinorHighAnsi, ComplexScriptTheme = ThemeFontValues.MinorBidi };
            NoProof noProof = new NoProof();
            Color color = new Color() { Val = "auto" };
            FontSize fontSize = new FontSize() { Val = "22" };
            FontSizeComplexScript fontSizeComplexScript = new FontSizeComplexScript() { Val = "22" };
            Languages languages = new Languages() { Val = _TaskRunnerBaseService._BWObj.appTaskModel.Language + "-CA", EastAsia = "en-US" };

            runProperties.Append(runFonts);
            runProperties.Append(noProof);
            runProperties.Append(color);
            runProperties.Append(fontSize);
            runProperties.Append(fontSizeComplexScript);
            runProperties.Append(languages);

            sdtEndCharProperties.Append(runProperties);

            SdtContentBlock sdtContentBlock = new SdtContentBlock();

            Paragraph paragraph = new Paragraph();

            ParagraphProperties paragraphProperties = new ParagraphProperties();
            ParagraphStyleId paragraphStyleId = new ParagraphStyleId() { Val = "TOCHeading" };

            paragraphProperties.Append(paragraphStyleId);

            Run run = new Run();
            Text text = new Text();
            text.Text = DocxServiceRootRes.Contents;

            run.Append(text);

            paragraph.Append(paragraphProperties);
            paragraph.Append(run);

            sdtContentBlock.Append(paragraph);

            paragraph = new Paragraph();

            SimpleField simpleField = new SimpleField() { Instruction = " TOC \\o \"1-3\" \\h \\z \\u " };

            run = new Run();

            runProperties = new RunProperties();
            Bold bold = new Bold();
            BoldComplexScript boldComplexScript = new BoldComplexScript();
            noProof = new NoProof();
            languages = new Languages() { Val = _TaskRunnerBaseService._BWObj.appTaskModel.Language + "-CA" };

            runProperties.Append(bold);
            runProperties.Append(boldComplexScript);
            runProperties.Append(noProof);
            runProperties.Append(languages);
            text = new Text();
            text.Text = DocxServiceRootRes.PleaseClickToUpdate + " " + DocxServiceRootRes.TableOfContents;

            run.Append(runProperties);
            run.Append(text);

            simpleField.Append(run);

            paragraph.Append(simpleField);

            sdtContentBlock.Append(paragraph);

            sdtBlock.Append(sdtProperties);
            sdtBlock.Append(sdtEndCharProperties);
            sdtBlock.Append(sdtContentBlock);

            body.Append(sdtBlock);

            return "";
        }

        // Generates content of extendedFilePropertiesPart1.
        public void GenerateExtendedFilePropertiesPart1Content(ExtendedFilePropertiesPart extendedFilePropertiesPart1)
        {
            Ap.Properties properties1 = new Ap.Properties();
            properties1.AddNamespaceDeclaration("vt", "http://schemas.openxmlformats.org/officeDocument/2006/docPropsVTypes");
            Ap.Template template1 = new Ap.Template();
            template1.Text = "Normal.dotm";
            Ap.TotalTime totalTime1 = new Ap.TotalTime();
            totalTime1.Text = "1";
            Ap.Pages pages1 = new Ap.Pages();
            pages1.Text = "19";
            Ap.Words words1 = new Ap.Words();
            words1.Text = "927";
            Ap.Characters characters1 = new Ap.Characters();
            characters1.Text = "5284";
            Ap.Application application1 = new Ap.Application();
            application1.Text = "Microsoft Office Word";
            Ap.DocumentSecurity documentSecurity1 = new Ap.DocumentSecurity();
            documentSecurity1.Text = "0";
            Ap.Lines lines1 = new Ap.Lines();
            lines1.Text = "44";
            Ap.Paragraphs paragraphs1 = new Ap.Paragraphs();
            paragraphs1.Text = "12";
            Ap.ScaleCrop scaleCrop1 = new Ap.ScaleCrop();
            scaleCrop1.Text = "false";

            Ap.HeadingPairs headingPairs1 = new Ap.HeadingPairs();

            Vt.VTVector vTVector1 = new Vt.VTVector() { BaseType = Vt.VectorBaseValues.Variant, Size = (UInt32Value)2U };

            Vt.Variant variant1 = new Vt.Variant();
            Vt.VTLPSTR vTLPSTR1 = new Vt.VTLPSTR();
            vTLPSTR1.Text = "Title";

            variant1.Append(vTLPSTR1);

            Vt.Variant variant2 = new Vt.Variant();
            Vt.VTInt32 vTInt321 = new Vt.VTInt32();
            vTInt321.Text = "1";

            variant2.Append(vTInt321);

            vTVector1.Append(variant1);
            vTVector1.Append(variant2);

            headingPairs1.Append(vTVector1);

            Ap.TitlesOfParts titlesOfParts1 = new Ap.TitlesOfParts();

            Vt.VTVector vTVector2 = new Vt.VTVector() { BaseType = Vt.VectorBaseValues.Lpstr, Size = (UInt32Value)1U };
            Vt.VTLPSTR vTLPSTR2 = new Vt.VTLPSTR();
            vTLPSTR2.Text = "";

            vTVector2.Append(vTLPSTR2);

            titlesOfParts1.Append(vTVector2);
            Ap.Company company1 = new Ap.Company();
            company1.Text = "";
            Ap.LinksUpToDate linksUpToDate1 = new Ap.LinksUpToDate();
            linksUpToDate1.Text = "false";
            Ap.CharactersWithSpaces charactersWithSpaces1 = new Ap.CharactersWithSpaces();
            charactersWithSpaces1.Text = "6199";
            Ap.SharedDocument sharedDocument1 = new Ap.SharedDocument();
            sharedDocument1.Text = "false";
            Ap.HyperlinksChanged hyperlinksChanged1 = new Ap.HyperlinksChanged();
            hyperlinksChanged1.Text = "false";
            Ap.ApplicationVersion applicationVersion1 = new Ap.ApplicationVersion();
            applicationVersion1.Text = "15.0000";

            properties1.Append(template1);
            properties1.Append(totalTime1);
            properties1.Append(pages1);
            properties1.Append(words1);
            properties1.Append(characters1);
            properties1.Append(application1);
            properties1.Append(documentSecurity1);
            properties1.Append(lines1);
            properties1.Append(paragraphs1);
            properties1.Append(scaleCrop1);
            properties1.Append(headingPairs1);
            properties1.Append(titlesOfParts1);
            properties1.Append(company1);
            properties1.Append(linksUpToDate1);
            properties1.Append(charactersWithSpaces1);
            properties1.Append(sharedDocument1);
            properties1.Append(hyperlinksChanged1);
            properties1.Append(applicationVersion1);

            extendedFilePropertiesPart1.Properties = properties1;
        }

        // Generates content of fontTablePart1.
        public void GenerateFontTablePart1Content(FontTablePart fontTablePart1)
        {
            Fonts fonts1 = new Fonts() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15" } };
            fonts1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            fonts1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            fonts1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            fonts1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            fonts1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");

            Font font1 = new Font() { Name = "Symbol" };
            Panose1Number panose1Number1 = new Panose1Number() { Val = "05050102010706020507" };
            FontCharSet fontCharSet1 = new FontCharSet() { Val = "02" };
            FontFamily fontFamily1 = new FontFamily() { Val = FontFamilyValues.Roman };
            Pitch pitch1 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature1 = new FontSignature() { UnicodeSignature0 = "00000000", UnicodeSignature1 = "10000000", UnicodeSignature2 = "00000000", UnicodeSignature3 = "00000000", CodePageSignature0 = "80000000", CodePageSignature1 = "00000000" };

            font1.Append(panose1Number1);
            font1.Append(fontCharSet1);
            font1.Append(fontFamily1);
            font1.Append(pitch1);
            font1.Append(fontSignature1);

            Font font2 = new Font() { Name = "Times New Roman" };
            Panose1Number panose1Number2 = new Panose1Number() { Val = "02020603050405020304" };
            FontCharSet fontCharSet2 = new FontCharSet() { Val = "00" };
            FontFamily fontFamily2 = new FontFamily() { Val = FontFamilyValues.Roman };
            Pitch pitch2 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature2 = new FontSignature() { UnicodeSignature0 = "E0002AFF", UnicodeSignature1 = "C0007841", UnicodeSignature2 = "00000009", UnicodeSignature3 = "00000000", CodePageSignature0 = "000001FF", CodePageSignature1 = "00000000" };

            font2.Append(panose1Number2);
            font2.Append(fontCharSet2);
            font2.Append(fontFamily2);
            font2.Append(pitch2);
            font2.Append(fontSignature2);

            Font font3 = new Font() { Name = "Courier New" };
            Panose1Number panose1Number3 = new Panose1Number() { Val = "02070309020205020404" };
            FontCharSet fontCharSet3 = new FontCharSet() { Val = "00" };
            FontFamily fontFamily3 = new FontFamily() { Val = FontFamilyValues.Modern };
            Pitch pitch3 = new Pitch() { Val = FontPitchValues.Fixed };
            FontSignature fontSignature3 = new FontSignature() { UnicodeSignature0 = "E0002AFF", UnicodeSignature1 = "C0007843", UnicodeSignature2 = "00000009", UnicodeSignature3 = "00000000", CodePageSignature0 = "000001FF", CodePageSignature1 = "00000000" };

            font3.Append(panose1Number3);
            font3.Append(fontCharSet3);
            font3.Append(fontFamily3);
            font3.Append(pitch3);
            font3.Append(fontSignature3);

            Font font4 = new Font() { Name = "Wingdings" };
            Panose1Number panose1Number4 = new Panose1Number() { Val = "05000000000000000000" };
            FontCharSet fontCharSet4 = new FontCharSet() { Val = "02" };
            FontFamily fontFamily4 = new FontFamily() { Val = FontFamilyValues.Auto };
            Pitch pitch4 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature4 = new FontSignature() { UnicodeSignature0 = "00000000", UnicodeSignature1 = "10000000", UnicodeSignature2 = "00000000", UnicodeSignature3 = "00000000", CodePageSignature0 = "80000000", CodePageSignature1 = "00000000" };

            font4.Append(panose1Number4);
            font4.Append(fontCharSet4);
            font4.Append(fontFamily4);
            font4.Append(pitch4);
            font4.Append(fontSignature4);

            Font font5 = new Font() { Name = "Calibri" };
            Panose1Number panose1Number5 = new Panose1Number() { Val = "020F0502020204030204" };
            FontCharSet fontCharSet5 = new FontCharSet() { Val = "00" };
            FontFamily fontFamily5 = new FontFamily() { Val = FontFamilyValues.Swiss };
            Pitch pitch5 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature5 = new FontSignature() { UnicodeSignature0 = "E00002FF", UnicodeSignature1 = "4000ACFF", UnicodeSignature2 = "00000001", UnicodeSignature3 = "00000000", CodePageSignature0 = "0000019F", CodePageSignature1 = "00000000" };

            font5.Append(panose1Number5);
            font5.Append(fontCharSet5);
            font5.Append(fontFamily5);
            font5.Append(pitch5);
            font5.Append(fontSignature5);

            Font font6 = new Font() { Name = "Calibri Light" };
            Panose1Number panose1Number6 = new Panose1Number() { Val = "020F0302020204030204" };
            FontCharSet fontCharSet6 = new FontCharSet() { Val = "00" };
            FontFamily fontFamily6 = new FontFamily() { Val = FontFamilyValues.Swiss };
            Pitch pitch6 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature6 = new FontSignature() { UnicodeSignature0 = "A00002EF", UnicodeSignature1 = "4000207B", UnicodeSignature2 = "00000000", UnicodeSignature3 = "00000000", CodePageSignature0 = "0000019F", CodePageSignature1 = "00000000" };

            font6.Append(panose1Number6);
            font6.Append(fontCharSet6);
            font6.Append(fontFamily6);
            font6.Append(pitch6);
            font6.Append(fontSignature6);

            Font font7 = new Font() { Name = "Arial" };
            Panose1Number panose1Number7 = new Panose1Number() { Val = "020B0604020202020204" };
            FontCharSet fontCharSet7 = new FontCharSet() { Val = "00" };
            FontFamily fontFamily7 = new FontFamily() { Val = FontFamilyValues.Swiss };
            Pitch pitch7 = new Pitch() { Val = FontPitchValues.Variable };
            FontSignature fontSignature7 = new FontSignature() { UnicodeSignature0 = "E0002AFF", UnicodeSignature1 = "C0007843", UnicodeSignature2 = "00000009", UnicodeSignature3 = "00000000", CodePageSignature0 = "000001FF", CodePageSignature1 = "00000000" };

            font7.Append(panose1Number7);
            font7.Append(fontCharSet7);
            font7.Append(fontFamily7);
            font7.Append(pitch7);
            font7.Append(fontSignature7);

            fonts1.Append(font1);
            fonts1.Append(font2);
            fonts1.Append(font3);
            fonts1.Append(font4);
            fonts1.Append(font5);
            fonts1.Append(font6);
            fonts1.Append(font7);

            fontTablePart1.Fonts = fonts1;
        }

        public void GenerateStyleDefinitionsPart1Content(StyleDefinitionsPart styleDefinitionsPart1)
        {
            Styles styles1 = new Styles() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15" } };
            styles1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            styles1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            styles1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            styles1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            styles1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");

            DocDefaults docDefaults1 = new DocDefaults();

            RunPropertiesDefault runPropertiesDefault1 = new RunPropertiesDefault();

            RunPropertiesBaseStyle runPropertiesBaseStyle1 = new RunPropertiesBaseStyle();
            RunFonts runFonts62 = new RunFonts() { AsciiTheme = ThemeFontValues.MinorHighAnsi, HighAnsiTheme = ThemeFontValues.MinorHighAnsi, EastAsiaTheme = ThemeFontValues.MinorHighAnsi, ComplexScriptTheme = ThemeFontValues.MinorBidi };
            FontSize fontSize55 = new FontSize() { Val = "10" };
            FontSizeComplexScript fontSizeComplexScript55 = new FontSizeComplexScript() { Val = "10" };
            Languages languages11 = new Languages() { Val = "en-CA", EastAsia = "en-US", Bidi = "ar-SA" };

            runPropertiesBaseStyle1.Append(runFonts62);
            runPropertiesBaseStyle1.Append(fontSize55);
            runPropertiesBaseStyle1.Append(fontSizeComplexScript55);
            runPropertiesBaseStyle1.Append(languages11);

            runPropertiesDefault1.Append(runPropertiesBaseStyle1);

            ParagraphPropertiesDefault paragraphPropertiesDefault1 = new ParagraphPropertiesDefault();

            ParagraphPropertiesBaseStyle paragraphPropertiesBaseStyle1 = new ParagraphPropertiesBaseStyle();
            SpacingBetweenLines spacingBetweenLines12 = new SpacingBetweenLines() { After = "160", Line = "259", LineRule = LineSpacingRuleValues.Auto };

            paragraphPropertiesBaseStyle1.Append(spacingBetweenLines12);

            paragraphPropertiesDefault1.Append(paragraphPropertiesBaseStyle1);

            docDefaults1.Append(runPropertiesDefault1);
            docDefaults1.Append(paragraphPropertiesDefault1);

            LatentStyles latentStyles1 = new LatentStyles() { DefaultLockedState = false, DefaultUiPriority = 99, DefaultSemiHidden = false, DefaultUnhideWhenUsed = false, DefaultPrimaryStyle = false, Count = 371 };
            LatentStyleExceptionInfo latentStyleExceptionInfo1 = new LatentStyleExceptionInfo() { Name = "Normal", UiPriority = 0, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo2 = new LatentStyleExceptionInfo() { Name = "heading 1", UiPriority = 9, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo3 = new LatentStyleExceptionInfo() { Name = "heading 2", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo4 = new LatentStyleExceptionInfo() { Name = "heading 3", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo5 = new LatentStyleExceptionInfo() { Name = "heading 4", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo6 = new LatentStyleExceptionInfo() { Name = "heading 5", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo7 = new LatentStyleExceptionInfo() { Name = "heading 6", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo8 = new LatentStyleExceptionInfo() { Name = "heading 7", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo9 = new LatentStyleExceptionInfo() { Name = "heading 8", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo10 = new LatentStyleExceptionInfo() { Name = "heading 9", UiPriority = 9, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo11 = new LatentStyleExceptionInfo() { Name = "index 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo12 = new LatentStyleExceptionInfo() { Name = "index 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo13 = new LatentStyleExceptionInfo() { Name = "index 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo14 = new LatentStyleExceptionInfo() { Name = "index 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo15 = new LatentStyleExceptionInfo() { Name = "index 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo16 = new LatentStyleExceptionInfo() { Name = "index 6", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo17 = new LatentStyleExceptionInfo() { Name = "index 7", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo18 = new LatentStyleExceptionInfo() { Name = "index 8", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo19 = new LatentStyleExceptionInfo() { Name = "index 9", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo20 = new LatentStyleExceptionInfo() { Name = "toc 1", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo21 = new LatentStyleExceptionInfo() { Name = "toc 2", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo22 = new LatentStyleExceptionInfo() { Name = "toc 3", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo23 = new LatentStyleExceptionInfo() { Name = "toc 4", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo24 = new LatentStyleExceptionInfo() { Name = "toc 5", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo25 = new LatentStyleExceptionInfo() { Name = "toc 6", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo26 = new LatentStyleExceptionInfo() { Name = "toc 7", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo27 = new LatentStyleExceptionInfo() { Name = "toc 8", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo28 = new LatentStyleExceptionInfo() { Name = "toc 9", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo29 = new LatentStyleExceptionInfo() { Name = "Normal Indent", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo30 = new LatentStyleExceptionInfo() { Name = "footnote text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo31 = new LatentStyleExceptionInfo() { Name = "annotation text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo32 = new LatentStyleExceptionInfo() { Name = "header", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo33 = new LatentStyleExceptionInfo() { Name = "footer", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo34 = new LatentStyleExceptionInfo() { Name = "index heading", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo35 = new LatentStyleExceptionInfo() { Name = "caption", UiPriority = 35, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo36 = new LatentStyleExceptionInfo() { Name = "table of figures", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo37 = new LatentStyleExceptionInfo() { Name = "envelope address", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo38 = new LatentStyleExceptionInfo() { Name = "envelope return", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo39 = new LatentStyleExceptionInfo() { Name = "footnote reference", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo40 = new LatentStyleExceptionInfo() { Name = "annotation reference", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo41 = new LatentStyleExceptionInfo() { Name = "line number", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo42 = new LatentStyleExceptionInfo() { Name = "page number", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo43 = new LatentStyleExceptionInfo() { Name = "endnote reference", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo44 = new LatentStyleExceptionInfo() { Name = "endnote text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo45 = new LatentStyleExceptionInfo() { Name = "table of authorities", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo46 = new LatentStyleExceptionInfo() { Name = "macro", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo47 = new LatentStyleExceptionInfo() { Name = "toa heading", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo48 = new LatentStyleExceptionInfo() { Name = "List", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo49 = new LatentStyleExceptionInfo() { Name = "List Bullet", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo50 = new LatentStyleExceptionInfo() { Name = "List Number", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo51 = new LatentStyleExceptionInfo() { Name = "List 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo52 = new LatentStyleExceptionInfo() { Name = "List 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo53 = new LatentStyleExceptionInfo() { Name = "List 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo54 = new LatentStyleExceptionInfo() { Name = "List 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo55 = new LatentStyleExceptionInfo() { Name = "List Bullet 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo56 = new LatentStyleExceptionInfo() { Name = "List Bullet 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo57 = new LatentStyleExceptionInfo() { Name = "List Bullet 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo58 = new LatentStyleExceptionInfo() { Name = "List Bullet 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo59 = new LatentStyleExceptionInfo() { Name = "List Number 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo60 = new LatentStyleExceptionInfo() { Name = "List Number 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo61 = new LatentStyleExceptionInfo() { Name = "List Number 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo62 = new LatentStyleExceptionInfo() { Name = "List Number 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo63 = new LatentStyleExceptionInfo() { Name = "Title", UiPriority = 10, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo64 = new LatentStyleExceptionInfo() { Name = "Closing", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo65 = new LatentStyleExceptionInfo() { Name = "Signature", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo66 = new LatentStyleExceptionInfo() { Name = "Default Paragraph Font", UiPriority = 1, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo67 = new LatentStyleExceptionInfo() { Name = "Body Text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo68 = new LatentStyleExceptionInfo() { Name = "Body Text Indent", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo69 = new LatentStyleExceptionInfo() { Name = "List Continue", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo70 = new LatentStyleExceptionInfo() { Name = "List Continue 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo71 = new LatentStyleExceptionInfo() { Name = "List Continue 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo72 = new LatentStyleExceptionInfo() { Name = "List Continue 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo73 = new LatentStyleExceptionInfo() { Name = "List Continue 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo74 = new LatentStyleExceptionInfo() { Name = "Message Header", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo75 = new LatentStyleExceptionInfo() { Name = "Subtitle", UiPriority = 11, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo76 = new LatentStyleExceptionInfo() { Name = "Salutation", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo77 = new LatentStyleExceptionInfo() { Name = "Date", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo78 = new LatentStyleExceptionInfo() { Name = "Body Text First Indent", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo79 = new LatentStyleExceptionInfo() { Name = "Body Text First Indent 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo80 = new LatentStyleExceptionInfo() { Name = "Note Heading", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo81 = new LatentStyleExceptionInfo() { Name = "Body Text 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo82 = new LatentStyleExceptionInfo() { Name = "Body Text 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo83 = new LatentStyleExceptionInfo() { Name = "Body Text Indent 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo84 = new LatentStyleExceptionInfo() { Name = "Body Text Indent 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo85 = new LatentStyleExceptionInfo() { Name = "Block Text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo86 = new LatentStyleExceptionInfo() { Name = "Hyperlink", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo87 = new LatentStyleExceptionInfo() { Name = "FollowedHyperlink", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo88 = new LatentStyleExceptionInfo() { Name = "Strong", UiPriority = 22, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo89 = new LatentStyleExceptionInfo() { Name = "Emphasis", UiPriority = 20, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo90 = new LatentStyleExceptionInfo() { Name = "Document Map", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo91 = new LatentStyleExceptionInfo() { Name = "Plain Text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo92 = new LatentStyleExceptionInfo() { Name = "E-mail Signature", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo93 = new LatentStyleExceptionInfo() { Name = "HTML Top of Form", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo94 = new LatentStyleExceptionInfo() { Name = "HTML Bottom of Form", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo95 = new LatentStyleExceptionInfo() { Name = "Normal (Web)", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo96 = new LatentStyleExceptionInfo() { Name = "HTML Acronym", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo97 = new LatentStyleExceptionInfo() { Name = "HTML Address", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo98 = new LatentStyleExceptionInfo() { Name = "HTML Cite", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo99 = new LatentStyleExceptionInfo() { Name = "HTML Code", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo100 = new LatentStyleExceptionInfo() { Name = "HTML Definition", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo101 = new LatentStyleExceptionInfo() { Name = "HTML Keyboard", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo102 = new LatentStyleExceptionInfo() { Name = "HTML Preformatted", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo103 = new LatentStyleExceptionInfo() { Name = "HTML Sample", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo104 = new LatentStyleExceptionInfo() { Name = "HTML Typewriter", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo105 = new LatentStyleExceptionInfo() { Name = "HTML Variable", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo106 = new LatentStyleExceptionInfo() { Name = "Normal Table", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo107 = new LatentStyleExceptionInfo() { Name = "annotation subject", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo108 = new LatentStyleExceptionInfo() { Name = "No List", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo109 = new LatentStyleExceptionInfo() { Name = "Outline List 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo110 = new LatentStyleExceptionInfo() { Name = "Outline List 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo111 = new LatentStyleExceptionInfo() { Name = "Outline List 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo112 = new LatentStyleExceptionInfo() { Name = "Table Simple 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo113 = new LatentStyleExceptionInfo() { Name = "Table Simple 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo114 = new LatentStyleExceptionInfo() { Name = "Table Simple 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo115 = new LatentStyleExceptionInfo() { Name = "Table Classic 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo116 = new LatentStyleExceptionInfo() { Name = "Table Classic 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo117 = new LatentStyleExceptionInfo() { Name = "Table Classic 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo118 = new LatentStyleExceptionInfo() { Name = "Table Classic 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo119 = new LatentStyleExceptionInfo() { Name = "Table Colorful 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo120 = new LatentStyleExceptionInfo() { Name = "Table Colorful 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo121 = new LatentStyleExceptionInfo() { Name = "Table Colorful 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo122 = new LatentStyleExceptionInfo() { Name = "Table Columns 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo123 = new LatentStyleExceptionInfo() { Name = "Table Columns 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo124 = new LatentStyleExceptionInfo() { Name = "Table Columns 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo125 = new LatentStyleExceptionInfo() { Name = "Table Columns 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo126 = new LatentStyleExceptionInfo() { Name = "Table Columns 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo127 = new LatentStyleExceptionInfo() { Name = "Table Grid 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo128 = new LatentStyleExceptionInfo() { Name = "Table Grid 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo129 = new LatentStyleExceptionInfo() { Name = "Table Grid 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo130 = new LatentStyleExceptionInfo() { Name = "Table Grid 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo131 = new LatentStyleExceptionInfo() { Name = "Table Grid 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo132 = new LatentStyleExceptionInfo() { Name = "Table Grid 6", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo133 = new LatentStyleExceptionInfo() { Name = "Table Grid 7", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo134 = new LatentStyleExceptionInfo() { Name = "Table Grid 8", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo135 = new LatentStyleExceptionInfo() { Name = "Table List 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo136 = new LatentStyleExceptionInfo() { Name = "Table List 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo137 = new LatentStyleExceptionInfo() { Name = "Table List 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo138 = new LatentStyleExceptionInfo() { Name = "Table List 4", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo139 = new LatentStyleExceptionInfo() { Name = "Table List 5", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo140 = new LatentStyleExceptionInfo() { Name = "Table List 6", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo141 = new LatentStyleExceptionInfo() { Name = "Table List 7", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo142 = new LatentStyleExceptionInfo() { Name = "Table List 8", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo143 = new LatentStyleExceptionInfo() { Name = "Table 3D effects 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo144 = new LatentStyleExceptionInfo() { Name = "Table 3D effects 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo145 = new LatentStyleExceptionInfo() { Name = "Table 3D effects 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo146 = new LatentStyleExceptionInfo() { Name = "Table Contemporary", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo147 = new LatentStyleExceptionInfo() { Name = "Table Elegant", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo148 = new LatentStyleExceptionInfo() { Name = "Table Professional", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo149 = new LatentStyleExceptionInfo() { Name = "Table Subtle 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo150 = new LatentStyleExceptionInfo() { Name = "Table Subtle 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo151 = new LatentStyleExceptionInfo() { Name = "Table Web 1", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo152 = new LatentStyleExceptionInfo() { Name = "Table Web 2", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo153 = new LatentStyleExceptionInfo() { Name = "Table Web 3", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo154 = new LatentStyleExceptionInfo() { Name = "Balloon Text", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo155 = new LatentStyleExceptionInfo() { Name = "Table Grid", UiPriority = 39 };
            LatentStyleExceptionInfo latentStyleExceptionInfo156 = new LatentStyleExceptionInfo() { Name = "Table Theme", SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo157 = new LatentStyleExceptionInfo() { Name = "Placeholder Text", SemiHidden = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo158 = new LatentStyleExceptionInfo() { Name = "No Spacing", UiPriority = 1, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo159 = new LatentStyleExceptionInfo() { Name = "Light Shading", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo160 = new LatentStyleExceptionInfo() { Name = "Light List", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo161 = new LatentStyleExceptionInfo() { Name = "Light Grid", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo162 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo163 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo164 = new LatentStyleExceptionInfo() { Name = "Medium List 1", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo165 = new LatentStyleExceptionInfo() { Name = "Medium List 2", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo166 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo167 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo168 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo169 = new LatentStyleExceptionInfo() { Name = "Dark List", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo170 = new LatentStyleExceptionInfo() { Name = "Colorful Shading", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo171 = new LatentStyleExceptionInfo() { Name = "Colorful List", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo172 = new LatentStyleExceptionInfo() { Name = "Colorful Grid", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo173 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 1", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo174 = new LatentStyleExceptionInfo() { Name = "Light List Accent 1", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo175 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 1", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo176 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 1", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo177 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 1", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo178 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 1", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo179 = new LatentStyleExceptionInfo() { Name = "Revision", SemiHidden = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo180 = new LatentStyleExceptionInfo() { Name = "List Paragraph", UiPriority = 34, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo181 = new LatentStyleExceptionInfo() { Name = "Quote", UiPriority = 29, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo182 = new LatentStyleExceptionInfo() { Name = "Intense Quote", UiPriority = 30, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo183 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 1", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo184 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 1", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo185 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 1", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo186 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 1", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo187 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 1", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo188 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 1", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo189 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 1", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo190 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 1", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo191 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 2", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo192 = new LatentStyleExceptionInfo() { Name = "Light List Accent 2", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo193 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 2", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo194 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 2", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo195 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 2", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo196 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 2", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo197 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 2", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo198 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 2", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo199 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 2", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo200 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 2", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo201 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 2", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo202 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 2", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo203 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 2", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo204 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 2", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo205 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 3", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo206 = new LatentStyleExceptionInfo() { Name = "Light List Accent 3", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo207 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 3", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo208 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 3", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo209 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 3", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo210 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 3", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo211 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 3", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo212 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 3", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo213 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 3", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo214 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 3", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo215 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 3", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo216 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 3", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo217 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 3", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo218 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 3", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo219 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 4", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo220 = new LatentStyleExceptionInfo() { Name = "Light List Accent 4", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo221 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 4", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo222 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 4", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo223 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 4", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo224 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 4", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo225 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 4", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo226 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 4", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo227 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 4", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo228 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 4", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo229 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 4", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo230 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 4", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo231 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 4", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo232 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 4", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo233 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 5", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo234 = new LatentStyleExceptionInfo() { Name = "Light List Accent 5", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo235 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 5", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo236 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 5", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo237 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 5", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo238 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 5", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo239 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 5", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo240 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 5", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo241 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 5", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo242 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 5", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo243 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 5", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo244 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 5", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo245 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 5", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo246 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 5", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo247 = new LatentStyleExceptionInfo() { Name = "Light Shading Accent 6", UiPriority = 60 };
            LatentStyleExceptionInfo latentStyleExceptionInfo248 = new LatentStyleExceptionInfo() { Name = "Light List Accent 6", UiPriority = 61 };
            LatentStyleExceptionInfo latentStyleExceptionInfo249 = new LatentStyleExceptionInfo() { Name = "Light Grid Accent 6", UiPriority = 62 };
            LatentStyleExceptionInfo latentStyleExceptionInfo250 = new LatentStyleExceptionInfo() { Name = "Medium Shading 1 Accent 6", UiPriority = 63 };
            LatentStyleExceptionInfo latentStyleExceptionInfo251 = new LatentStyleExceptionInfo() { Name = "Medium Shading 2 Accent 6", UiPriority = 64 };
            LatentStyleExceptionInfo latentStyleExceptionInfo252 = new LatentStyleExceptionInfo() { Name = "Medium List 1 Accent 6", UiPriority = 65 };
            LatentStyleExceptionInfo latentStyleExceptionInfo253 = new LatentStyleExceptionInfo() { Name = "Medium List 2 Accent 6", UiPriority = 66 };
            LatentStyleExceptionInfo latentStyleExceptionInfo254 = new LatentStyleExceptionInfo() { Name = "Medium Grid 1 Accent 6", UiPriority = 67 };
            LatentStyleExceptionInfo latentStyleExceptionInfo255 = new LatentStyleExceptionInfo() { Name = "Medium Grid 2 Accent 6", UiPriority = 68 };
            LatentStyleExceptionInfo latentStyleExceptionInfo256 = new LatentStyleExceptionInfo() { Name = "Medium Grid 3 Accent 6", UiPriority = 69 };
            LatentStyleExceptionInfo latentStyleExceptionInfo257 = new LatentStyleExceptionInfo() { Name = "Dark List Accent 6", UiPriority = 70 };
            LatentStyleExceptionInfo latentStyleExceptionInfo258 = new LatentStyleExceptionInfo() { Name = "Colorful Shading Accent 6", UiPriority = 71 };
            LatentStyleExceptionInfo latentStyleExceptionInfo259 = new LatentStyleExceptionInfo() { Name = "Colorful List Accent 6", UiPriority = 72 };
            LatentStyleExceptionInfo latentStyleExceptionInfo260 = new LatentStyleExceptionInfo() { Name = "Colorful Grid Accent 6", UiPriority = 73 };
            LatentStyleExceptionInfo latentStyleExceptionInfo261 = new LatentStyleExceptionInfo() { Name = "Subtle Emphasis", UiPriority = 19, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo262 = new LatentStyleExceptionInfo() { Name = "Intense Emphasis", UiPriority = 21, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo263 = new LatentStyleExceptionInfo() { Name = "Subtle Reference", UiPriority = 31, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo264 = new LatentStyleExceptionInfo() { Name = "Intense Reference", UiPriority = 32, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo265 = new LatentStyleExceptionInfo() { Name = "Book Title", UiPriority = 33, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo266 = new LatentStyleExceptionInfo() { Name = "Bibliography", UiPriority = 37, SemiHidden = true, UnhideWhenUsed = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo267 = new LatentStyleExceptionInfo() { Name = "TOC Heading", UiPriority = 39, SemiHidden = true, UnhideWhenUsed = true, PrimaryStyle = true };
            LatentStyleExceptionInfo latentStyleExceptionInfo268 = new LatentStyleExceptionInfo() { Name = "Plain Table 1", UiPriority = 41 };
            LatentStyleExceptionInfo latentStyleExceptionInfo269 = new LatentStyleExceptionInfo() { Name = "Plain Table 2", UiPriority = 42 };
            LatentStyleExceptionInfo latentStyleExceptionInfo270 = new LatentStyleExceptionInfo() { Name = "Plain Table 3", UiPriority = 43 };
            LatentStyleExceptionInfo latentStyleExceptionInfo271 = new LatentStyleExceptionInfo() { Name = "Plain Table 4", UiPriority = 44 };
            LatentStyleExceptionInfo latentStyleExceptionInfo272 = new LatentStyleExceptionInfo() { Name = "Plain Table 5", UiPriority = 45 };
            LatentStyleExceptionInfo latentStyleExceptionInfo273 = new LatentStyleExceptionInfo() { Name = "Grid Table Light", UiPriority = 40 };
            LatentStyleExceptionInfo latentStyleExceptionInfo274 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo275 = new LatentStyleExceptionInfo() { Name = "Grid Table 2", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo276 = new LatentStyleExceptionInfo() { Name = "Grid Table 3", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo277 = new LatentStyleExceptionInfo() { Name = "Grid Table 4", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo278 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo279 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo280 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo281 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 1", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo282 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 1", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo283 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 1", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo284 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 1", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo285 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 1", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo286 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 1", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo287 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 1", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo288 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 2", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo289 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 2", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo290 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 2", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo291 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 2", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo292 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 2", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo293 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 2", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo294 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 2", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo295 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 3", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo296 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 3", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo297 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 3", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo298 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 3", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo299 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 3", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo300 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 3", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo301 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 3", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo302 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 4", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo303 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 4", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo304 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 4", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo305 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 4", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo306 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 4", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo307 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 4", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo308 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 4", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo309 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 5", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo310 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 5", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo311 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 5", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo312 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 5", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo313 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 5", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo314 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 5", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo315 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 5", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo316 = new LatentStyleExceptionInfo() { Name = "Grid Table 1 Light Accent 6", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo317 = new LatentStyleExceptionInfo() { Name = "Grid Table 2 Accent 6", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo318 = new LatentStyleExceptionInfo() { Name = "Grid Table 3 Accent 6", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo319 = new LatentStyleExceptionInfo() { Name = "Grid Table 4 Accent 6", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo320 = new LatentStyleExceptionInfo() { Name = "Grid Table 5 Dark Accent 6", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo321 = new LatentStyleExceptionInfo() { Name = "Grid Table 6 Colorful Accent 6", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo322 = new LatentStyleExceptionInfo() { Name = "Grid Table 7 Colorful Accent 6", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo323 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo324 = new LatentStyleExceptionInfo() { Name = "List Table 2", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo325 = new LatentStyleExceptionInfo() { Name = "List Table 3", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo326 = new LatentStyleExceptionInfo() { Name = "List Table 4", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo327 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo328 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo329 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo330 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 1", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo331 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 1", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo332 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 1", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo333 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 1", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo334 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 1", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo335 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 1", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo336 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 1", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo337 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 2", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo338 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 2", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo339 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 2", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo340 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 2", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo341 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 2", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo342 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 2", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo343 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 2", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo344 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 3", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo345 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 3", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo346 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 3", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo347 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 3", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo348 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 3", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo349 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 3", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo350 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 3", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo351 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 4", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo352 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 4", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo353 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 4", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo354 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 4", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo355 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 4", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo356 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 4", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo357 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 4", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo358 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 5", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo359 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 5", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo360 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 5", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo361 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 5", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo362 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 5", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo363 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 5", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo364 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 5", UiPriority = 52 };
            LatentStyleExceptionInfo latentStyleExceptionInfo365 = new LatentStyleExceptionInfo() { Name = "List Table 1 Light Accent 6", UiPriority = 46 };
            LatentStyleExceptionInfo latentStyleExceptionInfo366 = new LatentStyleExceptionInfo() { Name = "List Table 2 Accent 6", UiPriority = 47 };
            LatentStyleExceptionInfo latentStyleExceptionInfo367 = new LatentStyleExceptionInfo() { Name = "List Table 3 Accent 6", UiPriority = 48 };
            LatentStyleExceptionInfo latentStyleExceptionInfo368 = new LatentStyleExceptionInfo() { Name = "List Table 4 Accent 6", UiPriority = 49 };
            LatentStyleExceptionInfo latentStyleExceptionInfo369 = new LatentStyleExceptionInfo() { Name = "List Table 5 Dark Accent 6", UiPriority = 50 };
            LatentStyleExceptionInfo latentStyleExceptionInfo370 = new LatentStyleExceptionInfo() { Name = "List Table 6 Colorful Accent 6", UiPriority = 51 };
            LatentStyleExceptionInfo latentStyleExceptionInfo371 = new LatentStyleExceptionInfo() { Name = "List Table 7 Colorful Accent 6", UiPriority = 52 };

            latentStyles1.Append(latentStyleExceptionInfo1);
            latentStyles1.Append(latentStyleExceptionInfo2);
            latentStyles1.Append(latentStyleExceptionInfo3);
            latentStyles1.Append(latentStyleExceptionInfo4);
            latentStyles1.Append(latentStyleExceptionInfo5);
            latentStyles1.Append(latentStyleExceptionInfo6);
            latentStyles1.Append(latentStyleExceptionInfo7);
            latentStyles1.Append(latentStyleExceptionInfo8);
            latentStyles1.Append(latentStyleExceptionInfo9);
            latentStyles1.Append(latentStyleExceptionInfo10);
            latentStyles1.Append(latentStyleExceptionInfo11);
            latentStyles1.Append(latentStyleExceptionInfo12);
            latentStyles1.Append(latentStyleExceptionInfo13);
            latentStyles1.Append(latentStyleExceptionInfo14);
            latentStyles1.Append(latentStyleExceptionInfo15);
            latentStyles1.Append(latentStyleExceptionInfo16);
            latentStyles1.Append(latentStyleExceptionInfo17);
            latentStyles1.Append(latentStyleExceptionInfo18);
            latentStyles1.Append(latentStyleExceptionInfo19);
            latentStyles1.Append(latentStyleExceptionInfo20);
            latentStyles1.Append(latentStyleExceptionInfo21);
            latentStyles1.Append(latentStyleExceptionInfo22);
            latentStyles1.Append(latentStyleExceptionInfo23);
            latentStyles1.Append(latentStyleExceptionInfo24);
            latentStyles1.Append(latentStyleExceptionInfo25);
            latentStyles1.Append(latentStyleExceptionInfo26);
            latentStyles1.Append(latentStyleExceptionInfo27);
            latentStyles1.Append(latentStyleExceptionInfo28);
            latentStyles1.Append(latentStyleExceptionInfo29);
            latentStyles1.Append(latentStyleExceptionInfo30);
            latentStyles1.Append(latentStyleExceptionInfo31);
            latentStyles1.Append(latentStyleExceptionInfo32);
            latentStyles1.Append(latentStyleExceptionInfo33);
            latentStyles1.Append(latentStyleExceptionInfo34);
            latentStyles1.Append(latentStyleExceptionInfo35);
            latentStyles1.Append(latentStyleExceptionInfo36);
            latentStyles1.Append(latentStyleExceptionInfo37);
            latentStyles1.Append(latentStyleExceptionInfo38);
            latentStyles1.Append(latentStyleExceptionInfo39);
            latentStyles1.Append(latentStyleExceptionInfo40);
            latentStyles1.Append(latentStyleExceptionInfo41);
            latentStyles1.Append(latentStyleExceptionInfo42);
            latentStyles1.Append(latentStyleExceptionInfo43);
            latentStyles1.Append(latentStyleExceptionInfo44);
            latentStyles1.Append(latentStyleExceptionInfo45);
            latentStyles1.Append(latentStyleExceptionInfo46);
            latentStyles1.Append(latentStyleExceptionInfo47);
            latentStyles1.Append(latentStyleExceptionInfo48);
            latentStyles1.Append(latentStyleExceptionInfo49);
            latentStyles1.Append(latentStyleExceptionInfo50);
            latentStyles1.Append(latentStyleExceptionInfo51);
            latentStyles1.Append(latentStyleExceptionInfo52);
            latentStyles1.Append(latentStyleExceptionInfo53);
            latentStyles1.Append(latentStyleExceptionInfo54);
            latentStyles1.Append(latentStyleExceptionInfo55);
            latentStyles1.Append(latentStyleExceptionInfo56);
            latentStyles1.Append(latentStyleExceptionInfo57);
            latentStyles1.Append(latentStyleExceptionInfo58);
            latentStyles1.Append(latentStyleExceptionInfo59);
            latentStyles1.Append(latentStyleExceptionInfo60);
            latentStyles1.Append(latentStyleExceptionInfo61);
            latentStyles1.Append(latentStyleExceptionInfo62);
            latentStyles1.Append(latentStyleExceptionInfo63);
            latentStyles1.Append(latentStyleExceptionInfo64);
            latentStyles1.Append(latentStyleExceptionInfo65);
            latentStyles1.Append(latentStyleExceptionInfo66);
            latentStyles1.Append(latentStyleExceptionInfo67);
            latentStyles1.Append(latentStyleExceptionInfo68);
            latentStyles1.Append(latentStyleExceptionInfo69);
            latentStyles1.Append(latentStyleExceptionInfo70);
            latentStyles1.Append(latentStyleExceptionInfo71);
            latentStyles1.Append(latentStyleExceptionInfo72);
            latentStyles1.Append(latentStyleExceptionInfo73);
            latentStyles1.Append(latentStyleExceptionInfo74);
            latentStyles1.Append(latentStyleExceptionInfo75);
            latentStyles1.Append(latentStyleExceptionInfo76);
            latentStyles1.Append(latentStyleExceptionInfo77);
            latentStyles1.Append(latentStyleExceptionInfo78);
            latentStyles1.Append(latentStyleExceptionInfo79);
            latentStyles1.Append(latentStyleExceptionInfo80);
            latentStyles1.Append(latentStyleExceptionInfo81);
            latentStyles1.Append(latentStyleExceptionInfo82);
            latentStyles1.Append(latentStyleExceptionInfo83);
            latentStyles1.Append(latentStyleExceptionInfo84);
            latentStyles1.Append(latentStyleExceptionInfo85);
            latentStyles1.Append(latentStyleExceptionInfo86);
            latentStyles1.Append(latentStyleExceptionInfo87);
            latentStyles1.Append(latentStyleExceptionInfo88);
            latentStyles1.Append(latentStyleExceptionInfo89);
            latentStyles1.Append(latentStyleExceptionInfo90);
            latentStyles1.Append(latentStyleExceptionInfo91);
            latentStyles1.Append(latentStyleExceptionInfo92);
            latentStyles1.Append(latentStyleExceptionInfo93);
            latentStyles1.Append(latentStyleExceptionInfo94);
            latentStyles1.Append(latentStyleExceptionInfo95);
            latentStyles1.Append(latentStyleExceptionInfo96);
            latentStyles1.Append(latentStyleExceptionInfo97);
            latentStyles1.Append(latentStyleExceptionInfo98);
            latentStyles1.Append(latentStyleExceptionInfo99);
            latentStyles1.Append(latentStyleExceptionInfo100);
            latentStyles1.Append(latentStyleExceptionInfo101);
            latentStyles1.Append(latentStyleExceptionInfo102);
            latentStyles1.Append(latentStyleExceptionInfo103);
            latentStyles1.Append(latentStyleExceptionInfo104);
            latentStyles1.Append(latentStyleExceptionInfo105);
            latentStyles1.Append(latentStyleExceptionInfo106);
            latentStyles1.Append(latentStyleExceptionInfo107);
            latentStyles1.Append(latentStyleExceptionInfo108);
            latentStyles1.Append(latentStyleExceptionInfo109);
            latentStyles1.Append(latentStyleExceptionInfo110);
            latentStyles1.Append(latentStyleExceptionInfo111);
            latentStyles1.Append(latentStyleExceptionInfo112);
            latentStyles1.Append(latentStyleExceptionInfo113);
            latentStyles1.Append(latentStyleExceptionInfo114);
            latentStyles1.Append(latentStyleExceptionInfo115);
            latentStyles1.Append(latentStyleExceptionInfo116);
            latentStyles1.Append(latentStyleExceptionInfo117);
            latentStyles1.Append(latentStyleExceptionInfo118);
            latentStyles1.Append(latentStyleExceptionInfo119);
            latentStyles1.Append(latentStyleExceptionInfo120);
            latentStyles1.Append(latentStyleExceptionInfo121);
            latentStyles1.Append(latentStyleExceptionInfo122);
            latentStyles1.Append(latentStyleExceptionInfo123);
            latentStyles1.Append(latentStyleExceptionInfo124);
            latentStyles1.Append(latentStyleExceptionInfo125);
            latentStyles1.Append(latentStyleExceptionInfo126);
            latentStyles1.Append(latentStyleExceptionInfo127);
            latentStyles1.Append(latentStyleExceptionInfo128);
            latentStyles1.Append(latentStyleExceptionInfo129);
            latentStyles1.Append(latentStyleExceptionInfo130);
            latentStyles1.Append(latentStyleExceptionInfo131);
            latentStyles1.Append(latentStyleExceptionInfo132);
            latentStyles1.Append(latentStyleExceptionInfo133);
            latentStyles1.Append(latentStyleExceptionInfo134);
            latentStyles1.Append(latentStyleExceptionInfo135);
            latentStyles1.Append(latentStyleExceptionInfo136);
            latentStyles1.Append(latentStyleExceptionInfo137);
            latentStyles1.Append(latentStyleExceptionInfo138);
            latentStyles1.Append(latentStyleExceptionInfo139);
            latentStyles1.Append(latentStyleExceptionInfo140);
            latentStyles1.Append(latentStyleExceptionInfo141);
            latentStyles1.Append(latentStyleExceptionInfo142);
            latentStyles1.Append(latentStyleExceptionInfo143);
            latentStyles1.Append(latentStyleExceptionInfo144);
            latentStyles1.Append(latentStyleExceptionInfo145);
            latentStyles1.Append(latentStyleExceptionInfo146);
            latentStyles1.Append(latentStyleExceptionInfo147);
            latentStyles1.Append(latentStyleExceptionInfo148);
            latentStyles1.Append(latentStyleExceptionInfo149);
            latentStyles1.Append(latentStyleExceptionInfo150);
            latentStyles1.Append(latentStyleExceptionInfo151);
            latentStyles1.Append(latentStyleExceptionInfo152);
            latentStyles1.Append(latentStyleExceptionInfo153);
            latentStyles1.Append(latentStyleExceptionInfo154);
            latentStyles1.Append(latentStyleExceptionInfo155);
            latentStyles1.Append(latentStyleExceptionInfo156);
            latentStyles1.Append(latentStyleExceptionInfo157);
            latentStyles1.Append(latentStyleExceptionInfo158);
            latentStyles1.Append(latentStyleExceptionInfo159);
            latentStyles1.Append(latentStyleExceptionInfo160);
            latentStyles1.Append(latentStyleExceptionInfo161);
            latentStyles1.Append(latentStyleExceptionInfo162);
            latentStyles1.Append(latentStyleExceptionInfo163);
            latentStyles1.Append(latentStyleExceptionInfo164);
            latentStyles1.Append(latentStyleExceptionInfo165);
            latentStyles1.Append(latentStyleExceptionInfo166);
            latentStyles1.Append(latentStyleExceptionInfo167);
            latentStyles1.Append(latentStyleExceptionInfo168);
            latentStyles1.Append(latentStyleExceptionInfo169);
            latentStyles1.Append(latentStyleExceptionInfo170);
            latentStyles1.Append(latentStyleExceptionInfo171);
            latentStyles1.Append(latentStyleExceptionInfo172);
            latentStyles1.Append(latentStyleExceptionInfo173);
            latentStyles1.Append(latentStyleExceptionInfo174);
            latentStyles1.Append(latentStyleExceptionInfo175);
            latentStyles1.Append(latentStyleExceptionInfo176);
            latentStyles1.Append(latentStyleExceptionInfo177);
            latentStyles1.Append(latentStyleExceptionInfo178);
            latentStyles1.Append(latentStyleExceptionInfo179);
            latentStyles1.Append(latentStyleExceptionInfo180);
            latentStyles1.Append(latentStyleExceptionInfo181);
            latentStyles1.Append(latentStyleExceptionInfo182);
            latentStyles1.Append(latentStyleExceptionInfo183);
            latentStyles1.Append(latentStyleExceptionInfo184);
            latentStyles1.Append(latentStyleExceptionInfo185);
            latentStyles1.Append(latentStyleExceptionInfo186);
            latentStyles1.Append(latentStyleExceptionInfo187);
            latentStyles1.Append(latentStyleExceptionInfo188);
            latentStyles1.Append(latentStyleExceptionInfo189);
            latentStyles1.Append(latentStyleExceptionInfo190);
            latentStyles1.Append(latentStyleExceptionInfo191);
            latentStyles1.Append(latentStyleExceptionInfo192);
            latentStyles1.Append(latentStyleExceptionInfo193);
            latentStyles1.Append(latentStyleExceptionInfo194);
            latentStyles1.Append(latentStyleExceptionInfo195);
            latentStyles1.Append(latentStyleExceptionInfo196);
            latentStyles1.Append(latentStyleExceptionInfo197);
            latentStyles1.Append(latentStyleExceptionInfo198);
            latentStyles1.Append(latentStyleExceptionInfo199);
            latentStyles1.Append(latentStyleExceptionInfo200);
            latentStyles1.Append(latentStyleExceptionInfo201);
            latentStyles1.Append(latentStyleExceptionInfo202);
            latentStyles1.Append(latentStyleExceptionInfo203);
            latentStyles1.Append(latentStyleExceptionInfo204);
            latentStyles1.Append(latentStyleExceptionInfo205);
            latentStyles1.Append(latentStyleExceptionInfo206);
            latentStyles1.Append(latentStyleExceptionInfo207);
            latentStyles1.Append(latentStyleExceptionInfo208);
            latentStyles1.Append(latentStyleExceptionInfo209);
            latentStyles1.Append(latentStyleExceptionInfo210);
            latentStyles1.Append(latentStyleExceptionInfo211);
            latentStyles1.Append(latentStyleExceptionInfo212);
            latentStyles1.Append(latentStyleExceptionInfo213);
            latentStyles1.Append(latentStyleExceptionInfo214);
            latentStyles1.Append(latentStyleExceptionInfo215);
            latentStyles1.Append(latentStyleExceptionInfo216);
            latentStyles1.Append(latentStyleExceptionInfo217);
            latentStyles1.Append(latentStyleExceptionInfo218);
            latentStyles1.Append(latentStyleExceptionInfo219);
            latentStyles1.Append(latentStyleExceptionInfo220);
            latentStyles1.Append(latentStyleExceptionInfo221);
            latentStyles1.Append(latentStyleExceptionInfo222);
            latentStyles1.Append(latentStyleExceptionInfo223);
            latentStyles1.Append(latentStyleExceptionInfo224);
            latentStyles1.Append(latentStyleExceptionInfo225);
            latentStyles1.Append(latentStyleExceptionInfo226);
            latentStyles1.Append(latentStyleExceptionInfo227);
            latentStyles1.Append(latentStyleExceptionInfo228);
            latentStyles1.Append(latentStyleExceptionInfo229);
            latentStyles1.Append(latentStyleExceptionInfo230);
            latentStyles1.Append(latentStyleExceptionInfo231);
            latentStyles1.Append(latentStyleExceptionInfo232);
            latentStyles1.Append(latentStyleExceptionInfo233);
            latentStyles1.Append(latentStyleExceptionInfo234);
            latentStyles1.Append(latentStyleExceptionInfo235);
            latentStyles1.Append(latentStyleExceptionInfo236);
            latentStyles1.Append(latentStyleExceptionInfo237);
            latentStyles1.Append(latentStyleExceptionInfo238);
            latentStyles1.Append(latentStyleExceptionInfo239);
            latentStyles1.Append(latentStyleExceptionInfo240);
            latentStyles1.Append(latentStyleExceptionInfo241);
            latentStyles1.Append(latentStyleExceptionInfo242);
            latentStyles1.Append(latentStyleExceptionInfo243);
            latentStyles1.Append(latentStyleExceptionInfo244);
            latentStyles1.Append(latentStyleExceptionInfo245);
            latentStyles1.Append(latentStyleExceptionInfo246);
            latentStyles1.Append(latentStyleExceptionInfo247);
            latentStyles1.Append(latentStyleExceptionInfo248);
            latentStyles1.Append(latentStyleExceptionInfo249);
            latentStyles1.Append(latentStyleExceptionInfo250);
            latentStyles1.Append(latentStyleExceptionInfo251);
            latentStyles1.Append(latentStyleExceptionInfo252);
            latentStyles1.Append(latentStyleExceptionInfo253);
            latentStyles1.Append(latentStyleExceptionInfo254);
            latentStyles1.Append(latentStyleExceptionInfo255);
            latentStyles1.Append(latentStyleExceptionInfo256);
            latentStyles1.Append(latentStyleExceptionInfo257);
            latentStyles1.Append(latentStyleExceptionInfo258);
            latentStyles1.Append(latentStyleExceptionInfo259);
            latentStyles1.Append(latentStyleExceptionInfo260);
            latentStyles1.Append(latentStyleExceptionInfo261);
            latentStyles1.Append(latentStyleExceptionInfo262);
            latentStyles1.Append(latentStyleExceptionInfo263);
            latentStyles1.Append(latentStyleExceptionInfo264);
            latentStyles1.Append(latentStyleExceptionInfo265);
            latentStyles1.Append(latentStyleExceptionInfo266);
            latentStyles1.Append(latentStyleExceptionInfo267);
            latentStyles1.Append(latentStyleExceptionInfo268);
            latentStyles1.Append(latentStyleExceptionInfo269);
            latentStyles1.Append(latentStyleExceptionInfo270);
            latentStyles1.Append(latentStyleExceptionInfo271);
            latentStyles1.Append(latentStyleExceptionInfo272);
            latentStyles1.Append(latentStyleExceptionInfo273);
            latentStyles1.Append(latentStyleExceptionInfo274);
            latentStyles1.Append(latentStyleExceptionInfo275);
            latentStyles1.Append(latentStyleExceptionInfo276);
            latentStyles1.Append(latentStyleExceptionInfo277);
            latentStyles1.Append(latentStyleExceptionInfo278);
            latentStyles1.Append(latentStyleExceptionInfo279);
            latentStyles1.Append(latentStyleExceptionInfo280);
            latentStyles1.Append(latentStyleExceptionInfo281);
            latentStyles1.Append(latentStyleExceptionInfo282);
            latentStyles1.Append(latentStyleExceptionInfo283);
            latentStyles1.Append(latentStyleExceptionInfo284);
            latentStyles1.Append(latentStyleExceptionInfo285);
            latentStyles1.Append(latentStyleExceptionInfo286);
            latentStyles1.Append(latentStyleExceptionInfo287);
            latentStyles1.Append(latentStyleExceptionInfo288);
            latentStyles1.Append(latentStyleExceptionInfo289);
            latentStyles1.Append(latentStyleExceptionInfo290);
            latentStyles1.Append(latentStyleExceptionInfo291);
            latentStyles1.Append(latentStyleExceptionInfo292);
            latentStyles1.Append(latentStyleExceptionInfo293);
            latentStyles1.Append(latentStyleExceptionInfo294);
            latentStyles1.Append(latentStyleExceptionInfo295);
            latentStyles1.Append(latentStyleExceptionInfo296);
            latentStyles1.Append(latentStyleExceptionInfo297);
            latentStyles1.Append(latentStyleExceptionInfo298);
            latentStyles1.Append(latentStyleExceptionInfo299);
            latentStyles1.Append(latentStyleExceptionInfo300);
            latentStyles1.Append(latentStyleExceptionInfo301);
            latentStyles1.Append(latentStyleExceptionInfo302);
            latentStyles1.Append(latentStyleExceptionInfo303);
            latentStyles1.Append(latentStyleExceptionInfo304);
            latentStyles1.Append(latentStyleExceptionInfo305);
            latentStyles1.Append(latentStyleExceptionInfo306);
            latentStyles1.Append(latentStyleExceptionInfo307);
            latentStyles1.Append(latentStyleExceptionInfo308);
            latentStyles1.Append(latentStyleExceptionInfo309);
            latentStyles1.Append(latentStyleExceptionInfo310);
            latentStyles1.Append(latentStyleExceptionInfo311);
            latentStyles1.Append(latentStyleExceptionInfo312);
            latentStyles1.Append(latentStyleExceptionInfo313);
            latentStyles1.Append(latentStyleExceptionInfo314);
            latentStyles1.Append(latentStyleExceptionInfo315);
            latentStyles1.Append(latentStyleExceptionInfo316);
            latentStyles1.Append(latentStyleExceptionInfo317);
            latentStyles1.Append(latentStyleExceptionInfo318);
            latentStyles1.Append(latentStyleExceptionInfo319);
            latentStyles1.Append(latentStyleExceptionInfo320);
            latentStyles1.Append(latentStyleExceptionInfo321);
            latentStyles1.Append(latentStyleExceptionInfo322);
            latentStyles1.Append(latentStyleExceptionInfo323);
            latentStyles1.Append(latentStyleExceptionInfo324);
            latentStyles1.Append(latentStyleExceptionInfo325);
            latentStyles1.Append(latentStyleExceptionInfo326);
            latentStyles1.Append(latentStyleExceptionInfo327);
            latentStyles1.Append(latentStyleExceptionInfo328);
            latentStyles1.Append(latentStyleExceptionInfo329);
            latentStyles1.Append(latentStyleExceptionInfo330);
            latentStyles1.Append(latentStyleExceptionInfo331);
            latentStyles1.Append(latentStyleExceptionInfo332);
            latentStyles1.Append(latentStyleExceptionInfo333);
            latentStyles1.Append(latentStyleExceptionInfo334);
            latentStyles1.Append(latentStyleExceptionInfo335);
            latentStyles1.Append(latentStyleExceptionInfo336);
            latentStyles1.Append(latentStyleExceptionInfo337);
            latentStyles1.Append(latentStyleExceptionInfo338);
            latentStyles1.Append(latentStyleExceptionInfo339);
            latentStyles1.Append(latentStyleExceptionInfo340);
            latentStyles1.Append(latentStyleExceptionInfo341);
            latentStyles1.Append(latentStyleExceptionInfo342);
            latentStyles1.Append(latentStyleExceptionInfo343);
            latentStyles1.Append(latentStyleExceptionInfo344);
            latentStyles1.Append(latentStyleExceptionInfo345);
            latentStyles1.Append(latentStyleExceptionInfo346);
            latentStyles1.Append(latentStyleExceptionInfo347);
            latentStyles1.Append(latentStyleExceptionInfo348);
            latentStyles1.Append(latentStyleExceptionInfo349);
            latentStyles1.Append(latentStyleExceptionInfo350);
            latentStyles1.Append(latentStyleExceptionInfo351);
            latentStyles1.Append(latentStyleExceptionInfo352);
            latentStyles1.Append(latentStyleExceptionInfo353);
            latentStyles1.Append(latentStyleExceptionInfo354);
            latentStyles1.Append(latentStyleExceptionInfo355);
            latentStyles1.Append(latentStyleExceptionInfo356);
            latentStyles1.Append(latentStyleExceptionInfo357);
            latentStyles1.Append(latentStyleExceptionInfo358);
            latentStyles1.Append(latentStyleExceptionInfo359);
            latentStyles1.Append(latentStyleExceptionInfo360);
            latentStyles1.Append(latentStyleExceptionInfo361);
            latentStyles1.Append(latentStyleExceptionInfo362);
            latentStyles1.Append(latentStyleExceptionInfo363);
            latentStyles1.Append(latentStyleExceptionInfo364);
            latentStyles1.Append(latentStyleExceptionInfo365);
            latentStyles1.Append(latentStyleExceptionInfo366);
            latentStyles1.Append(latentStyleExceptionInfo367);
            latentStyles1.Append(latentStyleExceptionInfo368);
            latentStyles1.Append(latentStyleExceptionInfo369);
            latentStyles1.Append(latentStyleExceptionInfo370);
            latentStyles1.Append(latentStyleExceptionInfo371);

            Style style1 = new Style() { Type = StyleValues.Paragraph, StyleId = "Normal", Default = true };
            StyleName styleName1 = new StyleName() { Val = "Normal" };
            PrimaryStyle primaryStyle1 = new PrimaryStyle();

            style1.Append(styleName1);
            style1.Append(primaryStyle1);

            Style style2 = new Style() { Type = StyleValues.Paragraph, StyleId = "Heading1" };
            StyleName styleName2 = new StyleName() { Val = "heading 1" };
            BasedOn basedOn1 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle1 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle1 = new LinkedStyle() { Val = "Heading1Char" };
            UIPriority uIPriority1 = new UIPriority() { Val = 9 };
            PrimaryStyle primaryStyle2 = new PrimaryStyle();
            Rsid rsid1 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties1 = new StyleParagraphProperties();
            KeepNext keepNext4 = new KeepNext();
            KeepLines keepLines1 = new KeepLines();
            SpacingBetweenLines spacingBetweenLines13 = new SpacingBetweenLines() { Before = "240", After = "0" };
            OutlineLevel outlineLevel1 = new OutlineLevel() { Val = 0 };

            styleParagraphProperties1.Append(keepNext4);
            styleParagraphProperties1.Append(keepLines1);
            styleParagraphProperties1.Append(spacingBetweenLines13);
            styleParagraphProperties1.Append(outlineLevel1);

            StyleRunProperties styleRunProperties1 = new StyleRunProperties();
            RunFonts runFonts63 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color10 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };
            FontSize fontSize56 = new FontSize() { Val = "32" };
            FontSizeComplexScript fontSizeComplexScript56 = new FontSizeComplexScript() { Val = "32" };

            styleRunProperties1.Append(runFonts63);
            styleRunProperties1.Append(color10);
            styleRunProperties1.Append(fontSize56);
            styleRunProperties1.Append(fontSizeComplexScript56);

            style2.Append(styleName2);
            style2.Append(basedOn1);
            style2.Append(nextParagraphStyle1);
            style2.Append(linkedStyle1);
            style2.Append(uIPriority1);
            style2.Append(primaryStyle2);
            style2.Append(rsid1);
            style2.Append(styleParagraphProperties1);
            style2.Append(styleRunProperties1);

            Style style3 = new Style() { Type = StyleValues.Paragraph, StyleId = "Heading2" };
            StyleName styleName3 = new StyleName() { Val = "heading 2" };
            BasedOn basedOn2 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle2 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle2 = new LinkedStyle() { Val = "Heading2Char" };
            UIPriority uIPriority2 = new UIPriority() { Val = 9 };
            UnhideWhenUsed unhideWhenUsed1 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle3 = new PrimaryStyle();
            Rsid rsid2 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties2 = new StyleParagraphProperties();
            KeepNext keepNext5 = new KeepNext();
            KeepLines keepLines2 = new KeepLines();
            SpacingBetweenLines spacingBetweenLines14 = new SpacingBetweenLines() { Before = "40", After = "0" };
            OutlineLevel outlineLevel2 = new OutlineLevel() { Val = 1 };

            styleParagraphProperties2.Append(keepNext5);
            styleParagraphProperties2.Append(keepLines2);
            styleParagraphProperties2.Append(spacingBetweenLines14);
            styleParagraphProperties2.Append(outlineLevel2);

            StyleRunProperties styleRunProperties2 = new StyleRunProperties();
            RunFonts runFonts64 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color11 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };
            FontSize fontSize57 = new FontSize() { Val = "26" };
            FontSizeComplexScript fontSizeComplexScript57 = new FontSizeComplexScript() { Val = "26" };

            styleRunProperties2.Append(runFonts64);
            styleRunProperties2.Append(color11);
            styleRunProperties2.Append(fontSize57);
            styleRunProperties2.Append(fontSizeComplexScript57);

            style3.Append(styleName3);
            style3.Append(basedOn2);
            style3.Append(nextParagraphStyle2);
            style3.Append(linkedStyle2);
            style3.Append(uIPriority2);
            style3.Append(unhideWhenUsed1);
            style3.Append(primaryStyle3);
            style3.Append(rsid2);
            style3.Append(styleParagraphProperties2);
            style3.Append(styleRunProperties2);

            Style style4 = new Style() { Type = StyleValues.Paragraph, StyleId = "Heading3" };
            StyleName styleName4 = new StyleName() { Val = "heading 3" };
            BasedOn basedOn3 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle3 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle3 = new LinkedStyle() { Val = "Heading3Char" };
            UIPriority uIPriority3 = new UIPriority() { Val = 9 };
            UnhideWhenUsed unhideWhenUsed2 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle4 = new PrimaryStyle();
            Rsid rsid3 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties3 = new StyleParagraphProperties();
            KeepNext keepNext6 = new KeepNext();
            KeepLines keepLines3 = new KeepLines();
            SpacingBetweenLines spacingBetweenLines15 = new SpacingBetweenLines() { Before = "40", After = "0" };
            OutlineLevel outlineLevel3 = new OutlineLevel() { Val = 2 };

            styleParagraphProperties3.Append(keepNext6);
            styleParagraphProperties3.Append(keepLines3);
            styleParagraphProperties3.Append(spacingBetweenLines15);
            styleParagraphProperties3.Append(outlineLevel3);

            StyleRunProperties styleRunProperties3 = new StyleRunProperties();
            RunFonts runFonts65 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color12 = new Color() { Val = "1F4D78", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "7F" };
            FontSize fontSize58 = new FontSize() { Val = "24" };
            FontSizeComplexScript fontSizeComplexScript58 = new FontSizeComplexScript() { Val = "24" };

            styleRunProperties3.Append(runFonts65);
            styleRunProperties3.Append(color12);
            styleRunProperties3.Append(fontSize58);
            styleRunProperties3.Append(fontSizeComplexScript58);

            style4.Append(styleName4);
            style4.Append(basedOn3);
            style4.Append(nextParagraphStyle3);
            style4.Append(linkedStyle3);
            style4.Append(uIPriority3);
            style4.Append(unhideWhenUsed2);
            style4.Append(primaryStyle4);
            style4.Append(rsid3);
            style4.Append(styleParagraphProperties3);
            style4.Append(styleRunProperties3);

            Style style5 = new Style() { Type = StyleValues.Paragraph, StyleId = "Heading4" };
            StyleName styleName5 = new StyleName() { Val = "heading 4" };
            BasedOn basedOn4 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle4 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle4 = new LinkedStyle() { Val = "Heading4Char" };
            UIPriority uIPriority4 = new UIPriority() { Val = 9 };
            UnhideWhenUsed unhideWhenUsed3 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle5 = new PrimaryStyle();
            Rsid rsid4 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties4 = new StyleParagraphProperties();
            KeepNext keepNext7 = new KeepNext();
            KeepLines keepLines4 = new KeepLines();
            SpacingBetweenLines spacingBetweenLines16 = new SpacingBetweenLines() { Before = "40", After = "0" };
            OutlineLevel outlineLevel4 = new OutlineLevel() { Val = 3 };

            styleParagraphProperties4.Append(keepNext7);
            styleParagraphProperties4.Append(keepLines4);
            styleParagraphProperties4.Append(spacingBetweenLines16);
            styleParagraphProperties4.Append(outlineLevel4);

            StyleRunProperties styleRunProperties4 = new StyleRunProperties();
            RunFonts runFonts66 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic3 = new Italic();
            ItalicComplexScript italicComplexScript1 = new ItalicComplexScript();
            Color color13 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties4.Append(runFonts66);
            styleRunProperties4.Append(italic3);
            styleRunProperties4.Append(italicComplexScript1);
            styleRunProperties4.Append(color13);

            style5.Append(styleName5);
            style5.Append(basedOn4);
            style5.Append(nextParagraphStyle4);
            style5.Append(linkedStyle4);
            style5.Append(uIPriority4);
            style5.Append(unhideWhenUsed3);
            style5.Append(primaryStyle5);
            style5.Append(rsid4);
            style5.Append(styleParagraphProperties4);
            style5.Append(styleRunProperties4);

            Style style6 = new Style() { Type = StyleValues.Paragraph, StyleId = "Heading5" };
            StyleName styleName6 = new StyleName() { Val = "heading 5" };
            BasedOn basedOn5 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle5 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle5 = new LinkedStyle() { Val = "Heading5Char" };
            UIPriority uIPriority5 = new UIPriority() { Val = 9 };
            UnhideWhenUsed unhideWhenUsed4 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle6 = new PrimaryStyle();
            Rsid rsid5 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties5 = new StyleParagraphProperties();
            KeepNext keepNext8 = new KeepNext();
            KeepLines keepLines5 = new KeepLines();
            SpacingBetweenLines spacingBetweenLines17 = new SpacingBetweenLines() { Before = "40", After = "0" };
            OutlineLevel outlineLevel5 = new OutlineLevel() { Val = 4 };

            styleParagraphProperties5.Append(keepNext8);
            styleParagraphProperties5.Append(keepLines5);
            styleParagraphProperties5.Append(spacingBetweenLines17);
            styleParagraphProperties5.Append(outlineLevel5);

            StyleRunProperties styleRunProperties5 = new StyleRunProperties();
            RunFonts runFonts67 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color14 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties5.Append(runFonts67);
            styleRunProperties5.Append(color14);

            style6.Append(styleName6);
            style6.Append(basedOn5);
            style6.Append(nextParagraphStyle5);
            style6.Append(linkedStyle5);
            style6.Append(uIPriority5);
            style6.Append(unhideWhenUsed4);
            style6.Append(primaryStyle6);
            style6.Append(rsid5);
            style6.Append(styleParagraphProperties5);
            style6.Append(styleRunProperties5);

            Style style7 = new Style() { Type = StyleValues.Character, StyleId = "DefaultParagraphFont", Default = true };
            StyleName styleName7 = new StyleName() { Val = "Default Paragraph Font" };
            UIPriority uIPriority6 = new UIPriority() { Val = 1 };
            SemiHidden semiHidden1 = new SemiHidden();
            UnhideWhenUsed unhideWhenUsed5 = new UnhideWhenUsed();

            style7.Append(styleName7);
            style7.Append(uIPriority6);
            style7.Append(semiHidden1);
            style7.Append(unhideWhenUsed5);

            Style style8 = new Style() { Type = StyleValues.Table, StyleId = "TableNormal", Default = true };
            StyleName styleName8 = new StyleName() { Val = "Normal Table" };
            UIPriority uIPriority7 = new UIPriority() { Val = 99 };
            SemiHidden semiHidden2 = new SemiHidden();
            UnhideWhenUsed unhideWhenUsed6 = new UnhideWhenUsed();

            StyleTableProperties styleTableProperties1 = new StyleTableProperties();
            TableIndentation tableIndentation1 = new TableIndentation() { Width = 0, Type = TableWidthUnitValues.Dxa };

            TableCellMarginDefault tableCellMarginDefault1 = new TableCellMarginDefault();
            TopMargin topMargin1 = new TopMargin() { Width = "0", Type = TableWidthUnitValues.Dxa };
            TableCellLeftMargin tableCellLeftMargin1 = new TableCellLeftMargin() { Width = 108, Type = TableWidthValues.Dxa };
            BottomMargin bottomMargin1 = new BottomMargin() { Width = "0", Type = TableWidthUnitValues.Dxa };
            TableCellRightMargin tableCellRightMargin1 = new TableCellRightMargin() { Width = 108, Type = TableWidthValues.Dxa };

            tableCellMarginDefault1.Append(topMargin1);
            tableCellMarginDefault1.Append(tableCellLeftMargin1);
            tableCellMarginDefault1.Append(bottomMargin1);
            tableCellMarginDefault1.Append(tableCellRightMargin1);

            styleTableProperties1.Append(tableIndentation1);
            styleTableProperties1.Append(tableCellMarginDefault1);

            style8.Append(styleName8);
            style8.Append(uIPriority7);
            style8.Append(semiHidden2);
            style8.Append(unhideWhenUsed6);
            style8.Append(styleTableProperties1);

            Style style9 = new Style() { Type = StyleValues.Numbering, StyleId = "NoList", Default = true };
            StyleName styleName9 = new StyleName() { Val = "No List" };
            UIPriority uIPriority8 = new UIPriority() { Val = 99 };
            SemiHidden semiHidden3 = new SemiHidden();
            UnhideWhenUsed unhideWhenUsed7 = new UnhideWhenUsed();

            style9.Append(styleName9);
            style9.Append(uIPriority8);
            style9.Append(semiHidden3);
            style9.Append(unhideWhenUsed7);

            Style style10 = new Style() { Type = StyleValues.Paragraph, StyleId = "ListParagraph" };
            StyleName styleName10 = new StyleName() { Val = "List Paragraph" };
            BasedOn basedOn6 = new BasedOn() { Val = "Normal" };
            UIPriority uIPriority9 = new UIPriority() { Val = 34 };
            PrimaryStyle primaryStyle7 = new PrimaryStyle();
            Rsid rsid6 = new Rsid() { Val = "00985AFA" };

            StyleParagraphProperties styleParagraphProperties6 = new StyleParagraphProperties();
            Indentation indentation5 = new Indentation() { Start = "720" };
            ContextualSpacing contextualSpacing1 = new ContextualSpacing();

            styleParagraphProperties6.Append(indentation5);
            styleParagraphProperties6.Append(contextualSpacing1);

            style10.Append(styleName10);
            style10.Append(basedOn6);
            style10.Append(uIPriority9);
            style10.Append(primaryStyle7);
            style10.Append(rsid6);
            style10.Append(styleParagraphProperties6);

            Style style11 = new Style() { Type = StyleValues.Paragraph, StyleId = "NoSpacing" };
            StyleName styleName11 = new StyleName() { Val = "No Spacing" };
            UIPriority uIPriority10 = new UIPriority() { Val = 1 };
            PrimaryStyle primaryStyle8 = new PrimaryStyle();
            Rsid rsid7 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties7 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines18 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties7.Append(spacingBetweenLines18);

            style11.Append(styleName11);
            style11.Append(uIPriority10);
            style11.Append(primaryStyle8);
            style11.Append(rsid7);
            style11.Append(styleParagraphProperties7);

            Style style12 = new Style() { Type = StyleValues.Character, StyleId = "Heading1Char", CustomStyle = true };
            StyleName styleName12 = new StyleName() { Val = "Heading 1 Char" };
            BasedOn basedOn7 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle6 = new LinkedStyle() { Val = "Heading1" };
            UIPriority uIPriority11 = new UIPriority() { Val = 9 };
            Rsid rsid8 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties6 = new StyleRunProperties();
            RunFonts runFonts68 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color15 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };
            FontSize fontSize59 = new FontSize() { Val = "32" };
            FontSizeComplexScript fontSizeComplexScript59 = new FontSizeComplexScript() { Val = "32" };

            styleRunProperties6.Append(runFonts68);
            styleRunProperties6.Append(color15);
            styleRunProperties6.Append(fontSize59);
            styleRunProperties6.Append(fontSizeComplexScript59);

            style12.Append(styleName12);
            style12.Append(basedOn7);
            style12.Append(linkedStyle6);
            style12.Append(uIPriority11);
            style12.Append(rsid8);
            style12.Append(styleRunProperties6);

            Style style13 = new Style() { Type = StyleValues.Character, StyleId = "Heading2Char", CustomStyle = true };
            StyleName styleName13 = new StyleName() { Val = "Heading 2 Char" };
            BasedOn basedOn8 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle7 = new LinkedStyle() { Val = "Heading2" };
            UIPriority uIPriority12 = new UIPriority() { Val = 9 };
            Rsid rsid9 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties7 = new StyleRunProperties();
            RunFonts runFonts69 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color16 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };
            FontSize fontSize60 = new FontSize() { Val = "26" };
            FontSizeComplexScript fontSizeComplexScript60 = new FontSizeComplexScript() { Val = "26" };

            styleRunProperties7.Append(runFonts69);
            styleRunProperties7.Append(color16);
            styleRunProperties7.Append(fontSize60);
            styleRunProperties7.Append(fontSizeComplexScript60);

            style13.Append(styleName13);
            style13.Append(basedOn8);
            style13.Append(linkedStyle7);
            style13.Append(uIPriority12);
            style13.Append(rsid9);
            style13.Append(styleRunProperties7);

            Style style14 = new Style() { Type = StyleValues.Character, StyleId = "Heading3Char", CustomStyle = true };
            StyleName styleName14 = new StyleName() { Val = "Heading 3 Char" };
            BasedOn basedOn9 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle8 = new LinkedStyle() { Val = "Heading3" };
            UIPriority uIPriority13 = new UIPriority() { Val = 9 };
            Rsid rsid10 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties8 = new StyleRunProperties();
            RunFonts runFonts70 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color17 = new Color() { Val = "1F4D78", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "7F" };
            FontSize fontSize61 = new FontSize() { Val = "24" };
            FontSizeComplexScript fontSizeComplexScript61 = new FontSizeComplexScript() { Val = "24" };

            styleRunProperties8.Append(runFonts70);
            styleRunProperties8.Append(color17);
            styleRunProperties8.Append(fontSize61);
            styleRunProperties8.Append(fontSizeComplexScript61);

            style14.Append(styleName14);
            style14.Append(basedOn9);
            style14.Append(linkedStyle8);
            style14.Append(uIPriority13);
            style14.Append(rsid10);
            style14.Append(styleRunProperties8);

            Style style15 = new Style() { Type = StyleValues.Character, StyleId = "Heading4Char", CustomStyle = true };
            StyleName styleName15 = new StyleName() { Val = "Heading 4 Char" };
            BasedOn basedOn10 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle9 = new LinkedStyle() { Val = "Heading4" };
            UIPriority uIPriority14 = new UIPriority() { Val = 9 };
            Rsid rsid11 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties9 = new StyleRunProperties();
            RunFonts runFonts71 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic4 = new Italic();
            ItalicComplexScript italicComplexScript2 = new ItalicComplexScript();
            Color color18 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties9.Append(runFonts71);
            styleRunProperties9.Append(italic4);
            styleRunProperties9.Append(italicComplexScript2);
            styleRunProperties9.Append(color18);

            style15.Append(styleName15);
            style15.Append(basedOn10);
            style15.Append(linkedStyle9);
            style15.Append(uIPriority14);
            style15.Append(rsid11);
            style15.Append(styleRunProperties9);

            Style style16 = new Style() { Type = StyleValues.Character, StyleId = "Heading5Char", CustomStyle = true };
            StyleName styleName16 = new StyleName() { Val = "Heading 5 Char" };
            BasedOn basedOn11 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle10 = new LinkedStyle() { Val = "Heading5" };
            UIPriority uIPriority15 = new UIPriority() { Val = 9 };
            Rsid rsid12 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties10 = new StyleRunProperties();
            RunFonts runFonts72 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Color color19 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties10.Append(runFonts72);
            styleRunProperties10.Append(color19);

            style16.Append(styleName16);
            style16.Append(basedOn11);
            style16.Append(linkedStyle10);
            style16.Append(uIPriority15);
            style16.Append(rsid12);
            style16.Append(styleRunProperties10);

            Style style17 = new Style() { Type = StyleValues.Paragraph, StyleId = "Title" };
            StyleName styleName17 = new StyleName() { Val = "Title" };
            BasedOn basedOn12 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle6 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle11 = new LinkedStyle() { Val = "TitleChar" };
            UIPriority uIPriority16 = new UIPriority() { Val = 10 };
            PrimaryStyle primaryStyle9 = new PrimaryStyle();
            Rsid rsid13 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties8 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines19 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };
            ContextualSpacing contextualSpacing2 = new ContextualSpacing();

            styleParagraphProperties8.Append(spacingBetweenLines19);
            styleParagraphProperties8.Append(contextualSpacing2);

            StyleRunProperties styleRunProperties11 = new StyleRunProperties();
            RunFonts runFonts73 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Spacing spacing1 = new Spacing() { Val = -10 };
            Kern kern1 = new Kern() { Val = (UInt32Value)28U };
            FontSize fontSize62 = new FontSize() { Val = "56" };
            FontSizeComplexScript fontSizeComplexScript62 = new FontSizeComplexScript() { Val = "56" };

            styleRunProperties11.Append(runFonts73);
            styleRunProperties11.Append(spacing1);
            styleRunProperties11.Append(kern1);
            styleRunProperties11.Append(fontSize62);
            styleRunProperties11.Append(fontSizeComplexScript62);

            style17.Append(styleName17);
            style17.Append(basedOn12);
            style17.Append(nextParagraphStyle6);
            style17.Append(linkedStyle11);
            style17.Append(uIPriority16);
            style17.Append(primaryStyle9);
            style17.Append(rsid13);
            style17.Append(styleParagraphProperties8);
            style17.Append(styleRunProperties11);

            Style style18 = new Style() { Type = StyleValues.Character, StyleId = "TitleChar", CustomStyle = true };
            StyleName styleName18 = new StyleName() { Val = "Title Char" };
            BasedOn basedOn13 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle12 = new LinkedStyle() { Val = "Title" };
            UIPriority uIPriority17 = new UIPriority() { Val = 10 };
            Rsid rsid14 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties12 = new StyleRunProperties();
            RunFonts runFonts74 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Spacing spacing2 = new Spacing() { Val = -10 };
            Kern kern2 = new Kern() { Val = (UInt32Value)28U };
            FontSize fontSize63 = new FontSize() { Val = "56" };
            FontSizeComplexScript fontSizeComplexScript63 = new FontSizeComplexScript() { Val = "56" };

            styleRunProperties12.Append(runFonts74);
            styleRunProperties12.Append(spacing2);
            styleRunProperties12.Append(kern2);
            styleRunProperties12.Append(fontSize63);
            styleRunProperties12.Append(fontSizeComplexScript63);

            style18.Append(styleName18);
            style18.Append(basedOn13);
            style18.Append(linkedStyle12);
            style18.Append(uIPriority17);
            style18.Append(rsid14);
            style18.Append(styleRunProperties12);

            Style style19 = new Style() { Type = StyleValues.Paragraph, StyleId = "Subtitle" };
            StyleName styleName19 = new StyleName() { Val = "Subtitle" };
            BasedOn basedOn14 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle7 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle13 = new LinkedStyle() { Val = "SubtitleChar" };
            UIPriority uIPriority18 = new UIPriority() { Val = 11 };
            PrimaryStyle primaryStyle10 = new PrimaryStyle();
            Rsid rsid15 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties9 = new StyleParagraphProperties();

            NumberingProperties numberingProperties10 = new NumberingProperties();
            NumberingLevelReference numberingLevelReference10 = new NumberingLevelReference() { Val = 1 };

            numberingProperties10.Append(numberingLevelReference10);

            styleParagraphProperties9.Append(numberingProperties10);

            StyleRunProperties styleRunProperties13 = new StyleRunProperties();
            RunFonts runFonts75 = new RunFonts() { EastAsiaTheme = ThemeFontValues.MinorEastAsia };
            Color color20 = new Color() { Val = "5A5A5A", ThemeColor = ThemeColorValues.Text1, ThemeTint = "A5" };
            Spacing spacing3 = new Spacing() { Val = 15 };

            styleRunProperties13.Append(runFonts75);
            styleRunProperties13.Append(color20);
            styleRunProperties13.Append(spacing3);

            style19.Append(styleName19);
            style19.Append(basedOn14);
            style19.Append(nextParagraphStyle7);
            style19.Append(linkedStyle13);
            style19.Append(uIPriority18);
            style19.Append(primaryStyle10);
            style19.Append(rsid15);
            style19.Append(styleParagraphProperties9);
            style19.Append(styleRunProperties13);

            Style style20 = new Style() { Type = StyleValues.Character, StyleId = "SubtitleChar", CustomStyle = true };
            StyleName styleName20 = new StyleName() { Val = "Subtitle Char" };
            BasedOn basedOn15 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle14 = new LinkedStyle() { Val = "Subtitle" };
            UIPriority uIPriority19 = new UIPriority() { Val = 11 };
            Rsid rsid16 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties14 = new StyleRunProperties();
            RunFonts runFonts76 = new RunFonts() { EastAsiaTheme = ThemeFontValues.MinorEastAsia };
            Color color21 = new Color() { Val = "5A5A5A", ThemeColor = ThemeColorValues.Text1, ThemeTint = "A5" };
            Spacing spacing4 = new Spacing() { Val = 15 };

            styleRunProperties14.Append(runFonts76);
            styleRunProperties14.Append(color21);
            styleRunProperties14.Append(spacing4);

            style20.Append(styleName20);
            style20.Append(basedOn15);
            style20.Append(linkedStyle14);
            style20.Append(uIPriority19);
            style20.Append(rsid16);
            style20.Append(styleRunProperties14);

            Style style21 = new Style() { Type = StyleValues.Character, StyleId = "SubtleEmphasis" };
            StyleName styleName21 = new StyleName() { Val = "Subtle Emphasis" };
            BasedOn basedOn16 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority20 = new UIPriority() { Val = 19 };
            PrimaryStyle primaryStyle11 = new PrimaryStyle();
            Rsid rsid17 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties15 = new StyleRunProperties();
            Italic italic5 = new Italic();
            ItalicComplexScript italicComplexScript3 = new ItalicComplexScript();
            Color color22 = new Color() { Val = "404040", ThemeColor = ThemeColorValues.Text1, ThemeTint = "BF" };

            styleRunProperties15.Append(italic5);
            styleRunProperties15.Append(italicComplexScript3);
            styleRunProperties15.Append(color22);

            style21.Append(styleName21);
            style21.Append(basedOn16);
            style21.Append(uIPriority20);
            style21.Append(primaryStyle11);
            style21.Append(rsid17);
            style21.Append(styleRunProperties15);

            Style style22 = new Style() { Type = StyleValues.Character, StyleId = "Emphasis" };
            StyleName styleName22 = new StyleName() { Val = "Emphasis" };
            BasedOn basedOn17 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority21 = new UIPriority() { Val = 20 };
            PrimaryStyle primaryStyle12 = new PrimaryStyle();
            Rsid rsid18 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties16 = new StyleRunProperties();
            Italic italic6 = new Italic();
            ItalicComplexScript italicComplexScript4 = new ItalicComplexScript();

            styleRunProperties16.Append(italic6);
            styleRunProperties16.Append(italicComplexScript4);

            style22.Append(styleName22);
            style22.Append(basedOn17);
            style22.Append(uIPriority21);
            style22.Append(primaryStyle12);
            style22.Append(rsid18);
            style22.Append(styleRunProperties16);

            Style style23 = new Style() { Type = StyleValues.Character, StyleId = "IntenseEmphasis" };
            StyleName styleName23 = new StyleName() { Val = "Intense Emphasis" };
            BasedOn basedOn18 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority22 = new UIPriority() { Val = 21 };
            PrimaryStyle primaryStyle13 = new PrimaryStyle();
            Rsid rsid19 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties17 = new StyleRunProperties();
            Italic italic7 = new Italic();
            ItalicComplexScript italicComplexScript5 = new ItalicComplexScript();
            Color color23 = new Color() { Val = "5B9BD5", ThemeColor = ThemeColorValues.Accent1 };

            styleRunProperties17.Append(italic7);
            styleRunProperties17.Append(italicComplexScript5);
            styleRunProperties17.Append(color23);

            style23.Append(styleName23);
            style23.Append(basedOn18);
            style23.Append(uIPriority22);
            style23.Append(primaryStyle13);
            style23.Append(rsid19);
            style23.Append(styleRunProperties17);

            Style style24 = new Style() { Type = StyleValues.Character, StyleId = "Strong" };
            StyleName styleName24 = new StyleName() { Val = "Strong" };
            BasedOn basedOn19 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority23 = new UIPriority() { Val = 22 };
            PrimaryStyle primaryStyle14 = new PrimaryStyle();
            Rsid rsid20 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties18 = new StyleRunProperties();
            Bold bold5 = new Bold();
            BoldComplexScript boldComplexScript3 = new BoldComplexScript();

            styleRunProperties18.Append(bold5);
            styleRunProperties18.Append(boldComplexScript3);

            style24.Append(styleName24);
            style24.Append(basedOn19);
            style24.Append(uIPriority23);
            style24.Append(primaryStyle14);
            style24.Append(rsid20);
            style24.Append(styleRunProperties18);

            Style style25 = new Style() { Type = StyleValues.Paragraph, StyleId = "Quote" };
            StyleName styleName25 = new StyleName() { Val = "Quote" };
            BasedOn basedOn20 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle8 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle15 = new LinkedStyle() { Val = "QuoteChar" };
            UIPriority uIPriority24 = new UIPriority() { Val = 29 };
            PrimaryStyle primaryStyle15 = new PrimaryStyle();
            Rsid rsid21 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties10 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines20 = new SpacingBetweenLines() { Before = "200" };
            Indentation indentation6 = new Indentation() { Start = "864", End = "864" };
            Justification justification4 = new Justification() { Val = JustificationValues.Center };

            styleParagraphProperties10.Append(spacingBetweenLines20);
            styleParagraphProperties10.Append(indentation6);
            styleParagraphProperties10.Append(justification4);

            StyleRunProperties styleRunProperties19 = new StyleRunProperties();
            Italic italic8 = new Italic();
            ItalicComplexScript italicComplexScript6 = new ItalicComplexScript();
            Color color24 = new Color() { Val = "404040", ThemeColor = ThemeColorValues.Text1, ThemeTint = "BF" };

            styleRunProperties19.Append(italic8);
            styleRunProperties19.Append(italicComplexScript6);
            styleRunProperties19.Append(color24);

            style25.Append(styleName25);
            style25.Append(basedOn20);
            style25.Append(nextParagraphStyle8);
            style25.Append(linkedStyle15);
            style25.Append(uIPriority24);
            style25.Append(primaryStyle15);
            style25.Append(rsid21);
            style25.Append(styleParagraphProperties10);
            style25.Append(styleRunProperties19);

            Style style26 = new Style() { Type = StyleValues.Character, StyleId = "QuoteChar", CustomStyle = true };
            StyleName styleName26 = new StyleName() { Val = "Quote Char" };
            BasedOn basedOn21 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle16 = new LinkedStyle() { Val = "Quote" };
            UIPriority uIPriority25 = new UIPriority() { Val = 29 };
            Rsid rsid22 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties20 = new StyleRunProperties();
            Italic italic9 = new Italic();
            ItalicComplexScript italicComplexScript7 = new ItalicComplexScript();
            Color color25 = new Color() { Val = "404040", ThemeColor = ThemeColorValues.Text1, ThemeTint = "BF" };

            styleRunProperties20.Append(italic9);
            styleRunProperties20.Append(italicComplexScript7);
            styleRunProperties20.Append(color25);

            style26.Append(styleName26);
            style26.Append(basedOn21);
            style26.Append(linkedStyle16);
            style26.Append(uIPriority25);
            style26.Append(rsid22);
            style26.Append(styleRunProperties20);

            Style style27 = new Style() { Type = StyleValues.Paragraph, StyleId = "IntenseQuote" };
            StyleName styleName27 = new StyleName() { Val = "Intense Quote" };
            BasedOn basedOn22 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle9 = new NextParagraphStyle() { Val = "Normal" };
            LinkedStyle linkedStyle17 = new LinkedStyle() { Val = "IntenseQuoteChar" };
            UIPriority uIPriority26 = new UIPriority() { Val = 30 };
            PrimaryStyle primaryStyle16 = new PrimaryStyle();
            Rsid rsid23 = new Rsid() { Val = "00BB13F0" };

            StyleParagraphProperties styleParagraphProperties11 = new StyleParagraphProperties();

            ParagraphBorders paragraphBorders3 = new ParagraphBorders();
            TopBorder topBorder2 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)10U };
            BottomBorder bottomBorder3 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)10U };

            paragraphBorders3.Append(topBorder2);
            paragraphBorders3.Append(bottomBorder3);
            SpacingBetweenLines spacingBetweenLines21 = new SpacingBetweenLines() { Before = "360", After = "360" };
            Indentation indentation7 = new Indentation() { Start = "864", End = "864" };
            Justification justification5 = new Justification() { Val = JustificationValues.Center };

            styleParagraphProperties11.Append(paragraphBorders3);
            styleParagraphProperties11.Append(spacingBetweenLines21);
            styleParagraphProperties11.Append(indentation7);
            styleParagraphProperties11.Append(justification5);

            StyleRunProperties styleRunProperties21 = new StyleRunProperties();
            Italic italic10 = new Italic();
            ItalicComplexScript italicComplexScript8 = new ItalicComplexScript();
            Color color26 = new Color() { Val = "5B9BD5", ThemeColor = ThemeColorValues.Accent1 };

            styleRunProperties21.Append(italic10);
            styleRunProperties21.Append(italicComplexScript8);
            styleRunProperties21.Append(color26);

            style27.Append(styleName27);
            style27.Append(basedOn22);
            style27.Append(nextParagraphStyle9);
            style27.Append(linkedStyle17);
            style27.Append(uIPriority26);
            style27.Append(primaryStyle16);
            style27.Append(rsid23);
            style27.Append(styleParagraphProperties11);
            style27.Append(styleRunProperties21);

            Style style28 = new Style() { Type = StyleValues.Character, StyleId = "IntenseQuoteChar", CustomStyle = true };
            StyleName styleName28 = new StyleName() { Val = "Intense Quote Char" };
            BasedOn basedOn23 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle18 = new LinkedStyle() { Val = "IntenseQuote" };
            UIPriority uIPriority27 = new UIPriority() { Val = 30 };
            Rsid rsid24 = new Rsid() { Val = "00BB13F0" };

            StyleRunProperties styleRunProperties22 = new StyleRunProperties();
            Italic italic11 = new Italic();
            ItalicComplexScript italicComplexScript9 = new ItalicComplexScript();
            Color color27 = new Color() { Val = "5B9BD5", ThemeColor = ThemeColorValues.Accent1 };

            styleRunProperties22.Append(italic11);
            styleRunProperties22.Append(italicComplexScript9);
            styleRunProperties22.Append(color27);

            style28.Append(styleName28);
            style28.Append(basedOn23);
            style28.Append(linkedStyle18);
            style28.Append(uIPriority27);
            style28.Append(rsid24);
            style28.Append(styleRunProperties22);

            Style style29 = new Style() { Type = StyleValues.Character, StyleId = "BookTitle" };
            StyleName styleName29 = new StyleName() { Val = "Book Title" };
            BasedOn basedOn24 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority28 = new UIPriority() { Val = 33 };
            PrimaryStyle primaryStyle17 = new PrimaryStyle();
            Rsid rsid25 = new Rsid() { Val = "005A6524" };

            StyleRunProperties styleRunProperties23 = new StyleRunProperties();
            Bold bold6 = new Bold();
            BoldComplexScript boldComplexScript4 = new BoldComplexScript();
            Italic italic12 = new Italic();
            ItalicComplexScript italicComplexScript10 = new ItalicComplexScript();
            Spacing spacing5 = new Spacing() { Val = 5 };

            styleRunProperties23.Append(bold6);
            styleRunProperties23.Append(boldComplexScript4);
            styleRunProperties23.Append(italic12);
            styleRunProperties23.Append(italicComplexScript10);
            styleRunProperties23.Append(spacing5);

            style29.Append(styleName29);
            style29.Append(basedOn24);
            style29.Append(uIPriority28);
            style29.Append(primaryStyle17);
            style29.Append(rsid25);
            style29.Append(styleRunProperties23);

            Style style30 = new Style() { Type = StyleValues.Character, StyleId = "IntenseReference" };
            StyleName styleName30 = new StyleName() { Val = "Intense Reference" };
            BasedOn basedOn25 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority29 = new UIPriority() { Val = 32 };
            PrimaryStyle primaryStyle18 = new PrimaryStyle();
            Rsid rsid26 = new Rsid() { Val = "005A6524" };

            StyleRunProperties styleRunProperties24 = new StyleRunProperties();
            Bold bold7 = new Bold();
            BoldComplexScript boldComplexScript5 = new BoldComplexScript();
            SmallCaps smallCaps1 = new SmallCaps();
            Color color28 = new Color() { Val = "5B9BD5", ThemeColor = ThemeColorValues.Accent1 };
            Spacing spacing6 = new Spacing() { Val = 5 };

            styleRunProperties24.Append(bold7);
            styleRunProperties24.Append(boldComplexScript5);
            styleRunProperties24.Append(smallCaps1);
            styleRunProperties24.Append(color28);
            styleRunProperties24.Append(spacing6);

            style30.Append(styleName30);
            style30.Append(basedOn25);
            style30.Append(uIPriority29);
            style30.Append(primaryStyle18);
            style30.Append(rsid26);
            style30.Append(styleRunProperties24);

            Style style31 = new Style() { Type = StyleValues.Character, StyleId = "SubtleReference" };
            StyleName styleName31 = new StyleName() { Val = "Subtle Reference" };
            BasedOn basedOn26 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority30 = new UIPriority() { Val = 31 };
            PrimaryStyle primaryStyle19 = new PrimaryStyle();
            Rsid rsid27 = new Rsid() { Val = "005A6524" };

            StyleRunProperties styleRunProperties25 = new StyleRunProperties();
            SmallCaps smallCaps2 = new SmallCaps();
            Color color29 = new Color() { Val = "5A5A5A", ThemeColor = ThemeColorValues.Text1, ThemeTint = "A5" };

            styleRunProperties25.Append(smallCaps2);
            styleRunProperties25.Append(color29);

            style31.Append(styleName31);
            style31.Append(basedOn26);
            style31.Append(uIPriority30);
            style31.Append(primaryStyle19);
            style31.Append(rsid27);
            style31.Append(styleRunProperties25);

            Style style32 = new Style() { Type = StyleValues.Table, StyleId = "TableGrid" };
            StyleName styleName32 = new StyleName() { Val = "Table Grid" };
            BasedOn basedOn27 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority31 = new UIPriority() { Val = 39 };
            Rsid rsid28 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties12 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines22 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties12.Append(spacingBetweenLines22);

            StyleTableProperties styleTableProperties2 = new StyleTableProperties();

            TableBorders tableBorders1 = new TableBorders();
            TopBorder topBorder3 = new TopBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder2 = new LeftBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder4 = new BottomBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder2 = new RightBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder1 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder1 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "auto", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders1.Append(topBorder3);
            tableBorders1.Append(leftBorder2);
            tableBorders1.Append(bottomBorder4);
            tableBorders1.Append(rightBorder2);
            tableBorders1.Append(insideHorizontalBorder1);
            tableBorders1.Append(insideVerticalBorder1);

            styleTableProperties2.Append(tableBorders1);

            style32.Append(styleName32);
            style32.Append(basedOn27);
            style32.Append(uIPriority31);
            style32.Append(rsid28);
            style32.Append(styleParagraphProperties12);
            style32.Append(styleTableProperties2);

            Style style33 = new Style() { Type = StyleValues.Table, StyleId = "TableGridLight" };
            StyleName styleName33 = new StyleName() { Val = "Grid Table Light" };
            BasedOn basedOn28 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority32 = new UIPriority() { Val = 40 };
            Rsid rsid29 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties13 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines23 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties13.Append(spacingBetweenLines23);

            StyleTableProperties styleTableProperties3 = new StyleTableProperties();

            TableBorders tableBorders2 = new TableBorders();
            TopBorder topBorder4 = new TopBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder3 = new LeftBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder5 = new BottomBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder3 = new RightBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder2 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder2 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders2.Append(topBorder4);
            tableBorders2.Append(leftBorder3);
            tableBorders2.Append(bottomBorder5);
            tableBorders2.Append(rightBorder3);
            tableBorders2.Append(insideHorizontalBorder2);
            tableBorders2.Append(insideVerticalBorder2);

            styleTableProperties3.Append(tableBorders2);

            style33.Append(styleName33);
            style33.Append(basedOn28);
            style33.Append(uIPriority32);
            style33.Append(rsid29);
            style33.Append(styleParagraphProperties13);
            style33.Append(styleTableProperties3);

            Style style34 = new Style() { Type = StyleValues.Table, StyleId = "PlainTable1" };
            StyleName styleName34 = new StyleName() { Val = "Plain Table 1" };
            BasedOn basedOn29 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority33 = new UIPriority() { Val = 41 };
            Rsid rsid30 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties14 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines24 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties14.Append(spacingBetweenLines24);

            StyleTableProperties styleTableProperties4 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize1 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize1 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders3 = new TableBorders();
            TopBorder topBorder5 = new TopBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder4 = new LeftBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder6 = new BottomBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder4 = new RightBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder3 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder3 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders3.Append(topBorder5);
            tableBorders3.Append(leftBorder4);
            tableBorders3.Append(bottomBorder6);
            tableBorders3.Append(rightBorder4);
            tableBorders3.Append(insideHorizontalBorder3);
            tableBorders3.Append(insideVerticalBorder3);

            styleTableProperties4.Append(tableStyleRowBandSize1);
            styleTableProperties4.Append(tableStyleColumnBandSize1);
            styleTableProperties4.Append(tableBorders3);

            TableStyleProperties tableStyleProperties1 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle2 = new RunPropertiesBaseStyle();
            Bold bold8 = new Bold();
            BoldComplexScript boldComplexScript6 = new BoldComplexScript();

            runPropertiesBaseStyle2.Append(bold8);
            runPropertiesBaseStyle2.Append(boldComplexScript6);

            tableStyleProperties1.Append(runPropertiesBaseStyle2);

            TableStyleProperties tableStyleProperties2 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle3 = new RunPropertiesBaseStyle();
            Bold bold9 = new Bold();
            BoldComplexScript boldComplexScript7 = new BoldComplexScript();

            runPropertiesBaseStyle3.Append(bold9);
            runPropertiesBaseStyle3.Append(boldComplexScript7);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties1 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties1 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders1 = new TableCellBorders();
            TopBorder topBorder6 = new TopBorder() { Val = BorderValues.Double, Color = "BFBFBF", ThemeColor = ThemeColorValues.Background1, ThemeShade = "BF", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders1.Append(topBorder6);

            tableStyleConditionalFormattingTableCellProperties1.Append(tableCellBorders1);

            tableStyleProperties2.Append(runPropertiesBaseStyle3);
            tableStyleProperties2.Append(tableStyleConditionalFormattingTableProperties1);
            tableStyleProperties2.Append(tableStyleConditionalFormattingTableCellProperties1);

            TableStyleProperties tableStyleProperties3 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle4 = new RunPropertiesBaseStyle();
            Bold bold10 = new Bold();
            BoldComplexScript boldComplexScript8 = new BoldComplexScript();

            runPropertiesBaseStyle4.Append(bold10);
            runPropertiesBaseStyle4.Append(boldComplexScript8);

            tableStyleProperties3.Append(runPropertiesBaseStyle4);

            TableStyleProperties tableStyleProperties4 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle5 = new RunPropertiesBaseStyle();
            Bold bold11 = new Bold();
            BoldComplexScript boldComplexScript9 = new BoldComplexScript();

            runPropertiesBaseStyle5.Append(bold11);
            runPropertiesBaseStyle5.Append(boldComplexScript9);

            tableStyleProperties4.Append(runPropertiesBaseStyle5);

            TableStyleProperties tableStyleProperties5 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties2 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties2 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading2 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties2.Append(shading2);

            tableStyleProperties5.Append(tableStyleConditionalFormattingTableProperties2);
            tableStyleProperties5.Append(tableStyleConditionalFormattingTableCellProperties2);

            TableStyleProperties tableStyleProperties6 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties3 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties3 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading3 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties3.Append(shading3);

            tableStyleProperties6.Append(tableStyleConditionalFormattingTableProperties3);
            tableStyleProperties6.Append(tableStyleConditionalFormattingTableCellProperties3);

            style34.Append(styleName34);
            style34.Append(basedOn29);
            style34.Append(uIPriority33);
            style34.Append(rsid30);
            style34.Append(styleParagraphProperties14);
            style34.Append(styleTableProperties4);
            style34.Append(tableStyleProperties1);
            style34.Append(tableStyleProperties2);
            style34.Append(tableStyleProperties3);
            style34.Append(tableStyleProperties4);
            style34.Append(tableStyleProperties5);
            style34.Append(tableStyleProperties6);

            Style style35 = new Style() { Type = StyleValues.Table, StyleId = "PlainTable2" };
            StyleName styleName35 = new StyleName() { Val = "Plain Table 2" };
            BasedOn basedOn30 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority34 = new UIPriority() { Val = 42 };
            Rsid rsid31 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties15 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines25 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties15.Append(spacingBetweenLines25);

            StyleTableProperties styleTableProperties5 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize2 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize2 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders4 = new TableBorders();
            TopBorder topBorder7 = new TopBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder7 = new BottomBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders4.Append(topBorder7);
            tableBorders4.Append(bottomBorder7);

            styleTableProperties5.Append(tableStyleRowBandSize2);
            styleTableProperties5.Append(tableStyleColumnBandSize2);
            styleTableProperties5.Append(tableBorders4);

            TableStyleProperties tableStyleProperties7 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle6 = new RunPropertiesBaseStyle();
            Bold bold12 = new Bold();
            BoldComplexScript boldComplexScript10 = new BoldComplexScript();

            runPropertiesBaseStyle6.Append(bold12);
            runPropertiesBaseStyle6.Append(boldComplexScript10);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties4 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties4 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders2 = new TableCellBorders();
            BottomBorder bottomBorder8 = new BottomBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders2.Append(bottomBorder8);

            tableStyleConditionalFormattingTableCellProperties4.Append(tableCellBorders2);

            tableStyleProperties7.Append(runPropertiesBaseStyle6);
            tableStyleProperties7.Append(tableStyleConditionalFormattingTableProperties4);
            tableStyleProperties7.Append(tableStyleConditionalFormattingTableCellProperties4);

            TableStyleProperties tableStyleProperties8 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle7 = new RunPropertiesBaseStyle();
            Bold bold13 = new Bold();
            BoldComplexScript boldComplexScript11 = new BoldComplexScript();

            runPropertiesBaseStyle7.Append(bold13);
            runPropertiesBaseStyle7.Append(boldComplexScript11);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties5 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties5 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders3 = new TableCellBorders();
            TopBorder topBorder8 = new TopBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders3.Append(topBorder8);

            tableStyleConditionalFormattingTableCellProperties5.Append(tableCellBorders3);

            tableStyleProperties8.Append(runPropertiesBaseStyle7);
            tableStyleProperties8.Append(tableStyleConditionalFormattingTableProperties5);
            tableStyleProperties8.Append(tableStyleConditionalFormattingTableCellProperties5);

            TableStyleProperties tableStyleProperties9 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle8 = new RunPropertiesBaseStyle();
            Bold bold14 = new Bold();
            BoldComplexScript boldComplexScript12 = new BoldComplexScript();

            runPropertiesBaseStyle8.Append(bold14);
            runPropertiesBaseStyle8.Append(boldComplexScript12);

            tableStyleProperties9.Append(runPropertiesBaseStyle8);

            TableStyleProperties tableStyleProperties10 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle9 = new RunPropertiesBaseStyle();
            Bold bold15 = new Bold();
            BoldComplexScript boldComplexScript13 = new BoldComplexScript();

            runPropertiesBaseStyle9.Append(bold15);
            runPropertiesBaseStyle9.Append(boldComplexScript13);

            tableStyleProperties10.Append(runPropertiesBaseStyle9);

            TableStyleProperties tableStyleProperties11 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties6 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties6 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders4 = new TableCellBorders();
            LeftBorder leftBorder5 = new LeftBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder5 = new RightBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders4.Append(leftBorder5);
            tableCellBorders4.Append(rightBorder5);

            tableStyleConditionalFormattingTableCellProperties6.Append(tableCellBorders4);

            tableStyleProperties11.Append(tableStyleConditionalFormattingTableProperties6);
            tableStyleProperties11.Append(tableStyleConditionalFormattingTableCellProperties6);

            TableStyleProperties tableStyleProperties12 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties7 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties7 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders5 = new TableCellBorders();
            LeftBorder leftBorder6 = new LeftBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder6 = new RightBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders5.Append(leftBorder6);
            tableCellBorders5.Append(rightBorder6);

            tableStyleConditionalFormattingTableCellProperties7.Append(tableCellBorders5);

            tableStyleProperties12.Append(tableStyleConditionalFormattingTableProperties7);
            tableStyleProperties12.Append(tableStyleConditionalFormattingTableCellProperties7);

            TableStyleProperties tableStyleProperties13 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties8 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties8 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders6 = new TableCellBorders();
            TopBorder topBorder9 = new TopBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder9 = new BottomBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders6.Append(topBorder9);
            tableCellBorders6.Append(bottomBorder9);

            tableStyleConditionalFormattingTableCellProperties8.Append(tableCellBorders6);

            tableStyleProperties13.Append(tableStyleConditionalFormattingTableProperties8);
            tableStyleProperties13.Append(tableStyleConditionalFormattingTableCellProperties8);

            style35.Append(styleName35);
            style35.Append(basedOn30);
            style35.Append(uIPriority34);
            style35.Append(rsid31);
            style35.Append(styleParagraphProperties15);
            style35.Append(styleTableProperties5);
            style35.Append(tableStyleProperties7);
            style35.Append(tableStyleProperties8);
            style35.Append(tableStyleProperties9);
            style35.Append(tableStyleProperties10);
            style35.Append(tableStyleProperties11);
            style35.Append(tableStyleProperties12);
            style35.Append(tableStyleProperties13);

            Style style36 = new Style() { Type = StyleValues.Table, StyleId = "PlainTable3" };
            StyleName styleName36 = new StyleName() { Val = "Plain Table 3" };
            BasedOn basedOn31 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority35 = new UIPriority() { Val = 43 };
            Rsid rsid32 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties16 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines26 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties16.Append(spacingBetweenLines26);

            StyleTableProperties styleTableProperties6 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize3 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize3 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties6.Append(tableStyleRowBandSize3);
            styleTableProperties6.Append(tableStyleColumnBandSize3);

            TableStyleProperties tableStyleProperties14 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle10 = new RunPropertiesBaseStyle();
            Bold bold16 = new Bold();
            BoldComplexScript boldComplexScript14 = new BoldComplexScript();
            Caps caps1 = new Caps();

            runPropertiesBaseStyle10.Append(bold16);
            runPropertiesBaseStyle10.Append(boldComplexScript14);
            runPropertiesBaseStyle10.Append(caps1);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties9 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties9 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders7 = new TableCellBorders();
            BottomBorder bottomBorder10 = new BottomBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders7.Append(bottomBorder10);

            tableStyleConditionalFormattingTableCellProperties9.Append(tableCellBorders7);

            tableStyleProperties14.Append(runPropertiesBaseStyle10);
            tableStyleProperties14.Append(tableStyleConditionalFormattingTableProperties9);
            tableStyleProperties14.Append(tableStyleConditionalFormattingTableCellProperties9);

            TableStyleProperties tableStyleProperties15 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle11 = new RunPropertiesBaseStyle();
            Bold bold17 = new Bold();
            BoldComplexScript boldComplexScript15 = new BoldComplexScript();
            Caps caps2 = new Caps();

            runPropertiesBaseStyle11.Append(bold17);
            runPropertiesBaseStyle11.Append(boldComplexScript15);
            runPropertiesBaseStyle11.Append(caps2);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties10 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties10 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders8 = new TableCellBorders();
            TopBorder topBorder10 = new TopBorder() { Val = BorderValues.Nil };

            tableCellBorders8.Append(topBorder10);

            tableStyleConditionalFormattingTableCellProperties10.Append(tableCellBorders8);

            tableStyleProperties15.Append(runPropertiesBaseStyle11);
            tableStyleProperties15.Append(tableStyleConditionalFormattingTableProperties10);
            tableStyleProperties15.Append(tableStyleConditionalFormattingTableCellProperties10);

            TableStyleProperties tableStyleProperties16 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle12 = new RunPropertiesBaseStyle();
            Bold bold18 = new Bold();
            BoldComplexScript boldComplexScript16 = new BoldComplexScript();
            Caps caps3 = new Caps();

            runPropertiesBaseStyle12.Append(bold18);
            runPropertiesBaseStyle12.Append(boldComplexScript16);
            runPropertiesBaseStyle12.Append(caps3);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties11 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties11 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders9 = new TableCellBorders();
            RightBorder rightBorder7 = new RightBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders9.Append(rightBorder7);

            tableStyleConditionalFormattingTableCellProperties11.Append(tableCellBorders9);

            tableStyleProperties16.Append(runPropertiesBaseStyle12);
            tableStyleProperties16.Append(tableStyleConditionalFormattingTableProperties11);
            tableStyleProperties16.Append(tableStyleConditionalFormattingTableCellProperties11);

            TableStyleProperties tableStyleProperties17 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle13 = new RunPropertiesBaseStyle();
            Bold bold19 = new Bold();
            BoldComplexScript boldComplexScript17 = new BoldComplexScript();
            Caps caps4 = new Caps();

            runPropertiesBaseStyle13.Append(bold19);
            runPropertiesBaseStyle13.Append(boldComplexScript17);
            runPropertiesBaseStyle13.Append(caps4);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties12 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties12 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders10 = new TableCellBorders();
            LeftBorder leftBorder7 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders10.Append(leftBorder7);

            tableStyleConditionalFormattingTableCellProperties12.Append(tableCellBorders10);

            tableStyleProperties17.Append(runPropertiesBaseStyle13);
            tableStyleProperties17.Append(tableStyleConditionalFormattingTableProperties12);
            tableStyleProperties17.Append(tableStyleConditionalFormattingTableCellProperties12);

            TableStyleProperties tableStyleProperties18 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties13 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties13 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading4 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties13.Append(shading4);

            tableStyleProperties18.Append(tableStyleConditionalFormattingTableProperties13);
            tableStyleProperties18.Append(tableStyleConditionalFormattingTableCellProperties13);

            TableStyleProperties tableStyleProperties19 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties14 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties14 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading5 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties14.Append(shading5);

            tableStyleProperties19.Append(tableStyleConditionalFormattingTableProperties14);
            tableStyleProperties19.Append(tableStyleConditionalFormattingTableCellProperties14);

            TableStyleProperties tableStyleProperties20 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties15 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties15 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders11 = new TableCellBorders();
            LeftBorder leftBorder8 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders11.Append(leftBorder8);

            tableStyleConditionalFormattingTableCellProperties15.Append(tableCellBorders11);

            tableStyleProperties20.Append(tableStyleConditionalFormattingTableProperties15);
            tableStyleProperties20.Append(tableStyleConditionalFormattingTableCellProperties15);

            TableStyleProperties tableStyleProperties21 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties16 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties16 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders12 = new TableCellBorders();
            RightBorder rightBorder8 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders12.Append(rightBorder8);

            tableStyleConditionalFormattingTableCellProperties16.Append(tableCellBorders12);

            tableStyleProperties21.Append(tableStyleConditionalFormattingTableProperties16);
            tableStyleProperties21.Append(tableStyleConditionalFormattingTableCellProperties16);

            style36.Append(styleName36);
            style36.Append(basedOn31);
            style36.Append(uIPriority35);
            style36.Append(rsid32);
            style36.Append(styleParagraphProperties16);
            style36.Append(styleTableProperties6);
            style36.Append(tableStyleProperties14);
            style36.Append(tableStyleProperties15);
            style36.Append(tableStyleProperties16);
            style36.Append(tableStyleProperties17);
            style36.Append(tableStyleProperties18);
            style36.Append(tableStyleProperties19);
            style36.Append(tableStyleProperties20);
            style36.Append(tableStyleProperties21);

            Style style37 = new Style() { Type = StyleValues.Table, StyleId = "PlainTable4" };
            StyleName styleName37 = new StyleName() { Val = "Plain Table 4" };
            BasedOn basedOn32 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority36 = new UIPriority() { Val = 44 };
            Rsid rsid33 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties17 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines27 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties17.Append(spacingBetweenLines27);

            StyleTableProperties styleTableProperties7 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize4 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize4 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties7.Append(tableStyleRowBandSize4);
            styleTableProperties7.Append(tableStyleColumnBandSize4);

            TableStyleProperties tableStyleProperties22 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle14 = new RunPropertiesBaseStyle();
            Bold bold20 = new Bold();
            BoldComplexScript boldComplexScript18 = new BoldComplexScript();

            runPropertiesBaseStyle14.Append(bold20);
            runPropertiesBaseStyle14.Append(boldComplexScript18);

            tableStyleProperties22.Append(runPropertiesBaseStyle14);

            TableStyleProperties tableStyleProperties23 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle15 = new RunPropertiesBaseStyle();
            Bold bold21 = new Bold();
            BoldComplexScript boldComplexScript19 = new BoldComplexScript();

            runPropertiesBaseStyle15.Append(bold21);
            runPropertiesBaseStyle15.Append(boldComplexScript19);

            tableStyleProperties23.Append(runPropertiesBaseStyle15);

            TableStyleProperties tableStyleProperties24 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle16 = new RunPropertiesBaseStyle();
            Bold bold22 = new Bold();
            BoldComplexScript boldComplexScript20 = new BoldComplexScript();

            runPropertiesBaseStyle16.Append(bold22);
            runPropertiesBaseStyle16.Append(boldComplexScript20);

            tableStyleProperties24.Append(runPropertiesBaseStyle16);

            TableStyleProperties tableStyleProperties25 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle17 = new RunPropertiesBaseStyle();
            Bold bold23 = new Bold();
            BoldComplexScript boldComplexScript21 = new BoldComplexScript();

            runPropertiesBaseStyle17.Append(bold23);
            runPropertiesBaseStyle17.Append(boldComplexScript21);

            tableStyleProperties25.Append(runPropertiesBaseStyle17);

            TableStyleProperties tableStyleProperties26 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties17 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties17 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading6 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties17.Append(shading6);

            tableStyleProperties26.Append(tableStyleConditionalFormattingTableProperties17);
            tableStyleProperties26.Append(tableStyleConditionalFormattingTableCellProperties17);

            TableStyleProperties tableStyleProperties27 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties18 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties18 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading7 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties18.Append(shading7);

            tableStyleProperties27.Append(tableStyleConditionalFormattingTableProperties18);
            tableStyleProperties27.Append(tableStyleConditionalFormattingTableCellProperties18);

            style37.Append(styleName37);
            style37.Append(basedOn32);
            style37.Append(uIPriority36);
            style37.Append(rsid33);
            style37.Append(styleParagraphProperties17);
            style37.Append(styleTableProperties7);
            style37.Append(tableStyleProperties22);
            style37.Append(tableStyleProperties23);
            style37.Append(tableStyleProperties24);
            style37.Append(tableStyleProperties25);
            style37.Append(tableStyleProperties26);
            style37.Append(tableStyleProperties27);

            Style style38 = new Style() { Type = StyleValues.Table, StyleId = "PlainTable5" };
            StyleName styleName38 = new StyleName() { Val = "Plain Table 5" };
            BasedOn basedOn33 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority37 = new UIPriority() { Val = 45 };
            Rsid rsid34 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties18 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines28 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties18.Append(spacingBetweenLines28);

            StyleTableProperties styleTableProperties8 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize5 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize5 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties8.Append(tableStyleRowBandSize5);
            styleTableProperties8.Append(tableStyleColumnBandSize5);

            TableStyleProperties tableStyleProperties28 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle18 = new RunPropertiesBaseStyle();
            RunFonts runFonts77 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic13 = new Italic();
            ItalicComplexScript italicComplexScript11 = new ItalicComplexScript();
            FontSize fontSize64 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle18.Append(runFonts77);
            runPropertiesBaseStyle18.Append(italic13);
            runPropertiesBaseStyle18.Append(italicComplexScript11);
            runPropertiesBaseStyle18.Append(fontSize64);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties19 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties19 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders13 = new TableCellBorders();
            BottomBorder bottomBorder11 = new BottomBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders13.Append(bottomBorder11);
            Shading shading8 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties19.Append(tableCellBorders13);
            tableStyleConditionalFormattingTableCellProperties19.Append(shading8);

            tableStyleProperties28.Append(runPropertiesBaseStyle18);
            tableStyleProperties28.Append(tableStyleConditionalFormattingTableProperties19);
            tableStyleProperties28.Append(tableStyleConditionalFormattingTableCellProperties19);

            TableStyleProperties tableStyleProperties29 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle19 = new RunPropertiesBaseStyle();
            RunFonts runFonts78 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic14 = new Italic();
            ItalicComplexScript italicComplexScript12 = new ItalicComplexScript();
            FontSize fontSize65 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle19.Append(runFonts78);
            runPropertiesBaseStyle19.Append(italic14);
            runPropertiesBaseStyle19.Append(italicComplexScript12);
            runPropertiesBaseStyle19.Append(fontSize65);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties20 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties20 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders14 = new TableCellBorders();
            TopBorder topBorder11 = new TopBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders14.Append(topBorder11);
            Shading shading9 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties20.Append(tableCellBorders14);
            tableStyleConditionalFormattingTableCellProperties20.Append(shading9);

            tableStyleProperties29.Append(runPropertiesBaseStyle19);
            tableStyleProperties29.Append(tableStyleConditionalFormattingTableProperties20);
            tableStyleProperties29.Append(tableStyleConditionalFormattingTableCellProperties20);

            TableStyleProperties tableStyleProperties30 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties19 = new StyleParagraphProperties();
            Justification justification6 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties19.Append(justification6);

            RunPropertiesBaseStyle runPropertiesBaseStyle20 = new RunPropertiesBaseStyle();
            RunFonts runFonts79 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic15 = new Italic();
            ItalicComplexScript italicComplexScript13 = new ItalicComplexScript();
            FontSize fontSize66 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle20.Append(runFonts79);
            runPropertiesBaseStyle20.Append(italic15);
            runPropertiesBaseStyle20.Append(italicComplexScript13);
            runPropertiesBaseStyle20.Append(fontSize66);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties21 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties21 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders15 = new TableCellBorders();
            RightBorder rightBorder9 = new RightBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders15.Append(rightBorder9);
            Shading shading10 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties21.Append(tableCellBorders15);
            tableStyleConditionalFormattingTableCellProperties21.Append(shading10);

            tableStyleProperties30.Append(styleParagraphProperties19);
            tableStyleProperties30.Append(runPropertiesBaseStyle20);
            tableStyleProperties30.Append(tableStyleConditionalFormattingTableProperties21);
            tableStyleProperties30.Append(tableStyleConditionalFormattingTableCellProperties21);

            TableStyleProperties tableStyleProperties31 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle21 = new RunPropertiesBaseStyle();
            RunFonts runFonts80 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic16 = new Italic();
            ItalicComplexScript italicComplexScript14 = new ItalicComplexScript();
            FontSize fontSize67 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle21.Append(runFonts80);
            runPropertiesBaseStyle21.Append(italic16);
            runPropertiesBaseStyle21.Append(italicComplexScript14);
            runPropertiesBaseStyle21.Append(fontSize67);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties22 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties22 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders16 = new TableCellBorders();
            LeftBorder leftBorder9 = new LeftBorder() { Val = BorderValues.Single, Color = "7F7F7F", ThemeColor = ThemeColorValues.Text1, ThemeTint = "80", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders16.Append(leftBorder9);
            Shading shading11 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties22.Append(tableCellBorders16);
            tableStyleConditionalFormattingTableCellProperties22.Append(shading11);

            tableStyleProperties31.Append(runPropertiesBaseStyle21);
            tableStyleProperties31.Append(tableStyleConditionalFormattingTableProperties22);
            tableStyleProperties31.Append(tableStyleConditionalFormattingTableCellProperties22);

            TableStyleProperties tableStyleProperties32 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties23 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties23 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading12 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties23.Append(shading12);

            tableStyleProperties32.Append(tableStyleConditionalFormattingTableProperties23);
            tableStyleProperties32.Append(tableStyleConditionalFormattingTableCellProperties23);

            TableStyleProperties tableStyleProperties33 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties24 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties24 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading13 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F2F2F2", ThemeFill = ThemeColorValues.Background1, ThemeFillShade = "F2" };

            tableStyleConditionalFormattingTableCellProperties24.Append(shading13);

            tableStyleProperties33.Append(tableStyleConditionalFormattingTableProperties24);
            tableStyleProperties33.Append(tableStyleConditionalFormattingTableCellProperties24);

            TableStyleProperties tableStyleProperties34 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties25 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties25 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders17 = new TableCellBorders();
            LeftBorder leftBorder10 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders17.Append(leftBorder10);

            tableStyleConditionalFormattingTableCellProperties25.Append(tableCellBorders17);

            tableStyleProperties34.Append(tableStyleConditionalFormattingTableProperties25);
            tableStyleProperties34.Append(tableStyleConditionalFormattingTableCellProperties25);

            TableStyleProperties tableStyleProperties35 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties26 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties26 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders18 = new TableCellBorders();
            RightBorder rightBorder10 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders18.Append(rightBorder10);

            tableStyleConditionalFormattingTableCellProperties26.Append(tableCellBorders18);

            tableStyleProperties35.Append(tableStyleConditionalFormattingTableProperties26);
            tableStyleProperties35.Append(tableStyleConditionalFormattingTableCellProperties26);

            TableStyleProperties tableStyleProperties36 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties27 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties27 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders19 = new TableCellBorders();
            LeftBorder leftBorder11 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders19.Append(leftBorder11);

            tableStyleConditionalFormattingTableCellProperties27.Append(tableCellBorders19);

            tableStyleProperties36.Append(tableStyleConditionalFormattingTableProperties27);
            tableStyleProperties36.Append(tableStyleConditionalFormattingTableCellProperties27);

            TableStyleProperties tableStyleProperties37 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties28 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties28 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders20 = new TableCellBorders();
            RightBorder rightBorder11 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders20.Append(rightBorder11);

            tableStyleConditionalFormattingTableCellProperties28.Append(tableCellBorders20);

            tableStyleProperties37.Append(tableStyleConditionalFormattingTableProperties28);
            tableStyleProperties37.Append(tableStyleConditionalFormattingTableCellProperties28);

            style38.Append(styleName38);
            style38.Append(basedOn33);
            style38.Append(uIPriority37);
            style38.Append(rsid34);
            style38.Append(styleParagraphProperties18);
            style38.Append(styleTableProperties8);
            style38.Append(tableStyleProperties28);
            style38.Append(tableStyleProperties29);
            style38.Append(tableStyleProperties30);
            style38.Append(tableStyleProperties31);
            style38.Append(tableStyleProperties32);
            style38.Append(tableStyleProperties33);
            style38.Append(tableStyleProperties34);
            style38.Append(tableStyleProperties35);
            style38.Append(tableStyleProperties36);
            style38.Append(tableStyleProperties37);

            Style style39 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light" };
            StyleName styleName39 = new StyleName() { Val = "Grid Table 1 Light" };
            BasedOn basedOn34 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority38 = new UIPriority() { Val = 46 };
            Rsid rsid35 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties20 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines29 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties20.Append(spacingBetweenLines29);

            StyleTableProperties styleTableProperties9 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize6 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize6 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders5 = new TableBorders();
            TopBorder topBorder12 = new TopBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder12 = new LeftBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder12 = new BottomBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder12 = new RightBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder4 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder4 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "999999", ThemeColor = ThemeColorValues.Text1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders5.Append(topBorder12);
            tableBorders5.Append(leftBorder12);
            tableBorders5.Append(bottomBorder12);
            tableBorders5.Append(rightBorder12);
            tableBorders5.Append(insideHorizontalBorder4);
            tableBorders5.Append(insideVerticalBorder4);

            styleTableProperties9.Append(tableStyleRowBandSize6);
            styleTableProperties9.Append(tableStyleColumnBandSize6);
            styleTableProperties9.Append(tableBorders5);

            TableStyleProperties tableStyleProperties38 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle22 = new RunPropertiesBaseStyle();
            Bold bold24 = new Bold();
            BoldComplexScript boldComplexScript22 = new BoldComplexScript();

            runPropertiesBaseStyle22.Append(bold24);
            runPropertiesBaseStyle22.Append(boldComplexScript22);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties29 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties29 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders21 = new TableCellBorders();
            BottomBorder bottomBorder13 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders21.Append(bottomBorder13);

            tableStyleConditionalFormattingTableCellProperties29.Append(tableCellBorders21);

            tableStyleProperties38.Append(runPropertiesBaseStyle22);
            tableStyleProperties38.Append(tableStyleConditionalFormattingTableProperties29);
            tableStyleProperties38.Append(tableStyleConditionalFormattingTableCellProperties29);

            TableStyleProperties tableStyleProperties39 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle23 = new RunPropertiesBaseStyle();
            Bold bold25 = new Bold();
            BoldComplexScript boldComplexScript23 = new BoldComplexScript();

            runPropertiesBaseStyle23.Append(bold25);
            runPropertiesBaseStyle23.Append(boldComplexScript23);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties30 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties30 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders22 = new TableCellBorders();
            TopBorder topBorder13 = new TopBorder() { Val = BorderValues.Double, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders22.Append(topBorder13);

            tableStyleConditionalFormattingTableCellProperties30.Append(tableCellBorders22);

            tableStyleProperties39.Append(runPropertiesBaseStyle23);
            tableStyleProperties39.Append(tableStyleConditionalFormattingTableProperties30);
            tableStyleProperties39.Append(tableStyleConditionalFormattingTableCellProperties30);

            TableStyleProperties tableStyleProperties40 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle24 = new RunPropertiesBaseStyle();
            Bold bold26 = new Bold();
            BoldComplexScript boldComplexScript24 = new BoldComplexScript();

            runPropertiesBaseStyle24.Append(bold26);
            runPropertiesBaseStyle24.Append(boldComplexScript24);

            tableStyleProperties40.Append(runPropertiesBaseStyle24);

            TableStyleProperties tableStyleProperties41 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle25 = new RunPropertiesBaseStyle();
            Bold bold27 = new Bold();
            BoldComplexScript boldComplexScript25 = new BoldComplexScript();

            runPropertiesBaseStyle25.Append(bold27);
            runPropertiesBaseStyle25.Append(boldComplexScript25);

            tableStyleProperties41.Append(runPropertiesBaseStyle25);

            style39.Append(styleName39);
            style39.Append(basedOn34);
            style39.Append(uIPriority38);
            style39.Append(rsid35);
            style39.Append(styleParagraphProperties20);
            style39.Append(styleTableProperties9);
            style39.Append(tableStyleProperties38);
            style39.Append(tableStyleProperties39);
            style39.Append(tableStyleProperties40);
            style39.Append(tableStyleProperties41);

            Style style40 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent1" };
            StyleName styleName40 = new StyleName() { Val = "Grid Table 1 Light Accent 1" };
            BasedOn basedOn35 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority39 = new UIPriority() { Val = 46 };
            Rsid rsid36 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties21 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines30 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties21.Append(spacingBetweenLines30);

            StyleTableProperties styleTableProperties10 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize7 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize7 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders6 = new TableBorders();
            TopBorder topBorder14 = new TopBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder13 = new LeftBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder14 = new BottomBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder13 = new RightBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder5 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder5 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "BDD6EE", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders6.Append(topBorder14);
            tableBorders6.Append(leftBorder13);
            tableBorders6.Append(bottomBorder14);
            tableBorders6.Append(rightBorder13);
            tableBorders6.Append(insideHorizontalBorder5);
            tableBorders6.Append(insideVerticalBorder5);

            styleTableProperties10.Append(tableStyleRowBandSize7);
            styleTableProperties10.Append(tableStyleColumnBandSize7);
            styleTableProperties10.Append(tableBorders6);

            TableStyleProperties tableStyleProperties42 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle26 = new RunPropertiesBaseStyle();
            Bold bold28 = new Bold();
            BoldComplexScript boldComplexScript26 = new BoldComplexScript();

            runPropertiesBaseStyle26.Append(bold28);
            runPropertiesBaseStyle26.Append(boldComplexScript26);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties31 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties31 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders23 = new TableCellBorders();
            BottomBorder bottomBorder15 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders23.Append(bottomBorder15);

            tableStyleConditionalFormattingTableCellProperties31.Append(tableCellBorders23);

            tableStyleProperties42.Append(runPropertiesBaseStyle26);
            tableStyleProperties42.Append(tableStyleConditionalFormattingTableProperties31);
            tableStyleProperties42.Append(tableStyleConditionalFormattingTableCellProperties31);

            TableStyleProperties tableStyleProperties43 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle27 = new RunPropertiesBaseStyle();
            Bold bold29 = new Bold();
            BoldComplexScript boldComplexScript27 = new BoldComplexScript();

            runPropertiesBaseStyle27.Append(bold29);
            runPropertiesBaseStyle27.Append(boldComplexScript27);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties32 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties32 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders24 = new TableCellBorders();
            TopBorder topBorder15 = new TopBorder() { Val = BorderValues.Double, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders24.Append(topBorder15);

            tableStyleConditionalFormattingTableCellProperties32.Append(tableCellBorders24);

            tableStyleProperties43.Append(runPropertiesBaseStyle27);
            tableStyleProperties43.Append(tableStyleConditionalFormattingTableProperties32);
            tableStyleProperties43.Append(tableStyleConditionalFormattingTableCellProperties32);

            TableStyleProperties tableStyleProperties44 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle28 = new RunPropertiesBaseStyle();
            Bold bold30 = new Bold();
            BoldComplexScript boldComplexScript28 = new BoldComplexScript();

            runPropertiesBaseStyle28.Append(bold30);
            runPropertiesBaseStyle28.Append(boldComplexScript28);

            tableStyleProperties44.Append(runPropertiesBaseStyle28);

            TableStyleProperties tableStyleProperties45 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle29 = new RunPropertiesBaseStyle();
            Bold bold31 = new Bold();
            BoldComplexScript boldComplexScript29 = new BoldComplexScript();

            runPropertiesBaseStyle29.Append(bold31);
            runPropertiesBaseStyle29.Append(boldComplexScript29);

            tableStyleProperties45.Append(runPropertiesBaseStyle29);

            style40.Append(styleName40);
            style40.Append(basedOn35);
            style40.Append(uIPriority39);
            style40.Append(rsid36);
            style40.Append(styleParagraphProperties21);
            style40.Append(styleTableProperties10);
            style40.Append(tableStyleProperties42);
            style40.Append(tableStyleProperties43);
            style40.Append(tableStyleProperties44);
            style40.Append(tableStyleProperties45);

            Style style41 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent2" };
            StyleName styleName41 = new StyleName() { Val = "Grid Table 1 Light Accent 2" };
            BasedOn basedOn36 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority40 = new UIPriority() { Val = 46 };
            Rsid rsid37 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties22 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines31 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties22.Append(spacingBetweenLines31);

            StyleTableProperties styleTableProperties11 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize8 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize8 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders7 = new TableBorders();
            TopBorder topBorder16 = new TopBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder14 = new LeftBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder16 = new BottomBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder14 = new RightBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder6 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder6 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F7CAAC", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders7.Append(topBorder16);
            tableBorders7.Append(leftBorder14);
            tableBorders7.Append(bottomBorder16);
            tableBorders7.Append(rightBorder14);
            tableBorders7.Append(insideHorizontalBorder6);
            tableBorders7.Append(insideVerticalBorder6);

            styleTableProperties11.Append(tableStyleRowBandSize8);
            styleTableProperties11.Append(tableStyleColumnBandSize8);
            styleTableProperties11.Append(tableBorders7);

            TableStyleProperties tableStyleProperties46 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle30 = new RunPropertiesBaseStyle();
            Bold bold32 = new Bold();
            BoldComplexScript boldComplexScript30 = new BoldComplexScript();

            runPropertiesBaseStyle30.Append(bold32);
            runPropertiesBaseStyle30.Append(boldComplexScript30);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties33 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties33 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders25 = new TableCellBorders();
            BottomBorder bottomBorder17 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders25.Append(bottomBorder17);

            tableStyleConditionalFormattingTableCellProperties33.Append(tableCellBorders25);

            tableStyleProperties46.Append(runPropertiesBaseStyle30);
            tableStyleProperties46.Append(tableStyleConditionalFormattingTableProperties33);
            tableStyleProperties46.Append(tableStyleConditionalFormattingTableCellProperties33);

            TableStyleProperties tableStyleProperties47 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle31 = new RunPropertiesBaseStyle();
            Bold bold33 = new Bold();
            BoldComplexScript boldComplexScript31 = new BoldComplexScript();

            runPropertiesBaseStyle31.Append(bold33);
            runPropertiesBaseStyle31.Append(boldComplexScript31);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties34 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties34 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders26 = new TableCellBorders();
            TopBorder topBorder17 = new TopBorder() { Val = BorderValues.Double, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders26.Append(topBorder17);

            tableStyleConditionalFormattingTableCellProperties34.Append(tableCellBorders26);

            tableStyleProperties47.Append(runPropertiesBaseStyle31);
            tableStyleProperties47.Append(tableStyleConditionalFormattingTableProperties34);
            tableStyleProperties47.Append(tableStyleConditionalFormattingTableCellProperties34);

            TableStyleProperties tableStyleProperties48 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle32 = new RunPropertiesBaseStyle();
            Bold bold34 = new Bold();
            BoldComplexScript boldComplexScript32 = new BoldComplexScript();

            runPropertiesBaseStyle32.Append(bold34);
            runPropertiesBaseStyle32.Append(boldComplexScript32);

            tableStyleProperties48.Append(runPropertiesBaseStyle32);

            TableStyleProperties tableStyleProperties49 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle33 = new RunPropertiesBaseStyle();
            Bold bold35 = new Bold();
            BoldComplexScript boldComplexScript33 = new BoldComplexScript();

            runPropertiesBaseStyle33.Append(bold35);
            runPropertiesBaseStyle33.Append(boldComplexScript33);

            tableStyleProperties49.Append(runPropertiesBaseStyle33);

            style41.Append(styleName41);
            style41.Append(basedOn36);
            style41.Append(uIPriority40);
            style41.Append(rsid37);
            style41.Append(styleParagraphProperties22);
            style41.Append(styleTableProperties11);
            style41.Append(tableStyleProperties46);
            style41.Append(tableStyleProperties47);
            style41.Append(tableStyleProperties48);
            style41.Append(tableStyleProperties49);

            Style style42 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent3" };
            StyleName styleName42 = new StyleName() { Val = "Grid Table 1 Light Accent 3" };
            BasedOn basedOn37 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority41 = new UIPriority() { Val = 46 };
            Rsid rsid38 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties23 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines32 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties23.Append(spacingBetweenLines32);

            StyleTableProperties styleTableProperties12 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize9 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize9 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders8 = new TableBorders();
            TopBorder topBorder18 = new TopBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder15 = new LeftBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder18 = new BottomBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder15 = new RightBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder7 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder7 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "DBDBDB", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders8.Append(topBorder18);
            tableBorders8.Append(leftBorder15);
            tableBorders8.Append(bottomBorder18);
            tableBorders8.Append(rightBorder15);
            tableBorders8.Append(insideHorizontalBorder7);
            tableBorders8.Append(insideVerticalBorder7);

            styleTableProperties12.Append(tableStyleRowBandSize9);
            styleTableProperties12.Append(tableStyleColumnBandSize9);
            styleTableProperties12.Append(tableBorders8);

            TableStyleProperties tableStyleProperties50 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle34 = new RunPropertiesBaseStyle();
            Bold bold36 = new Bold();
            BoldComplexScript boldComplexScript34 = new BoldComplexScript();

            runPropertiesBaseStyle34.Append(bold36);
            runPropertiesBaseStyle34.Append(boldComplexScript34);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties35 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties35 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders27 = new TableCellBorders();
            BottomBorder bottomBorder19 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders27.Append(bottomBorder19);

            tableStyleConditionalFormattingTableCellProperties35.Append(tableCellBorders27);

            tableStyleProperties50.Append(runPropertiesBaseStyle34);
            tableStyleProperties50.Append(tableStyleConditionalFormattingTableProperties35);
            tableStyleProperties50.Append(tableStyleConditionalFormattingTableCellProperties35);

            TableStyleProperties tableStyleProperties51 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle35 = new RunPropertiesBaseStyle();
            Bold bold37 = new Bold();
            BoldComplexScript boldComplexScript35 = new BoldComplexScript();

            runPropertiesBaseStyle35.Append(bold37);
            runPropertiesBaseStyle35.Append(boldComplexScript35);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties36 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties36 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders28 = new TableCellBorders();
            TopBorder topBorder19 = new TopBorder() { Val = BorderValues.Double, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders28.Append(topBorder19);

            tableStyleConditionalFormattingTableCellProperties36.Append(tableCellBorders28);

            tableStyleProperties51.Append(runPropertiesBaseStyle35);
            tableStyleProperties51.Append(tableStyleConditionalFormattingTableProperties36);
            tableStyleProperties51.Append(tableStyleConditionalFormattingTableCellProperties36);

            TableStyleProperties tableStyleProperties52 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle36 = new RunPropertiesBaseStyle();
            Bold bold38 = new Bold();
            BoldComplexScript boldComplexScript36 = new BoldComplexScript();

            runPropertiesBaseStyle36.Append(bold38);
            runPropertiesBaseStyle36.Append(boldComplexScript36);

            tableStyleProperties52.Append(runPropertiesBaseStyle36);

            TableStyleProperties tableStyleProperties53 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle37 = new RunPropertiesBaseStyle();
            Bold bold39 = new Bold();
            BoldComplexScript boldComplexScript37 = new BoldComplexScript();

            runPropertiesBaseStyle37.Append(bold39);
            runPropertiesBaseStyle37.Append(boldComplexScript37);

            tableStyleProperties53.Append(runPropertiesBaseStyle37);

            style42.Append(styleName42);
            style42.Append(basedOn37);
            style42.Append(uIPriority41);
            style42.Append(rsid38);
            style42.Append(styleParagraphProperties23);
            style42.Append(styleTableProperties12);
            style42.Append(tableStyleProperties50);
            style42.Append(tableStyleProperties51);
            style42.Append(tableStyleProperties52);
            style42.Append(tableStyleProperties53);

            Style style43 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent4" };
            StyleName styleName43 = new StyleName() { Val = "Grid Table 1 Light Accent 4" };
            BasedOn basedOn38 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority42 = new UIPriority() { Val = 46 };
            Rsid rsid39 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties24 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines33 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties24.Append(spacingBetweenLines33);

            StyleTableProperties styleTableProperties13 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize10 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize10 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders9 = new TableBorders();
            TopBorder topBorder20 = new TopBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder16 = new LeftBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder20 = new BottomBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder16 = new RightBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder8 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder8 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFE599", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders9.Append(topBorder20);
            tableBorders9.Append(leftBorder16);
            tableBorders9.Append(bottomBorder20);
            tableBorders9.Append(rightBorder16);
            tableBorders9.Append(insideHorizontalBorder8);
            tableBorders9.Append(insideVerticalBorder8);

            styleTableProperties13.Append(tableStyleRowBandSize10);
            styleTableProperties13.Append(tableStyleColumnBandSize10);
            styleTableProperties13.Append(tableBorders9);

            TableStyleProperties tableStyleProperties54 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle38 = new RunPropertiesBaseStyle();
            Bold bold40 = new Bold();
            BoldComplexScript boldComplexScript38 = new BoldComplexScript();

            runPropertiesBaseStyle38.Append(bold40);
            runPropertiesBaseStyle38.Append(boldComplexScript38);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties37 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties37 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders29 = new TableCellBorders();
            BottomBorder bottomBorder21 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders29.Append(bottomBorder21);

            tableStyleConditionalFormattingTableCellProperties37.Append(tableCellBorders29);

            tableStyleProperties54.Append(runPropertiesBaseStyle38);
            tableStyleProperties54.Append(tableStyleConditionalFormattingTableProperties37);
            tableStyleProperties54.Append(tableStyleConditionalFormattingTableCellProperties37);

            TableStyleProperties tableStyleProperties55 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle39 = new RunPropertiesBaseStyle();
            Bold bold41 = new Bold();
            BoldComplexScript boldComplexScript39 = new BoldComplexScript();

            runPropertiesBaseStyle39.Append(bold41);
            runPropertiesBaseStyle39.Append(boldComplexScript39);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties38 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties38 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders30 = new TableCellBorders();
            TopBorder topBorder21 = new TopBorder() { Val = BorderValues.Double, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders30.Append(topBorder21);

            tableStyleConditionalFormattingTableCellProperties38.Append(tableCellBorders30);

            tableStyleProperties55.Append(runPropertiesBaseStyle39);
            tableStyleProperties55.Append(tableStyleConditionalFormattingTableProperties38);
            tableStyleProperties55.Append(tableStyleConditionalFormattingTableCellProperties38);

            TableStyleProperties tableStyleProperties56 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle40 = new RunPropertiesBaseStyle();
            Bold bold42 = new Bold();
            BoldComplexScript boldComplexScript40 = new BoldComplexScript();

            runPropertiesBaseStyle40.Append(bold42);
            runPropertiesBaseStyle40.Append(boldComplexScript40);

            tableStyleProperties56.Append(runPropertiesBaseStyle40);

            TableStyleProperties tableStyleProperties57 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle41 = new RunPropertiesBaseStyle();
            Bold bold43 = new Bold();
            BoldComplexScript boldComplexScript41 = new BoldComplexScript();

            runPropertiesBaseStyle41.Append(bold43);
            runPropertiesBaseStyle41.Append(boldComplexScript41);

            tableStyleProperties57.Append(runPropertiesBaseStyle41);

            style43.Append(styleName43);
            style43.Append(basedOn38);
            style43.Append(uIPriority42);
            style43.Append(rsid39);
            style43.Append(styleParagraphProperties24);
            style43.Append(styleTableProperties13);
            style43.Append(tableStyleProperties54);
            style43.Append(tableStyleProperties55);
            style43.Append(tableStyleProperties56);
            style43.Append(tableStyleProperties57);

            Style style44 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent5" };
            StyleName styleName44 = new StyleName() { Val = "Grid Table 1 Light Accent 5" };
            BasedOn basedOn39 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority43 = new UIPriority() { Val = 46 };
            Rsid rsid40 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties25 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines34 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties25.Append(spacingBetweenLines34);

            StyleTableProperties styleTableProperties14 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize11 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize11 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders10 = new TableBorders();
            TopBorder topBorder22 = new TopBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder17 = new LeftBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder22 = new BottomBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder17 = new RightBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder9 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder9 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "B4C6E7", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders10.Append(topBorder22);
            tableBorders10.Append(leftBorder17);
            tableBorders10.Append(bottomBorder22);
            tableBorders10.Append(rightBorder17);
            tableBorders10.Append(insideHorizontalBorder9);
            tableBorders10.Append(insideVerticalBorder9);

            styleTableProperties14.Append(tableStyleRowBandSize11);
            styleTableProperties14.Append(tableStyleColumnBandSize11);
            styleTableProperties14.Append(tableBorders10);

            TableStyleProperties tableStyleProperties58 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle42 = new RunPropertiesBaseStyle();
            Bold bold44 = new Bold();
            BoldComplexScript boldComplexScript42 = new BoldComplexScript();

            runPropertiesBaseStyle42.Append(bold44);
            runPropertiesBaseStyle42.Append(boldComplexScript42);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties39 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties39 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders31 = new TableCellBorders();
            BottomBorder bottomBorder23 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders31.Append(bottomBorder23);

            tableStyleConditionalFormattingTableCellProperties39.Append(tableCellBorders31);

            tableStyleProperties58.Append(runPropertiesBaseStyle42);
            tableStyleProperties58.Append(tableStyleConditionalFormattingTableProperties39);
            tableStyleProperties58.Append(tableStyleConditionalFormattingTableCellProperties39);

            TableStyleProperties tableStyleProperties59 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle43 = new RunPropertiesBaseStyle();
            Bold bold45 = new Bold();
            BoldComplexScript boldComplexScript43 = new BoldComplexScript();

            runPropertiesBaseStyle43.Append(bold45);
            runPropertiesBaseStyle43.Append(boldComplexScript43);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties40 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties40 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders32 = new TableCellBorders();
            TopBorder topBorder23 = new TopBorder() { Val = BorderValues.Double, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders32.Append(topBorder23);

            tableStyleConditionalFormattingTableCellProperties40.Append(tableCellBorders32);

            tableStyleProperties59.Append(runPropertiesBaseStyle43);
            tableStyleProperties59.Append(tableStyleConditionalFormattingTableProperties40);
            tableStyleProperties59.Append(tableStyleConditionalFormattingTableCellProperties40);

            TableStyleProperties tableStyleProperties60 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle44 = new RunPropertiesBaseStyle();
            Bold bold46 = new Bold();
            BoldComplexScript boldComplexScript44 = new BoldComplexScript();

            runPropertiesBaseStyle44.Append(bold46);
            runPropertiesBaseStyle44.Append(boldComplexScript44);

            tableStyleProperties60.Append(runPropertiesBaseStyle44);

            TableStyleProperties tableStyleProperties61 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle45 = new RunPropertiesBaseStyle();
            Bold bold47 = new Bold();
            BoldComplexScript boldComplexScript45 = new BoldComplexScript();

            runPropertiesBaseStyle45.Append(bold47);
            runPropertiesBaseStyle45.Append(boldComplexScript45);

            tableStyleProperties61.Append(runPropertiesBaseStyle45);

            style44.Append(styleName44);
            style44.Append(basedOn39);
            style44.Append(uIPriority43);
            style44.Append(rsid40);
            style44.Append(styleParagraphProperties25);
            style44.Append(styleTableProperties14);
            style44.Append(tableStyleProperties58);
            style44.Append(tableStyleProperties59);
            style44.Append(tableStyleProperties60);
            style44.Append(tableStyleProperties61);

            Style style45 = new Style() { Type = StyleValues.Table, StyleId = "GridTable1Light-Accent6" };
            StyleName styleName45 = new StyleName() { Val = "Grid Table 1 Light Accent 6" };
            BasedOn basedOn40 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority44 = new UIPriority() { Val = 46 };
            Rsid rsid41 = new Rsid() { Val = "008B318B" };

            StyleParagraphProperties styleParagraphProperties26 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines35 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties26.Append(spacingBetweenLines35);

            StyleTableProperties styleTableProperties15 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize12 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize12 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders11 = new TableBorders();
            TopBorder topBorder24 = new TopBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder18 = new LeftBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder24 = new BottomBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder18 = new RightBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder10 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder10 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C5E0B3", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "66", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders11.Append(topBorder24);
            tableBorders11.Append(leftBorder18);
            tableBorders11.Append(bottomBorder24);
            tableBorders11.Append(rightBorder18);
            tableBorders11.Append(insideHorizontalBorder10);
            tableBorders11.Append(insideVerticalBorder10);

            styleTableProperties15.Append(tableStyleRowBandSize12);
            styleTableProperties15.Append(tableStyleColumnBandSize12);
            styleTableProperties15.Append(tableBorders11);

            TableStyleProperties tableStyleProperties62 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle46 = new RunPropertiesBaseStyle();
            Bold bold48 = new Bold();
            BoldComplexScript boldComplexScript46 = new BoldComplexScript();

            runPropertiesBaseStyle46.Append(bold48);
            runPropertiesBaseStyle46.Append(boldComplexScript46);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties41 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties41 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders33 = new TableCellBorders();
            BottomBorder bottomBorder25 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders33.Append(bottomBorder25);

            tableStyleConditionalFormattingTableCellProperties41.Append(tableCellBorders33);

            tableStyleProperties62.Append(runPropertiesBaseStyle46);
            tableStyleProperties62.Append(tableStyleConditionalFormattingTableProperties41);
            tableStyleProperties62.Append(tableStyleConditionalFormattingTableCellProperties41);

            TableStyleProperties tableStyleProperties63 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle47 = new RunPropertiesBaseStyle();
            Bold bold49 = new Bold();
            BoldComplexScript boldComplexScript47 = new BoldComplexScript();

            runPropertiesBaseStyle47.Append(bold49);
            runPropertiesBaseStyle47.Append(boldComplexScript47);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties42 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties42 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders34 = new TableCellBorders();
            TopBorder topBorder25 = new TopBorder() { Val = BorderValues.Double, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableCellBorders34.Append(topBorder25);

            tableStyleConditionalFormattingTableCellProperties42.Append(tableCellBorders34);

            tableStyleProperties63.Append(runPropertiesBaseStyle47);
            tableStyleProperties63.Append(tableStyleConditionalFormattingTableProperties42);
            tableStyleProperties63.Append(tableStyleConditionalFormattingTableCellProperties42);

            TableStyleProperties tableStyleProperties64 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle48 = new RunPropertiesBaseStyle();
            Bold bold50 = new Bold();
            BoldComplexScript boldComplexScript48 = new BoldComplexScript();

            runPropertiesBaseStyle48.Append(bold50);
            runPropertiesBaseStyle48.Append(boldComplexScript48);

            tableStyleProperties64.Append(runPropertiesBaseStyle48);

            TableStyleProperties tableStyleProperties65 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle49 = new RunPropertiesBaseStyle();
            Bold bold51 = new Bold();
            BoldComplexScript boldComplexScript49 = new BoldComplexScript();

            runPropertiesBaseStyle49.Append(bold51);
            runPropertiesBaseStyle49.Append(boldComplexScript49);

            tableStyleProperties65.Append(runPropertiesBaseStyle49);

            style45.Append(styleName45);
            style45.Append(basedOn40);
            style45.Append(uIPriority44);
            style45.Append(rsid41);
            style45.Append(styleParagraphProperties26);
            style45.Append(styleTableProperties15);
            style45.Append(tableStyleProperties62);
            style45.Append(tableStyleProperties63);
            style45.Append(tableStyleProperties64);
            style45.Append(tableStyleProperties65);

            Style style46 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2" };
            StyleName styleName46 = new StyleName() { Val = "Grid Table 2" };
            BasedOn basedOn41 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority45 = new UIPriority() { Val = 47 };
            Rsid rsid42 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties27 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines36 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties27.Append(spacingBetweenLines36);

            StyleTableProperties styleTableProperties16 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize13 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize13 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders12 = new TableBorders();
            TopBorder topBorder26 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder26 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder11 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder11 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders12.Append(topBorder26);
            tableBorders12.Append(bottomBorder26);
            tableBorders12.Append(insideHorizontalBorder11);
            tableBorders12.Append(insideVerticalBorder11);

            styleTableProperties16.Append(tableStyleRowBandSize13);
            styleTableProperties16.Append(tableStyleColumnBandSize13);
            styleTableProperties16.Append(tableBorders12);

            TableStyleProperties tableStyleProperties66 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle50 = new RunPropertiesBaseStyle();
            Bold bold52 = new Bold();
            BoldComplexScript boldComplexScript50 = new BoldComplexScript();

            runPropertiesBaseStyle50.Append(bold52);
            runPropertiesBaseStyle50.Append(boldComplexScript50);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties43 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties43 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders35 = new TableCellBorders();
            TopBorder topBorder27 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder27 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder12 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder12 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders35.Append(topBorder27);
            tableCellBorders35.Append(bottomBorder27);
            tableCellBorders35.Append(insideHorizontalBorder12);
            tableCellBorders35.Append(insideVerticalBorder12);
            Shading shading14 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties43.Append(tableCellBorders35);
            tableStyleConditionalFormattingTableCellProperties43.Append(shading14);

            tableStyleProperties66.Append(runPropertiesBaseStyle50);
            tableStyleProperties66.Append(tableStyleConditionalFormattingTableProperties43);
            tableStyleProperties66.Append(tableStyleConditionalFormattingTableCellProperties43);

            TableStyleProperties tableStyleProperties67 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle51 = new RunPropertiesBaseStyle();
            Bold bold53 = new Bold();
            BoldComplexScript boldComplexScript51 = new BoldComplexScript();

            runPropertiesBaseStyle51.Append(bold53);
            runPropertiesBaseStyle51.Append(boldComplexScript51);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties44 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties44 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders36 = new TableCellBorders();
            TopBorder topBorder28 = new TopBorder() { Val = BorderValues.Double, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder28 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder13 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder13 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders36.Append(topBorder28);
            tableCellBorders36.Append(bottomBorder28);
            tableCellBorders36.Append(insideHorizontalBorder13);
            tableCellBorders36.Append(insideVerticalBorder13);
            Shading shading15 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties44.Append(tableCellBorders36);
            tableStyleConditionalFormattingTableCellProperties44.Append(shading15);

            tableStyleProperties67.Append(runPropertiesBaseStyle51);
            tableStyleProperties67.Append(tableStyleConditionalFormattingTableProperties44);
            tableStyleProperties67.Append(tableStyleConditionalFormattingTableCellProperties44);

            TableStyleProperties tableStyleProperties68 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle52 = new RunPropertiesBaseStyle();
            Bold bold54 = new Bold();
            BoldComplexScript boldComplexScript52 = new BoldComplexScript();

            runPropertiesBaseStyle52.Append(bold54);
            runPropertiesBaseStyle52.Append(boldComplexScript52);

            tableStyleProperties68.Append(runPropertiesBaseStyle52);

            TableStyleProperties tableStyleProperties69 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle53 = new RunPropertiesBaseStyle();
            Bold bold55 = new Bold();
            BoldComplexScript boldComplexScript53 = new BoldComplexScript();

            runPropertiesBaseStyle53.Append(bold55);
            runPropertiesBaseStyle53.Append(boldComplexScript53);

            tableStyleProperties69.Append(runPropertiesBaseStyle53);

            TableStyleProperties tableStyleProperties70 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties45 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties45 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading16 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties45.Append(shading16);

            tableStyleProperties70.Append(tableStyleConditionalFormattingTableProperties45);
            tableStyleProperties70.Append(tableStyleConditionalFormattingTableCellProperties45);

            TableStyleProperties tableStyleProperties71 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties46 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties46 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading17 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties46.Append(shading17);

            tableStyleProperties71.Append(tableStyleConditionalFormattingTableProperties46);
            tableStyleProperties71.Append(tableStyleConditionalFormattingTableCellProperties46);

            style46.Append(styleName46);
            style46.Append(basedOn41);
            style46.Append(uIPriority45);
            style46.Append(rsid42);
            style46.Append(styleParagraphProperties27);
            style46.Append(styleTableProperties16);
            style46.Append(tableStyleProperties66);
            style46.Append(tableStyleProperties67);
            style46.Append(tableStyleProperties68);
            style46.Append(tableStyleProperties69);
            style46.Append(tableStyleProperties70);
            style46.Append(tableStyleProperties71);

            Style style47 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent1" };
            StyleName styleName47 = new StyleName() { Val = "Grid Table 2 Accent 1" };
            BasedOn basedOn42 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority46 = new UIPriority() { Val = 47 };
            Rsid rsid43 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties28 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines37 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties28.Append(spacingBetweenLines37);

            StyleTableProperties styleTableProperties17 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize14 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize14 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders13 = new TableBorders();
            TopBorder topBorder29 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder29 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder14 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder14 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders13.Append(topBorder29);
            tableBorders13.Append(bottomBorder29);
            tableBorders13.Append(insideHorizontalBorder14);
            tableBorders13.Append(insideVerticalBorder14);

            styleTableProperties17.Append(tableStyleRowBandSize14);
            styleTableProperties17.Append(tableStyleColumnBandSize14);
            styleTableProperties17.Append(tableBorders13);

            TableStyleProperties tableStyleProperties72 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle54 = new RunPropertiesBaseStyle();
            Bold bold56 = new Bold();
            BoldComplexScript boldComplexScript54 = new BoldComplexScript();

            runPropertiesBaseStyle54.Append(bold56);
            runPropertiesBaseStyle54.Append(boldComplexScript54);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties47 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties47 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders37 = new TableCellBorders();
            TopBorder topBorder30 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder30 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder15 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder15 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders37.Append(topBorder30);
            tableCellBorders37.Append(bottomBorder30);
            tableCellBorders37.Append(insideHorizontalBorder15);
            tableCellBorders37.Append(insideVerticalBorder15);
            Shading shading18 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties47.Append(tableCellBorders37);
            tableStyleConditionalFormattingTableCellProperties47.Append(shading18);

            tableStyleProperties72.Append(runPropertiesBaseStyle54);
            tableStyleProperties72.Append(tableStyleConditionalFormattingTableProperties47);
            tableStyleProperties72.Append(tableStyleConditionalFormattingTableCellProperties47);

            TableStyleProperties tableStyleProperties73 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle55 = new RunPropertiesBaseStyle();
            Bold bold57 = new Bold();
            BoldComplexScript boldComplexScript55 = new BoldComplexScript();

            runPropertiesBaseStyle55.Append(bold57);
            runPropertiesBaseStyle55.Append(boldComplexScript55);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties48 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties48 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders38 = new TableCellBorders();
            TopBorder topBorder31 = new TopBorder() { Val = BorderValues.Double, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder31 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder16 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder16 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders38.Append(topBorder31);
            tableCellBorders38.Append(bottomBorder31);
            tableCellBorders38.Append(insideHorizontalBorder16);
            tableCellBorders38.Append(insideVerticalBorder16);
            Shading shading19 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties48.Append(tableCellBorders38);
            tableStyleConditionalFormattingTableCellProperties48.Append(shading19);

            tableStyleProperties73.Append(runPropertiesBaseStyle55);
            tableStyleProperties73.Append(tableStyleConditionalFormattingTableProperties48);
            tableStyleProperties73.Append(tableStyleConditionalFormattingTableCellProperties48);

            TableStyleProperties tableStyleProperties74 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle56 = new RunPropertiesBaseStyle();
            Bold bold58 = new Bold();
            BoldComplexScript boldComplexScript56 = new BoldComplexScript();

            runPropertiesBaseStyle56.Append(bold58);
            runPropertiesBaseStyle56.Append(boldComplexScript56);

            tableStyleProperties74.Append(runPropertiesBaseStyle56);

            TableStyleProperties tableStyleProperties75 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle57 = new RunPropertiesBaseStyle();
            Bold bold59 = new Bold();
            BoldComplexScript boldComplexScript57 = new BoldComplexScript();

            runPropertiesBaseStyle57.Append(bold59);
            runPropertiesBaseStyle57.Append(boldComplexScript57);

            tableStyleProperties75.Append(runPropertiesBaseStyle57);

            TableStyleProperties tableStyleProperties76 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties49 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties49 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading20 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties49.Append(shading20);

            tableStyleProperties76.Append(tableStyleConditionalFormattingTableProperties49);
            tableStyleProperties76.Append(tableStyleConditionalFormattingTableCellProperties49);

            TableStyleProperties tableStyleProperties77 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties50 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties50 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading21 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties50.Append(shading21);

            tableStyleProperties77.Append(tableStyleConditionalFormattingTableProperties50);
            tableStyleProperties77.Append(tableStyleConditionalFormattingTableCellProperties50);

            style47.Append(styleName47);
            style47.Append(basedOn42);
            style47.Append(uIPriority46);
            style47.Append(rsid43);
            style47.Append(styleParagraphProperties28);
            style47.Append(styleTableProperties17);
            style47.Append(tableStyleProperties72);
            style47.Append(tableStyleProperties73);
            style47.Append(tableStyleProperties74);
            style47.Append(tableStyleProperties75);
            style47.Append(tableStyleProperties76);
            style47.Append(tableStyleProperties77);

            Style style48 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent2" };
            StyleName styleName48 = new StyleName() { Val = "Grid Table 2 Accent 2" };
            BasedOn basedOn43 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority47 = new UIPriority() { Val = 47 };
            Rsid rsid44 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties29 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines38 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties29.Append(spacingBetweenLines38);

            StyleTableProperties styleTableProperties18 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize15 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize15 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders14 = new TableBorders();
            TopBorder topBorder32 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder32 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder17 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder17 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders14.Append(topBorder32);
            tableBorders14.Append(bottomBorder32);
            tableBorders14.Append(insideHorizontalBorder17);
            tableBorders14.Append(insideVerticalBorder17);

            styleTableProperties18.Append(tableStyleRowBandSize15);
            styleTableProperties18.Append(tableStyleColumnBandSize15);
            styleTableProperties18.Append(tableBorders14);

            TableStyleProperties tableStyleProperties78 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle58 = new RunPropertiesBaseStyle();
            Bold bold60 = new Bold();
            BoldComplexScript boldComplexScript58 = new BoldComplexScript();

            runPropertiesBaseStyle58.Append(bold60);
            runPropertiesBaseStyle58.Append(boldComplexScript58);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties51 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties51 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders39 = new TableCellBorders();
            TopBorder topBorder33 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder33 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder18 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder18 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders39.Append(topBorder33);
            tableCellBorders39.Append(bottomBorder33);
            tableCellBorders39.Append(insideHorizontalBorder18);
            tableCellBorders39.Append(insideVerticalBorder18);
            Shading shading22 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties51.Append(tableCellBorders39);
            tableStyleConditionalFormattingTableCellProperties51.Append(shading22);

            tableStyleProperties78.Append(runPropertiesBaseStyle58);
            tableStyleProperties78.Append(tableStyleConditionalFormattingTableProperties51);
            tableStyleProperties78.Append(tableStyleConditionalFormattingTableCellProperties51);

            TableStyleProperties tableStyleProperties79 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle59 = new RunPropertiesBaseStyle();
            Bold bold61 = new Bold();
            BoldComplexScript boldComplexScript59 = new BoldComplexScript();

            runPropertiesBaseStyle59.Append(bold61);
            runPropertiesBaseStyle59.Append(boldComplexScript59);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties52 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties52 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders40 = new TableCellBorders();
            TopBorder topBorder34 = new TopBorder() { Val = BorderValues.Double, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder34 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder19 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder19 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders40.Append(topBorder34);
            tableCellBorders40.Append(bottomBorder34);
            tableCellBorders40.Append(insideHorizontalBorder19);
            tableCellBorders40.Append(insideVerticalBorder19);
            Shading shading23 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties52.Append(tableCellBorders40);
            tableStyleConditionalFormattingTableCellProperties52.Append(shading23);

            tableStyleProperties79.Append(runPropertiesBaseStyle59);
            tableStyleProperties79.Append(tableStyleConditionalFormattingTableProperties52);
            tableStyleProperties79.Append(tableStyleConditionalFormattingTableCellProperties52);

            TableStyleProperties tableStyleProperties80 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle60 = new RunPropertiesBaseStyle();
            Bold bold62 = new Bold();
            BoldComplexScript boldComplexScript60 = new BoldComplexScript();

            runPropertiesBaseStyle60.Append(bold62);
            runPropertiesBaseStyle60.Append(boldComplexScript60);

            tableStyleProperties80.Append(runPropertiesBaseStyle60);

            TableStyleProperties tableStyleProperties81 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle61 = new RunPropertiesBaseStyle();
            Bold bold63 = new Bold();
            BoldComplexScript boldComplexScript61 = new BoldComplexScript();

            runPropertiesBaseStyle61.Append(bold63);
            runPropertiesBaseStyle61.Append(boldComplexScript61);

            tableStyleProperties81.Append(runPropertiesBaseStyle61);

            TableStyleProperties tableStyleProperties82 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties53 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties53 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading24 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties53.Append(shading24);

            tableStyleProperties82.Append(tableStyleConditionalFormattingTableProperties53);
            tableStyleProperties82.Append(tableStyleConditionalFormattingTableCellProperties53);

            TableStyleProperties tableStyleProperties83 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties54 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties54 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading25 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties54.Append(shading25);

            tableStyleProperties83.Append(tableStyleConditionalFormattingTableProperties54);
            tableStyleProperties83.Append(tableStyleConditionalFormattingTableCellProperties54);

            style48.Append(styleName48);
            style48.Append(basedOn43);
            style48.Append(uIPriority47);
            style48.Append(rsid44);
            style48.Append(styleParagraphProperties29);
            style48.Append(styleTableProperties18);
            style48.Append(tableStyleProperties78);
            style48.Append(tableStyleProperties79);
            style48.Append(tableStyleProperties80);
            style48.Append(tableStyleProperties81);
            style48.Append(tableStyleProperties82);
            style48.Append(tableStyleProperties83);

            Style style49 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent3" };
            StyleName styleName49 = new StyleName() { Val = "Grid Table 2 Accent 3" };
            BasedOn basedOn44 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority48 = new UIPriority() { Val = 47 };
            Rsid rsid45 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties30 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines39 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties30.Append(spacingBetweenLines39);

            StyleTableProperties styleTableProperties19 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize16 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize16 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders15 = new TableBorders();
            TopBorder topBorder35 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder35 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder20 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder20 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders15.Append(topBorder35);
            tableBorders15.Append(bottomBorder35);
            tableBorders15.Append(insideHorizontalBorder20);
            tableBorders15.Append(insideVerticalBorder20);

            styleTableProperties19.Append(tableStyleRowBandSize16);
            styleTableProperties19.Append(tableStyleColumnBandSize16);
            styleTableProperties19.Append(tableBorders15);

            TableStyleProperties tableStyleProperties84 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle62 = new RunPropertiesBaseStyle();
            Bold bold64 = new Bold();
            BoldComplexScript boldComplexScript62 = new BoldComplexScript();

            runPropertiesBaseStyle62.Append(bold64);
            runPropertiesBaseStyle62.Append(boldComplexScript62);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties55 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties55 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders41 = new TableCellBorders();
            TopBorder topBorder36 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder36 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder21 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder21 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders41.Append(topBorder36);
            tableCellBorders41.Append(bottomBorder36);
            tableCellBorders41.Append(insideHorizontalBorder21);
            tableCellBorders41.Append(insideVerticalBorder21);
            Shading shading26 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties55.Append(tableCellBorders41);
            tableStyleConditionalFormattingTableCellProperties55.Append(shading26);

            tableStyleProperties84.Append(runPropertiesBaseStyle62);
            tableStyleProperties84.Append(tableStyleConditionalFormattingTableProperties55);
            tableStyleProperties84.Append(tableStyleConditionalFormattingTableCellProperties55);

            TableStyleProperties tableStyleProperties85 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle63 = new RunPropertiesBaseStyle();
            Bold bold65 = new Bold();
            BoldComplexScript boldComplexScript63 = new BoldComplexScript();

            runPropertiesBaseStyle63.Append(bold65);
            runPropertiesBaseStyle63.Append(boldComplexScript63);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties56 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties56 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders42 = new TableCellBorders();
            TopBorder topBorder37 = new TopBorder() { Val = BorderValues.Double, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder37 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder22 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder22 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders42.Append(topBorder37);
            tableCellBorders42.Append(bottomBorder37);
            tableCellBorders42.Append(insideHorizontalBorder22);
            tableCellBorders42.Append(insideVerticalBorder22);
            Shading shading27 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties56.Append(tableCellBorders42);
            tableStyleConditionalFormattingTableCellProperties56.Append(shading27);

            tableStyleProperties85.Append(runPropertiesBaseStyle63);
            tableStyleProperties85.Append(tableStyleConditionalFormattingTableProperties56);
            tableStyleProperties85.Append(tableStyleConditionalFormattingTableCellProperties56);

            TableStyleProperties tableStyleProperties86 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle64 = new RunPropertiesBaseStyle();
            Bold bold66 = new Bold();
            BoldComplexScript boldComplexScript64 = new BoldComplexScript();

            runPropertiesBaseStyle64.Append(bold66);
            runPropertiesBaseStyle64.Append(boldComplexScript64);

            tableStyleProperties86.Append(runPropertiesBaseStyle64);

            TableStyleProperties tableStyleProperties87 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle65 = new RunPropertiesBaseStyle();
            Bold bold67 = new Bold();
            BoldComplexScript boldComplexScript65 = new BoldComplexScript();

            runPropertiesBaseStyle65.Append(bold67);
            runPropertiesBaseStyle65.Append(boldComplexScript65);

            tableStyleProperties87.Append(runPropertiesBaseStyle65);

            TableStyleProperties tableStyleProperties88 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties57 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties57 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading28 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties57.Append(shading28);

            tableStyleProperties88.Append(tableStyleConditionalFormattingTableProperties57);
            tableStyleProperties88.Append(tableStyleConditionalFormattingTableCellProperties57);

            TableStyleProperties tableStyleProperties89 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties58 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties58 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading29 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties58.Append(shading29);

            tableStyleProperties89.Append(tableStyleConditionalFormattingTableProperties58);
            tableStyleProperties89.Append(tableStyleConditionalFormattingTableCellProperties58);

            style49.Append(styleName49);
            style49.Append(basedOn44);
            style49.Append(uIPriority48);
            style49.Append(rsid45);
            style49.Append(styleParagraphProperties30);
            style49.Append(styleTableProperties19);
            style49.Append(tableStyleProperties84);
            style49.Append(tableStyleProperties85);
            style49.Append(tableStyleProperties86);
            style49.Append(tableStyleProperties87);
            style49.Append(tableStyleProperties88);
            style49.Append(tableStyleProperties89);

            Style style50 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent4" };
            StyleName styleName50 = new StyleName() { Val = "Grid Table 2 Accent 4" };
            BasedOn basedOn45 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority49 = new UIPriority() { Val = 47 };
            Rsid rsid46 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties31 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines40 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties31.Append(spacingBetweenLines40);

            StyleTableProperties styleTableProperties20 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize17 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize17 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders16 = new TableBorders();
            TopBorder topBorder38 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder38 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder23 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder23 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders16.Append(topBorder38);
            tableBorders16.Append(bottomBorder38);
            tableBorders16.Append(insideHorizontalBorder23);
            tableBorders16.Append(insideVerticalBorder23);

            styleTableProperties20.Append(tableStyleRowBandSize17);
            styleTableProperties20.Append(tableStyleColumnBandSize17);
            styleTableProperties20.Append(tableBorders16);

            TableStyleProperties tableStyleProperties90 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle66 = new RunPropertiesBaseStyle();
            Bold bold68 = new Bold();
            BoldComplexScript boldComplexScript66 = new BoldComplexScript();

            runPropertiesBaseStyle66.Append(bold68);
            runPropertiesBaseStyle66.Append(boldComplexScript66);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties59 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties59 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders43 = new TableCellBorders();
            TopBorder topBorder39 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder39 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder24 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder24 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders43.Append(topBorder39);
            tableCellBorders43.Append(bottomBorder39);
            tableCellBorders43.Append(insideHorizontalBorder24);
            tableCellBorders43.Append(insideVerticalBorder24);
            Shading shading30 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties59.Append(tableCellBorders43);
            tableStyleConditionalFormattingTableCellProperties59.Append(shading30);

            tableStyleProperties90.Append(runPropertiesBaseStyle66);
            tableStyleProperties90.Append(tableStyleConditionalFormattingTableProperties59);
            tableStyleProperties90.Append(tableStyleConditionalFormattingTableCellProperties59);

            TableStyleProperties tableStyleProperties91 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle67 = new RunPropertiesBaseStyle();
            Bold bold69 = new Bold();
            BoldComplexScript boldComplexScript67 = new BoldComplexScript();

            runPropertiesBaseStyle67.Append(bold69);
            runPropertiesBaseStyle67.Append(boldComplexScript67);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties60 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties60 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders44 = new TableCellBorders();
            TopBorder topBorder40 = new TopBorder() { Val = BorderValues.Double, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder40 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder25 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder25 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders44.Append(topBorder40);
            tableCellBorders44.Append(bottomBorder40);
            tableCellBorders44.Append(insideHorizontalBorder25);
            tableCellBorders44.Append(insideVerticalBorder25);
            Shading shading31 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties60.Append(tableCellBorders44);
            tableStyleConditionalFormattingTableCellProperties60.Append(shading31);

            tableStyleProperties91.Append(runPropertiesBaseStyle67);
            tableStyleProperties91.Append(tableStyleConditionalFormattingTableProperties60);
            tableStyleProperties91.Append(tableStyleConditionalFormattingTableCellProperties60);

            TableStyleProperties tableStyleProperties92 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle68 = new RunPropertiesBaseStyle();
            Bold bold70 = new Bold();
            BoldComplexScript boldComplexScript68 = new BoldComplexScript();

            runPropertiesBaseStyle68.Append(bold70);
            runPropertiesBaseStyle68.Append(boldComplexScript68);

            tableStyleProperties92.Append(runPropertiesBaseStyle68);

            TableStyleProperties tableStyleProperties93 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle69 = new RunPropertiesBaseStyle();
            Bold bold71 = new Bold();
            BoldComplexScript boldComplexScript69 = new BoldComplexScript();

            runPropertiesBaseStyle69.Append(bold71);
            runPropertiesBaseStyle69.Append(boldComplexScript69);

            tableStyleProperties93.Append(runPropertiesBaseStyle69);

            TableStyleProperties tableStyleProperties94 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties61 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties61 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading32 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties61.Append(shading32);

            tableStyleProperties94.Append(tableStyleConditionalFormattingTableProperties61);
            tableStyleProperties94.Append(tableStyleConditionalFormattingTableCellProperties61);

            TableStyleProperties tableStyleProperties95 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties62 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties62 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading33 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties62.Append(shading33);

            tableStyleProperties95.Append(tableStyleConditionalFormattingTableProperties62);
            tableStyleProperties95.Append(tableStyleConditionalFormattingTableCellProperties62);

            style50.Append(styleName50);
            style50.Append(basedOn45);
            style50.Append(uIPriority49);
            style50.Append(rsid46);
            style50.Append(styleParagraphProperties31);
            style50.Append(styleTableProperties20);
            style50.Append(tableStyleProperties90);
            style50.Append(tableStyleProperties91);
            style50.Append(tableStyleProperties92);
            style50.Append(tableStyleProperties93);
            style50.Append(tableStyleProperties94);
            style50.Append(tableStyleProperties95);

            Style style51 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent5" };
            StyleName styleName51 = new StyleName() { Val = "Grid Table 2 Accent 5" };
            BasedOn basedOn46 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority50 = new UIPriority() { Val = 47 };
            Rsid rsid47 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties32 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines41 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties32.Append(spacingBetweenLines41);

            StyleTableProperties styleTableProperties21 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize18 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize18 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders17 = new TableBorders();
            TopBorder topBorder41 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder41 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder26 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder26 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders17.Append(topBorder41);
            tableBorders17.Append(bottomBorder41);
            tableBorders17.Append(insideHorizontalBorder26);
            tableBorders17.Append(insideVerticalBorder26);

            styleTableProperties21.Append(tableStyleRowBandSize18);
            styleTableProperties21.Append(tableStyleColumnBandSize18);
            styleTableProperties21.Append(tableBorders17);

            TableStyleProperties tableStyleProperties96 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle70 = new RunPropertiesBaseStyle();
            Bold bold72 = new Bold();
            BoldComplexScript boldComplexScript70 = new BoldComplexScript();

            runPropertiesBaseStyle70.Append(bold72);
            runPropertiesBaseStyle70.Append(boldComplexScript70);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties63 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties63 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders45 = new TableCellBorders();
            TopBorder topBorder42 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder42 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder27 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder27 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders45.Append(topBorder42);
            tableCellBorders45.Append(bottomBorder42);
            tableCellBorders45.Append(insideHorizontalBorder27);
            tableCellBorders45.Append(insideVerticalBorder27);
            Shading shading34 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties63.Append(tableCellBorders45);
            tableStyleConditionalFormattingTableCellProperties63.Append(shading34);

            tableStyleProperties96.Append(runPropertiesBaseStyle70);
            tableStyleProperties96.Append(tableStyleConditionalFormattingTableProperties63);
            tableStyleProperties96.Append(tableStyleConditionalFormattingTableCellProperties63);

            TableStyleProperties tableStyleProperties97 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle71 = new RunPropertiesBaseStyle();
            Bold bold73 = new Bold();
            BoldComplexScript boldComplexScript71 = new BoldComplexScript();

            runPropertiesBaseStyle71.Append(bold73);
            runPropertiesBaseStyle71.Append(boldComplexScript71);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties64 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties64 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders46 = new TableCellBorders();
            TopBorder topBorder43 = new TopBorder() { Val = BorderValues.Double, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder43 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder28 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder28 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders46.Append(topBorder43);
            tableCellBorders46.Append(bottomBorder43);
            tableCellBorders46.Append(insideHorizontalBorder28);
            tableCellBorders46.Append(insideVerticalBorder28);
            Shading shading35 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties64.Append(tableCellBorders46);
            tableStyleConditionalFormattingTableCellProperties64.Append(shading35);

            tableStyleProperties97.Append(runPropertiesBaseStyle71);
            tableStyleProperties97.Append(tableStyleConditionalFormattingTableProperties64);
            tableStyleProperties97.Append(tableStyleConditionalFormattingTableCellProperties64);

            TableStyleProperties tableStyleProperties98 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle72 = new RunPropertiesBaseStyle();
            Bold bold74 = new Bold();
            BoldComplexScript boldComplexScript72 = new BoldComplexScript();

            runPropertiesBaseStyle72.Append(bold74);
            runPropertiesBaseStyle72.Append(boldComplexScript72);

            tableStyleProperties98.Append(runPropertiesBaseStyle72);

            TableStyleProperties tableStyleProperties99 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle73 = new RunPropertiesBaseStyle();
            Bold bold75 = new Bold();
            BoldComplexScript boldComplexScript73 = new BoldComplexScript();

            runPropertiesBaseStyle73.Append(bold75);
            runPropertiesBaseStyle73.Append(boldComplexScript73);

            tableStyleProperties99.Append(runPropertiesBaseStyle73);

            TableStyleProperties tableStyleProperties100 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties65 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties65 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading36 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties65.Append(shading36);

            tableStyleProperties100.Append(tableStyleConditionalFormattingTableProperties65);
            tableStyleProperties100.Append(tableStyleConditionalFormattingTableCellProperties65);

            TableStyleProperties tableStyleProperties101 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties66 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties66 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading37 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties66.Append(shading37);

            tableStyleProperties101.Append(tableStyleConditionalFormattingTableProperties66);
            tableStyleProperties101.Append(tableStyleConditionalFormattingTableCellProperties66);

            style51.Append(styleName51);
            style51.Append(basedOn46);
            style51.Append(uIPriority50);
            style51.Append(rsid47);
            style51.Append(styleParagraphProperties32);
            style51.Append(styleTableProperties21);
            style51.Append(tableStyleProperties96);
            style51.Append(tableStyleProperties97);
            style51.Append(tableStyleProperties98);
            style51.Append(tableStyleProperties99);
            style51.Append(tableStyleProperties100);
            style51.Append(tableStyleProperties101);

            Style style52 = new Style() { Type = StyleValues.Table, StyleId = "GridTable2-Accent6" };
            StyleName styleName52 = new StyleName() { Val = "Grid Table 2 Accent 6" };
            BasedOn basedOn47 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority51 = new UIPriority() { Val = 47 };
            Rsid rsid48 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties33 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines42 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties33.Append(spacingBetweenLines42);

            StyleTableProperties styleTableProperties22 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize19 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize19 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders18 = new TableBorders();
            TopBorder topBorder44 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder44 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder29 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder29 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };

            tableBorders18.Append(topBorder44);
            tableBorders18.Append(bottomBorder44);
            tableBorders18.Append(insideHorizontalBorder29);
            tableBorders18.Append(insideVerticalBorder29);

            styleTableProperties22.Append(tableStyleRowBandSize19);
            styleTableProperties22.Append(tableStyleColumnBandSize19);
            styleTableProperties22.Append(tableBorders18);

            TableStyleProperties tableStyleProperties102 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle74 = new RunPropertiesBaseStyle();
            Bold bold76 = new Bold();
            BoldComplexScript boldComplexScript74 = new BoldComplexScript();

            runPropertiesBaseStyle74.Append(bold76);
            runPropertiesBaseStyle74.Append(boldComplexScript74);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties67 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties67 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders47 = new TableCellBorders();
            TopBorder topBorder45 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder45 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder30 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder30 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders47.Append(topBorder45);
            tableCellBorders47.Append(bottomBorder45);
            tableCellBorders47.Append(insideHorizontalBorder30);
            tableCellBorders47.Append(insideVerticalBorder30);
            Shading shading38 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties67.Append(tableCellBorders47);
            tableStyleConditionalFormattingTableCellProperties67.Append(shading38);

            tableStyleProperties102.Append(runPropertiesBaseStyle74);
            tableStyleProperties102.Append(tableStyleConditionalFormattingTableProperties67);
            tableStyleProperties102.Append(tableStyleConditionalFormattingTableCellProperties67);

            TableStyleProperties tableStyleProperties103 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle75 = new RunPropertiesBaseStyle();
            Bold bold77 = new Bold();
            BoldComplexScript boldComplexScript75 = new BoldComplexScript();

            runPropertiesBaseStyle75.Append(bold77);
            runPropertiesBaseStyle75.Append(boldComplexScript75);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties68 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties68 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders48 = new TableCellBorders();
            TopBorder topBorder46 = new TopBorder() { Val = BorderValues.Double, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)2U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder46 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder31 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder31 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders48.Append(topBorder46);
            tableCellBorders48.Append(bottomBorder46);
            tableCellBorders48.Append(insideHorizontalBorder31);
            tableCellBorders48.Append(insideVerticalBorder31);
            Shading shading39 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties68.Append(tableCellBorders48);
            tableStyleConditionalFormattingTableCellProperties68.Append(shading39);

            tableStyleProperties103.Append(runPropertiesBaseStyle75);
            tableStyleProperties103.Append(tableStyleConditionalFormattingTableProperties68);
            tableStyleProperties103.Append(tableStyleConditionalFormattingTableCellProperties68);

            TableStyleProperties tableStyleProperties104 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle76 = new RunPropertiesBaseStyle();
            Bold bold78 = new Bold();
            BoldComplexScript boldComplexScript76 = new BoldComplexScript();

            runPropertiesBaseStyle76.Append(bold78);
            runPropertiesBaseStyle76.Append(boldComplexScript76);

            tableStyleProperties104.Append(runPropertiesBaseStyle76);

            TableStyleProperties tableStyleProperties105 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle77 = new RunPropertiesBaseStyle();
            Bold bold79 = new Bold();
            BoldComplexScript boldComplexScript77 = new BoldComplexScript();

            runPropertiesBaseStyle77.Append(bold79);
            runPropertiesBaseStyle77.Append(boldComplexScript77);

            tableStyleProperties105.Append(runPropertiesBaseStyle77);

            TableStyleProperties tableStyleProperties106 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties69 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties69 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading40 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties69.Append(shading40);

            tableStyleProperties106.Append(tableStyleConditionalFormattingTableProperties69);
            tableStyleProperties106.Append(tableStyleConditionalFormattingTableCellProperties69);

            TableStyleProperties tableStyleProperties107 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties70 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties70 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading41 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties70.Append(shading41);

            tableStyleProperties107.Append(tableStyleConditionalFormattingTableProperties70);
            tableStyleProperties107.Append(tableStyleConditionalFormattingTableCellProperties70);

            style52.Append(styleName52);
            style52.Append(basedOn47);
            style52.Append(uIPriority51);
            style52.Append(rsid48);
            style52.Append(styleParagraphProperties33);
            style52.Append(styleTableProperties22);
            style52.Append(tableStyleProperties102);
            style52.Append(tableStyleProperties103);
            style52.Append(tableStyleProperties104);
            style52.Append(tableStyleProperties105);
            style52.Append(tableStyleProperties106);
            style52.Append(tableStyleProperties107);

            Style style53 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3" };
            StyleName styleName53 = new StyleName() { Val = "Grid Table 3" };
            BasedOn basedOn48 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority52 = new UIPriority() { Val = 48 };
            Rsid rsid49 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties34 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines43 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties34.Append(spacingBetweenLines43);

            StyleTableProperties styleTableProperties23 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize20 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize20 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders19 = new TableBorders();
            TopBorder topBorder47 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder19 = new LeftBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder47 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder19 = new RightBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder32 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder32 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders19.Append(topBorder47);
            tableBorders19.Append(leftBorder19);
            tableBorders19.Append(bottomBorder47);
            tableBorders19.Append(rightBorder19);
            tableBorders19.Append(insideHorizontalBorder32);
            tableBorders19.Append(insideVerticalBorder32);

            styleTableProperties23.Append(tableStyleRowBandSize20);
            styleTableProperties23.Append(tableStyleColumnBandSize20);
            styleTableProperties23.Append(tableBorders19);

            TableStyleProperties tableStyleProperties108 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle78 = new RunPropertiesBaseStyle();
            Bold bold80 = new Bold();
            BoldComplexScript boldComplexScript78 = new BoldComplexScript();

            runPropertiesBaseStyle78.Append(bold80);
            runPropertiesBaseStyle78.Append(boldComplexScript78);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties71 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties71 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders49 = new TableCellBorders();
            TopBorder topBorder48 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder20 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder20 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder33 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder33 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders49.Append(topBorder48);
            tableCellBorders49.Append(leftBorder20);
            tableCellBorders49.Append(rightBorder20);
            tableCellBorders49.Append(insideHorizontalBorder33);
            tableCellBorders49.Append(insideVerticalBorder33);
            Shading shading42 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties71.Append(tableCellBorders49);
            tableStyleConditionalFormattingTableCellProperties71.Append(shading42);

            tableStyleProperties108.Append(runPropertiesBaseStyle78);
            tableStyleProperties108.Append(tableStyleConditionalFormattingTableProperties71);
            tableStyleProperties108.Append(tableStyleConditionalFormattingTableCellProperties71);

            TableStyleProperties tableStyleProperties109 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle79 = new RunPropertiesBaseStyle();
            Bold bold81 = new Bold();
            BoldComplexScript boldComplexScript79 = new BoldComplexScript();

            runPropertiesBaseStyle79.Append(bold81);
            runPropertiesBaseStyle79.Append(boldComplexScript79);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties72 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties72 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders50 = new TableCellBorders();
            LeftBorder leftBorder21 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder48 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder21 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder34 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder34 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders50.Append(leftBorder21);
            tableCellBorders50.Append(bottomBorder48);
            tableCellBorders50.Append(rightBorder21);
            tableCellBorders50.Append(insideHorizontalBorder34);
            tableCellBorders50.Append(insideVerticalBorder34);
            Shading shading43 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties72.Append(tableCellBorders50);
            tableStyleConditionalFormattingTableCellProperties72.Append(shading43);

            tableStyleProperties109.Append(runPropertiesBaseStyle79);
            tableStyleProperties109.Append(tableStyleConditionalFormattingTableProperties72);
            tableStyleProperties109.Append(tableStyleConditionalFormattingTableCellProperties72);

            TableStyleProperties tableStyleProperties110 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties35 = new StyleParagraphProperties();
            Justification justification7 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties35.Append(justification7);

            RunPropertiesBaseStyle runPropertiesBaseStyle80 = new RunPropertiesBaseStyle();
            Italic italic17 = new Italic();
            ItalicComplexScript italicComplexScript15 = new ItalicComplexScript();

            runPropertiesBaseStyle80.Append(italic17);
            runPropertiesBaseStyle80.Append(italicComplexScript15);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties73 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties73 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders51 = new TableCellBorders();
            TopBorder topBorder49 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder22 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder49 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder35 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder35 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders51.Append(topBorder49);
            tableCellBorders51.Append(leftBorder22);
            tableCellBorders51.Append(bottomBorder49);
            tableCellBorders51.Append(insideHorizontalBorder35);
            tableCellBorders51.Append(insideVerticalBorder35);
            Shading shading44 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties73.Append(tableCellBorders51);
            tableStyleConditionalFormattingTableCellProperties73.Append(shading44);

            tableStyleProperties110.Append(styleParagraphProperties35);
            tableStyleProperties110.Append(runPropertiesBaseStyle80);
            tableStyleProperties110.Append(tableStyleConditionalFormattingTableProperties73);
            tableStyleProperties110.Append(tableStyleConditionalFormattingTableCellProperties73);

            TableStyleProperties tableStyleProperties111 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle81 = new RunPropertiesBaseStyle();
            Italic italic18 = new Italic();
            ItalicComplexScript italicComplexScript16 = new ItalicComplexScript();

            runPropertiesBaseStyle81.Append(italic18);
            runPropertiesBaseStyle81.Append(italicComplexScript16);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties74 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties74 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders52 = new TableCellBorders();
            TopBorder topBorder50 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder50 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder22 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder36 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder36 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders52.Append(topBorder50);
            tableCellBorders52.Append(bottomBorder50);
            tableCellBorders52.Append(rightBorder22);
            tableCellBorders52.Append(insideHorizontalBorder36);
            tableCellBorders52.Append(insideVerticalBorder36);
            Shading shading45 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties74.Append(tableCellBorders52);
            tableStyleConditionalFormattingTableCellProperties74.Append(shading45);

            tableStyleProperties111.Append(runPropertiesBaseStyle81);
            tableStyleProperties111.Append(tableStyleConditionalFormattingTableProperties74);
            tableStyleProperties111.Append(tableStyleConditionalFormattingTableCellProperties74);

            TableStyleProperties tableStyleProperties112 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties75 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties75 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading46 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties75.Append(shading46);

            tableStyleProperties112.Append(tableStyleConditionalFormattingTableProperties75);
            tableStyleProperties112.Append(tableStyleConditionalFormattingTableCellProperties75);

            TableStyleProperties tableStyleProperties113 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties76 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties76 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading47 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties76.Append(shading47);

            tableStyleProperties113.Append(tableStyleConditionalFormattingTableProperties76);
            tableStyleProperties113.Append(tableStyleConditionalFormattingTableCellProperties76);

            TableStyleProperties tableStyleProperties114 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties77 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties77 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders53 = new TableCellBorders();
            BottomBorder bottomBorder51 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders53.Append(bottomBorder51);

            tableStyleConditionalFormattingTableCellProperties77.Append(tableCellBorders53);

            tableStyleProperties114.Append(tableStyleConditionalFormattingTableProperties77);
            tableStyleProperties114.Append(tableStyleConditionalFormattingTableCellProperties77);

            TableStyleProperties tableStyleProperties115 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties78 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties78 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders54 = new TableCellBorders();
            BottomBorder bottomBorder52 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders54.Append(bottomBorder52);

            tableStyleConditionalFormattingTableCellProperties78.Append(tableCellBorders54);

            tableStyleProperties115.Append(tableStyleConditionalFormattingTableProperties78);
            tableStyleProperties115.Append(tableStyleConditionalFormattingTableCellProperties78);

            TableStyleProperties tableStyleProperties116 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties79 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties79 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders55 = new TableCellBorders();
            TopBorder topBorder51 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders55.Append(topBorder51);

            tableStyleConditionalFormattingTableCellProperties79.Append(tableCellBorders55);

            tableStyleProperties116.Append(tableStyleConditionalFormattingTableProperties79);
            tableStyleProperties116.Append(tableStyleConditionalFormattingTableCellProperties79);

            TableStyleProperties tableStyleProperties117 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties80 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties80 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders56 = new TableCellBorders();
            TopBorder topBorder52 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders56.Append(topBorder52);

            tableStyleConditionalFormattingTableCellProperties80.Append(tableCellBorders56);

            tableStyleProperties117.Append(tableStyleConditionalFormattingTableProperties80);
            tableStyleProperties117.Append(tableStyleConditionalFormattingTableCellProperties80);

            style53.Append(styleName53);
            style53.Append(basedOn48);
            style53.Append(uIPriority52);
            style53.Append(rsid49);
            style53.Append(styleParagraphProperties34);
            style53.Append(styleTableProperties23);
            style53.Append(tableStyleProperties108);
            style53.Append(tableStyleProperties109);
            style53.Append(tableStyleProperties110);
            style53.Append(tableStyleProperties111);
            style53.Append(tableStyleProperties112);
            style53.Append(tableStyleProperties113);
            style53.Append(tableStyleProperties114);
            style53.Append(tableStyleProperties115);
            style53.Append(tableStyleProperties116);
            style53.Append(tableStyleProperties117);

            Style style54 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent1" };
            StyleName styleName54 = new StyleName() { Val = "Grid Table 3 Accent 1" };
            BasedOn basedOn49 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority53 = new UIPriority() { Val = 48 };
            Rsid rsid50 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties36 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines44 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties36.Append(spacingBetweenLines44);

            StyleTableProperties styleTableProperties24 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize21 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize21 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders20 = new TableBorders();
            TopBorder topBorder53 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder23 = new LeftBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder53 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder23 = new RightBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder37 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder37 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders20.Append(topBorder53);
            tableBorders20.Append(leftBorder23);
            tableBorders20.Append(bottomBorder53);
            tableBorders20.Append(rightBorder23);
            tableBorders20.Append(insideHorizontalBorder37);
            tableBorders20.Append(insideVerticalBorder37);

            styleTableProperties24.Append(tableStyleRowBandSize21);
            styleTableProperties24.Append(tableStyleColumnBandSize21);
            styleTableProperties24.Append(tableBorders20);

            TableStyleProperties tableStyleProperties118 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle82 = new RunPropertiesBaseStyle();
            Bold bold82 = new Bold();
            BoldComplexScript boldComplexScript80 = new BoldComplexScript();

            runPropertiesBaseStyle82.Append(bold82);
            runPropertiesBaseStyle82.Append(boldComplexScript80);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties81 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties81 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders57 = new TableCellBorders();
            TopBorder topBorder54 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder24 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder24 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder38 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder38 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders57.Append(topBorder54);
            tableCellBorders57.Append(leftBorder24);
            tableCellBorders57.Append(rightBorder24);
            tableCellBorders57.Append(insideHorizontalBorder38);
            tableCellBorders57.Append(insideVerticalBorder38);
            Shading shading48 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties81.Append(tableCellBorders57);
            tableStyleConditionalFormattingTableCellProperties81.Append(shading48);

            tableStyleProperties118.Append(runPropertiesBaseStyle82);
            tableStyleProperties118.Append(tableStyleConditionalFormattingTableProperties81);
            tableStyleProperties118.Append(tableStyleConditionalFormattingTableCellProperties81);

            TableStyleProperties tableStyleProperties119 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle83 = new RunPropertiesBaseStyle();
            Bold bold83 = new Bold();
            BoldComplexScript boldComplexScript81 = new BoldComplexScript();

            runPropertiesBaseStyle83.Append(bold83);
            runPropertiesBaseStyle83.Append(boldComplexScript81);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties82 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties82 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders58 = new TableCellBorders();
            LeftBorder leftBorder25 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder54 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder25 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder39 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder39 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders58.Append(leftBorder25);
            tableCellBorders58.Append(bottomBorder54);
            tableCellBorders58.Append(rightBorder25);
            tableCellBorders58.Append(insideHorizontalBorder39);
            tableCellBorders58.Append(insideVerticalBorder39);
            Shading shading49 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties82.Append(tableCellBorders58);
            tableStyleConditionalFormattingTableCellProperties82.Append(shading49);

            tableStyleProperties119.Append(runPropertiesBaseStyle83);
            tableStyleProperties119.Append(tableStyleConditionalFormattingTableProperties82);
            tableStyleProperties119.Append(tableStyleConditionalFormattingTableCellProperties82);

            TableStyleProperties tableStyleProperties120 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties37 = new StyleParagraphProperties();
            Justification justification8 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties37.Append(justification8);

            RunPropertiesBaseStyle runPropertiesBaseStyle84 = new RunPropertiesBaseStyle();
            Italic italic19 = new Italic();
            ItalicComplexScript italicComplexScript17 = new ItalicComplexScript();

            runPropertiesBaseStyle84.Append(italic19);
            runPropertiesBaseStyle84.Append(italicComplexScript17);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties83 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties83 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders59 = new TableCellBorders();
            TopBorder topBorder55 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder26 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder55 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder40 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder40 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders59.Append(topBorder55);
            tableCellBorders59.Append(leftBorder26);
            tableCellBorders59.Append(bottomBorder55);
            tableCellBorders59.Append(insideHorizontalBorder40);
            tableCellBorders59.Append(insideVerticalBorder40);
            Shading shading50 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties83.Append(tableCellBorders59);
            tableStyleConditionalFormattingTableCellProperties83.Append(shading50);

            tableStyleProperties120.Append(styleParagraphProperties37);
            tableStyleProperties120.Append(runPropertiesBaseStyle84);
            tableStyleProperties120.Append(tableStyleConditionalFormattingTableProperties83);
            tableStyleProperties120.Append(tableStyleConditionalFormattingTableCellProperties83);

            TableStyleProperties tableStyleProperties121 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle85 = new RunPropertiesBaseStyle();
            Italic italic20 = new Italic();
            ItalicComplexScript italicComplexScript18 = new ItalicComplexScript();

            runPropertiesBaseStyle85.Append(italic20);
            runPropertiesBaseStyle85.Append(italicComplexScript18);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties84 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties84 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders60 = new TableCellBorders();
            TopBorder topBorder56 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder56 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder26 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder41 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder41 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders60.Append(topBorder56);
            tableCellBorders60.Append(bottomBorder56);
            tableCellBorders60.Append(rightBorder26);
            tableCellBorders60.Append(insideHorizontalBorder41);
            tableCellBorders60.Append(insideVerticalBorder41);
            Shading shading51 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties84.Append(tableCellBorders60);
            tableStyleConditionalFormattingTableCellProperties84.Append(shading51);

            tableStyleProperties121.Append(runPropertiesBaseStyle85);
            tableStyleProperties121.Append(tableStyleConditionalFormattingTableProperties84);
            tableStyleProperties121.Append(tableStyleConditionalFormattingTableCellProperties84);

            TableStyleProperties tableStyleProperties122 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties85 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties85 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading52 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties85.Append(shading52);

            tableStyleProperties122.Append(tableStyleConditionalFormattingTableProperties85);
            tableStyleProperties122.Append(tableStyleConditionalFormattingTableCellProperties85);

            TableStyleProperties tableStyleProperties123 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties86 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties86 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading53 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties86.Append(shading53);

            tableStyleProperties123.Append(tableStyleConditionalFormattingTableProperties86);
            tableStyleProperties123.Append(tableStyleConditionalFormattingTableCellProperties86);

            TableStyleProperties tableStyleProperties124 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties87 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties87 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders61 = new TableCellBorders();
            BottomBorder bottomBorder57 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders61.Append(bottomBorder57);

            tableStyleConditionalFormattingTableCellProperties87.Append(tableCellBorders61);

            tableStyleProperties124.Append(tableStyleConditionalFormattingTableProperties87);
            tableStyleProperties124.Append(tableStyleConditionalFormattingTableCellProperties87);

            TableStyleProperties tableStyleProperties125 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties88 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties88 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders62 = new TableCellBorders();
            BottomBorder bottomBorder58 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders62.Append(bottomBorder58);

            tableStyleConditionalFormattingTableCellProperties88.Append(tableCellBorders62);

            tableStyleProperties125.Append(tableStyleConditionalFormattingTableProperties88);
            tableStyleProperties125.Append(tableStyleConditionalFormattingTableCellProperties88);

            TableStyleProperties tableStyleProperties126 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties89 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties89 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders63 = new TableCellBorders();
            TopBorder topBorder57 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders63.Append(topBorder57);

            tableStyleConditionalFormattingTableCellProperties89.Append(tableCellBorders63);

            tableStyleProperties126.Append(tableStyleConditionalFormattingTableProperties89);
            tableStyleProperties126.Append(tableStyleConditionalFormattingTableCellProperties89);

            TableStyleProperties tableStyleProperties127 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties90 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties90 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders64 = new TableCellBorders();
            TopBorder topBorder58 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders64.Append(topBorder58);

            tableStyleConditionalFormattingTableCellProperties90.Append(tableCellBorders64);

            tableStyleProperties127.Append(tableStyleConditionalFormattingTableProperties90);
            tableStyleProperties127.Append(tableStyleConditionalFormattingTableCellProperties90);

            style54.Append(styleName54);
            style54.Append(basedOn49);
            style54.Append(uIPriority53);
            style54.Append(rsid50);
            style54.Append(styleParagraphProperties36);
            style54.Append(styleTableProperties24);
            style54.Append(tableStyleProperties118);
            style54.Append(tableStyleProperties119);
            style54.Append(tableStyleProperties120);
            style54.Append(tableStyleProperties121);
            style54.Append(tableStyleProperties122);
            style54.Append(tableStyleProperties123);
            style54.Append(tableStyleProperties124);
            style54.Append(tableStyleProperties125);
            style54.Append(tableStyleProperties126);
            style54.Append(tableStyleProperties127);

            Style style55 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent2" };
            StyleName styleName55 = new StyleName() { Val = "Grid Table 3 Accent 2" };
            BasedOn basedOn50 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority54 = new UIPriority() { Val = 48 };
            Rsid rsid51 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties38 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines45 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties38.Append(spacingBetweenLines45);

            StyleTableProperties styleTableProperties25 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize22 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize22 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders21 = new TableBorders();
            TopBorder topBorder59 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder27 = new LeftBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder59 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder27 = new RightBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder42 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder42 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders21.Append(topBorder59);
            tableBorders21.Append(leftBorder27);
            tableBorders21.Append(bottomBorder59);
            tableBorders21.Append(rightBorder27);
            tableBorders21.Append(insideHorizontalBorder42);
            tableBorders21.Append(insideVerticalBorder42);

            styleTableProperties25.Append(tableStyleRowBandSize22);
            styleTableProperties25.Append(tableStyleColumnBandSize22);
            styleTableProperties25.Append(tableBorders21);

            TableStyleProperties tableStyleProperties128 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle86 = new RunPropertiesBaseStyle();
            Bold bold84 = new Bold();
            BoldComplexScript boldComplexScript82 = new BoldComplexScript();

            runPropertiesBaseStyle86.Append(bold84);
            runPropertiesBaseStyle86.Append(boldComplexScript82);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties91 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties91 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders65 = new TableCellBorders();
            TopBorder topBorder60 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder28 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder28 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder43 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder43 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders65.Append(topBorder60);
            tableCellBorders65.Append(leftBorder28);
            tableCellBorders65.Append(rightBorder28);
            tableCellBorders65.Append(insideHorizontalBorder43);
            tableCellBorders65.Append(insideVerticalBorder43);
            Shading shading54 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties91.Append(tableCellBorders65);
            tableStyleConditionalFormattingTableCellProperties91.Append(shading54);

            tableStyleProperties128.Append(runPropertiesBaseStyle86);
            tableStyleProperties128.Append(tableStyleConditionalFormattingTableProperties91);
            tableStyleProperties128.Append(tableStyleConditionalFormattingTableCellProperties91);

            TableStyleProperties tableStyleProperties129 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle87 = new RunPropertiesBaseStyle();
            Bold bold85 = new Bold();
            BoldComplexScript boldComplexScript83 = new BoldComplexScript();

            runPropertiesBaseStyle87.Append(bold85);
            runPropertiesBaseStyle87.Append(boldComplexScript83);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties92 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties92 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders66 = new TableCellBorders();
            LeftBorder leftBorder29 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder60 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder29 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder44 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder44 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders66.Append(leftBorder29);
            tableCellBorders66.Append(bottomBorder60);
            tableCellBorders66.Append(rightBorder29);
            tableCellBorders66.Append(insideHorizontalBorder44);
            tableCellBorders66.Append(insideVerticalBorder44);
            Shading shading55 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties92.Append(tableCellBorders66);
            tableStyleConditionalFormattingTableCellProperties92.Append(shading55);

            tableStyleProperties129.Append(runPropertiesBaseStyle87);
            tableStyleProperties129.Append(tableStyleConditionalFormattingTableProperties92);
            tableStyleProperties129.Append(tableStyleConditionalFormattingTableCellProperties92);

            TableStyleProperties tableStyleProperties130 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties39 = new StyleParagraphProperties();
            Justification justification9 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties39.Append(justification9);

            RunPropertiesBaseStyle runPropertiesBaseStyle88 = new RunPropertiesBaseStyle();
            Italic italic21 = new Italic();
            ItalicComplexScript italicComplexScript19 = new ItalicComplexScript();

            runPropertiesBaseStyle88.Append(italic21);
            runPropertiesBaseStyle88.Append(italicComplexScript19);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties93 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties93 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders67 = new TableCellBorders();
            TopBorder topBorder61 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder30 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder61 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder45 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder45 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders67.Append(topBorder61);
            tableCellBorders67.Append(leftBorder30);
            tableCellBorders67.Append(bottomBorder61);
            tableCellBorders67.Append(insideHorizontalBorder45);
            tableCellBorders67.Append(insideVerticalBorder45);
            Shading shading56 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties93.Append(tableCellBorders67);
            tableStyleConditionalFormattingTableCellProperties93.Append(shading56);

            tableStyleProperties130.Append(styleParagraphProperties39);
            tableStyleProperties130.Append(runPropertiesBaseStyle88);
            tableStyleProperties130.Append(tableStyleConditionalFormattingTableProperties93);
            tableStyleProperties130.Append(tableStyleConditionalFormattingTableCellProperties93);

            TableStyleProperties tableStyleProperties131 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle89 = new RunPropertiesBaseStyle();
            Italic italic22 = new Italic();
            ItalicComplexScript italicComplexScript20 = new ItalicComplexScript();

            runPropertiesBaseStyle89.Append(italic22);
            runPropertiesBaseStyle89.Append(italicComplexScript20);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties94 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties94 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders68 = new TableCellBorders();
            TopBorder topBorder62 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder62 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder30 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder46 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder46 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders68.Append(topBorder62);
            tableCellBorders68.Append(bottomBorder62);
            tableCellBorders68.Append(rightBorder30);
            tableCellBorders68.Append(insideHorizontalBorder46);
            tableCellBorders68.Append(insideVerticalBorder46);
            Shading shading57 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties94.Append(tableCellBorders68);
            tableStyleConditionalFormattingTableCellProperties94.Append(shading57);

            tableStyleProperties131.Append(runPropertiesBaseStyle89);
            tableStyleProperties131.Append(tableStyleConditionalFormattingTableProperties94);
            tableStyleProperties131.Append(tableStyleConditionalFormattingTableCellProperties94);

            TableStyleProperties tableStyleProperties132 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties95 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties95 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading58 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties95.Append(shading58);

            tableStyleProperties132.Append(tableStyleConditionalFormattingTableProperties95);
            tableStyleProperties132.Append(tableStyleConditionalFormattingTableCellProperties95);

            TableStyleProperties tableStyleProperties133 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties96 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties96 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading59 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties96.Append(shading59);

            tableStyleProperties133.Append(tableStyleConditionalFormattingTableProperties96);
            tableStyleProperties133.Append(tableStyleConditionalFormattingTableCellProperties96);

            TableStyleProperties tableStyleProperties134 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties97 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties97 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders69 = new TableCellBorders();
            BottomBorder bottomBorder63 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders69.Append(bottomBorder63);

            tableStyleConditionalFormattingTableCellProperties97.Append(tableCellBorders69);

            tableStyleProperties134.Append(tableStyleConditionalFormattingTableProperties97);
            tableStyleProperties134.Append(tableStyleConditionalFormattingTableCellProperties97);

            TableStyleProperties tableStyleProperties135 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties98 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties98 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders70 = new TableCellBorders();
            BottomBorder bottomBorder64 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders70.Append(bottomBorder64);

            tableStyleConditionalFormattingTableCellProperties98.Append(tableCellBorders70);

            tableStyleProperties135.Append(tableStyleConditionalFormattingTableProperties98);
            tableStyleProperties135.Append(tableStyleConditionalFormattingTableCellProperties98);

            TableStyleProperties tableStyleProperties136 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties99 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties99 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders71 = new TableCellBorders();
            TopBorder topBorder63 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders71.Append(topBorder63);

            tableStyleConditionalFormattingTableCellProperties99.Append(tableCellBorders71);

            tableStyleProperties136.Append(tableStyleConditionalFormattingTableProperties99);
            tableStyleProperties136.Append(tableStyleConditionalFormattingTableCellProperties99);

            TableStyleProperties tableStyleProperties137 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties100 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties100 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders72 = new TableCellBorders();
            TopBorder topBorder64 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders72.Append(topBorder64);

            tableStyleConditionalFormattingTableCellProperties100.Append(tableCellBorders72);

            tableStyleProperties137.Append(tableStyleConditionalFormattingTableProperties100);
            tableStyleProperties137.Append(tableStyleConditionalFormattingTableCellProperties100);

            style55.Append(styleName55);
            style55.Append(basedOn50);
            style55.Append(uIPriority54);
            style55.Append(rsid51);
            style55.Append(styleParagraphProperties38);
            style55.Append(styleTableProperties25);
            style55.Append(tableStyleProperties128);
            style55.Append(tableStyleProperties129);
            style55.Append(tableStyleProperties130);
            style55.Append(tableStyleProperties131);
            style55.Append(tableStyleProperties132);
            style55.Append(tableStyleProperties133);
            style55.Append(tableStyleProperties134);
            style55.Append(tableStyleProperties135);
            style55.Append(tableStyleProperties136);
            style55.Append(tableStyleProperties137);

            Style style56 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent3" };
            StyleName styleName56 = new StyleName() { Val = "Grid Table 3 Accent 3" };
            BasedOn basedOn51 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority55 = new UIPriority() { Val = 48 };
            Rsid rsid52 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties40 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines46 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties40.Append(spacingBetweenLines46);

            StyleTableProperties styleTableProperties26 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize23 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize23 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders22 = new TableBorders();
            TopBorder topBorder65 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder31 = new LeftBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder65 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder31 = new RightBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder47 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder47 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders22.Append(topBorder65);
            tableBorders22.Append(leftBorder31);
            tableBorders22.Append(bottomBorder65);
            tableBorders22.Append(rightBorder31);
            tableBorders22.Append(insideHorizontalBorder47);
            tableBorders22.Append(insideVerticalBorder47);

            styleTableProperties26.Append(tableStyleRowBandSize23);
            styleTableProperties26.Append(tableStyleColumnBandSize23);
            styleTableProperties26.Append(tableBorders22);

            TableStyleProperties tableStyleProperties138 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle90 = new RunPropertiesBaseStyle();
            Bold bold86 = new Bold();
            BoldComplexScript boldComplexScript84 = new BoldComplexScript();

            runPropertiesBaseStyle90.Append(bold86);
            runPropertiesBaseStyle90.Append(boldComplexScript84);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties101 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties101 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders73 = new TableCellBorders();
            TopBorder topBorder66 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder32 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder32 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder48 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder48 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders73.Append(topBorder66);
            tableCellBorders73.Append(leftBorder32);
            tableCellBorders73.Append(rightBorder32);
            tableCellBorders73.Append(insideHorizontalBorder48);
            tableCellBorders73.Append(insideVerticalBorder48);
            Shading shading60 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties101.Append(tableCellBorders73);
            tableStyleConditionalFormattingTableCellProperties101.Append(shading60);

            tableStyleProperties138.Append(runPropertiesBaseStyle90);
            tableStyleProperties138.Append(tableStyleConditionalFormattingTableProperties101);
            tableStyleProperties138.Append(tableStyleConditionalFormattingTableCellProperties101);

            TableStyleProperties tableStyleProperties139 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle91 = new RunPropertiesBaseStyle();
            Bold bold87 = new Bold();
            BoldComplexScript boldComplexScript85 = new BoldComplexScript();

            runPropertiesBaseStyle91.Append(bold87);
            runPropertiesBaseStyle91.Append(boldComplexScript85);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties102 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties102 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders74 = new TableCellBorders();
            LeftBorder leftBorder33 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder66 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder33 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder49 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder49 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders74.Append(leftBorder33);
            tableCellBorders74.Append(bottomBorder66);
            tableCellBorders74.Append(rightBorder33);
            tableCellBorders74.Append(insideHorizontalBorder49);
            tableCellBorders74.Append(insideVerticalBorder49);
            Shading shading61 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties102.Append(tableCellBorders74);
            tableStyleConditionalFormattingTableCellProperties102.Append(shading61);

            tableStyleProperties139.Append(runPropertiesBaseStyle91);
            tableStyleProperties139.Append(tableStyleConditionalFormattingTableProperties102);
            tableStyleProperties139.Append(tableStyleConditionalFormattingTableCellProperties102);

            TableStyleProperties tableStyleProperties140 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties41 = new StyleParagraphProperties();
            Justification justification10 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties41.Append(justification10);

            RunPropertiesBaseStyle runPropertiesBaseStyle92 = new RunPropertiesBaseStyle();
            Italic italic23 = new Italic();
            ItalicComplexScript italicComplexScript21 = new ItalicComplexScript();

            runPropertiesBaseStyle92.Append(italic23);
            runPropertiesBaseStyle92.Append(italicComplexScript21);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties103 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties103 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders75 = new TableCellBorders();
            TopBorder topBorder67 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder34 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder67 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder50 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder50 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders75.Append(topBorder67);
            tableCellBorders75.Append(leftBorder34);
            tableCellBorders75.Append(bottomBorder67);
            tableCellBorders75.Append(insideHorizontalBorder50);
            tableCellBorders75.Append(insideVerticalBorder50);
            Shading shading62 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties103.Append(tableCellBorders75);
            tableStyleConditionalFormattingTableCellProperties103.Append(shading62);

            tableStyleProperties140.Append(styleParagraphProperties41);
            tableStyleProperties140.Append(runPropertiesBaseStyle92);
            tableStyleProperties140.Append(tableStyleConditionalFormattingTableProperties103);
            tableStyleProperties140.Append(tableStyleConditionalFormattingTableCellProperties103);

            TableStyleProperties tableStyleProperties141 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle93 = new RunPropertiesBaseStyle();
            Italic italic24 = new Italic();
            ItalicComplexScript italicComplexScript22 = new ItalicComplexScript();

            runPropertiesBaseStyle93.Append(italic24);
            runPropertiesBaseStyle93.Append(italicComplexScript22);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties104 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties104 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders76 = new TableCellBorders();
            TopBorder topBorder68 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder68 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder34 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder51 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder51 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders76.Append(topBorder68);
            tableCellBorders76.Append(bottomBorder68);
            tableCellBorders76.Append(rightBorder34);
            tableCellBorders76.Append(insideHorizontalBorder51);
            tableCellBorders76.Append(insideVerticalBorder51);
            Shading shading63 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties104.Append(tableCellBorders76);
            tableStyleConditionalFormattingTableCellProperties104.Append(shading63);

            tableStyleProperties141.Append(runPropertiesBaseStyle93);
            tableStyleProperties141.Append(tableStyleConditionalFormattingTableProperties104);
            tableStyleProperties141.Append(tableStyleConditionalFormattingTableCellProperties104);

            TableStyleProperties tableStyleProperties142 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties105 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties105 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading64 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties105.Append(shading64);

            tableStyleProperties142.Append(tableStyleConditionalFormattingTableProperties105);
            tableStyleProperties142.Append(tableStyleConditionalFormattingTableCellProperties105);

            TableStyleProperties tableStyleProperties143 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties106 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties106 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading65 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties106.Append(shading65);

            tableStyleProperties143.Append(tableStyleConditionalFormattingTableProperties106);
            tableStyleProperties143.Append(tableStyleConditionalFormattingTableCellProperties106);

            TableStyleProperties tableStyleProperties144 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties107 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties107 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders77 = new TableCellBorders();
            BottomBorder bottomBorder69 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders77.Append(bottomBorder69);

            tableStyleConditionalFormattingTableCellProperties107.Append(tableCellBorders77);

            tableStyleProperties144.Append(tableStyleConditionalFormattingTableProperties107);
            tableStyleProperties144.Append(tableStyleConditionalFormattingTableCellProperties107);

            TableStyleProperties tableStyleProperties145 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties108 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties108 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders78 = new TableCellBorders();
            BottomBorder bottomBorder70 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders78.Append(bottomBorder70);

            tableStyleConditionalFormattingTableCellProperties108.Append(tableCellBorders78);

            tableStyleProperties145.Append(tableStyleConditionalFormattingTableProperties108);
            tableStyleProperties145.Append(tableStyleConditionalFormattingTableCellProperties108);

            TableStyleProperties tableStyleProperties146 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties109 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties109 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders79 = new TableCellBorders();
            TopBorder topBorder69 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders79.Append(topBorder69);

            tableStyleConditionalFormattingTableCellProperties109.Append(tableCellBorders79);

            tableStyleProperties146.Append(tableStyleConditionalFormattingTableProperties109);
            tableStyleProperties146.Append(tableStyleConditionalFormattingTableCellProperties109);

            TableStyleProperties tableStyleProperties147 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties110 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties110 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders80 = new TableCellBorders();
            TopBorder topBorder70 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders80.Append(topBorder70);

            tableStyleConditionalFormattingTableCellProperties110.Append(tableCellBorders80);

            tableStyleProperties147.Append(tableStyleConditionalFormattingTableProperties110);
            tableStyleProperties147.Append(tableStyleConditionalFormattingTableCellProperties110);

            style56.Append(styleName56);
            style56.Append(basedOn51);
            style56.Append(uIPriority55);
            style56.Append(rsid52);
            style56.Append(styleParagraphProperties40);
            style56.Append(styleTableProperties26);
            style56.Append(tableStyleProperties138);
            style56.Append(tableStyleProperties139);
            style56.Append(tableStyleProperties140);
            style56.Append(tableStyleProperties141);
            style56.Append(tableStyleProperties142);
            style56.Append(tableStyleProperties143);
            style56.Append(tableStyleProperties144);
            style56.Append(tableStyleProperties145);
            style56.Append(tableStyleProperties146);
            style56.Append(tableStyleProperties147);

            Style style57 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent4" };
            StyleName styleName57 = new StyleName() { Val = "Grid Table 3 Accent 4" };
            BasedOn basedOn52 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority56 = new UIPriority() { Val = 48 };
            Rsid rsid53 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties42 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines47 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties42.Append(spacingBetweenLines47);

            StyleTableProperties styleTableProperties27 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize24 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize24 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders23 = new TableBorders();
            TopBorder topBorder71 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder35 = new LeftBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder71 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder35 = new RightBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder52 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder52 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders23.Append(topBorder71);
            tableBorders23.Append(leftBorder35);
            tableBorders23.Append(bottomBorder71);
            tableBorders23.Append(rightBorder35);
            tableBorders23.Append(insideHorizontalBorder52);
            tableBorders23.Append(insideVerticalBorder52);

            styleTableProperties27.Append(tableStyleRowBandSize24);
            styleTableProperties27.Append(tableStyleColumnBandSize24);
            styleTableProperties27.Append(tableBorders23);

            TableStyleProperties tableStyleProperties148 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle94 = new RunPropertiesBaseStyle();
            Bold bold88 = new Bold();
            BoldComplexScript boldComplexScript86 = new BoldComplexScript();

            runPropertiesBaseStyle94.Append(bold88);
            runPropertiesBaseStyle94.Append(boldComplexScript86);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties111 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties111 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders81 = new TableCellBorders();
            TopBorder topBorder72 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder36 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder36 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder53 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder53 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders81.Append(topBorder72);
            tableCellBorders81.Append(leftBorder36);
            tableCellBorders81.Append(rightBorder36);
            tableCellBorders81.Append(insideHorizontalBorder53);
            tableCellBorders81.Append(insideVerticalBorder53);
            Shading shading66 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties111.Append(tableCellBorders81);
            tableStyleConditionalFormattingTableCellProperties111.Append(shading66);

            tableStyleProperties148.Append(runPropertiesBaseStyle94);
            tableStyleProperties148.Append(tableStyleConditionalFormattingTableProperties111);
            tableStyleProperties148.Append(tableStyleConditionalFormattingTableCellProperties111);

            TableStyleProperties tableStyleProperties149 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle95 = new RunPropertiesBaseStyle();
            Bold bold89 = new Bold();
            BoldComplexScript boldComplexScript87 = new BoldComplexScript();

            runPropertiesBaseStyle95.Append(bold89);
            runPropertiesBaseStyle95.Append(boldComplexScript87);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties112 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties112 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders82 = new TableCellBorders();
            LeftBorder leftBorder37 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder72 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder37 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder54 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder54 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders82.Append(leftBorder37);
            tableCellBorders82.Append(bottomBorder72);
            tableCellBorders82.Append(rightBorder37);
            tableCellBorders82.Append(insideHorizontalBorder54);
            tableCellBorders82.Append(insideVerticalBorder54);
            Shading shading67 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties112.Append(tableCellBorders82);
            tableStyleConditionalFormattingTableCellProperties112.Append(shading67);

            tableStyleProperties149.Append(runPropertiesBaseStyle95);
            tableStyleProperties149.Append(tableStyleConditionalFormattingTableProperties112);
            tableStyleProperties149.Append(tableStyleConditionalFormattingTableCellProperties112);

            TableStyleProperties tableStyleProperties150 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties43 = new StyleParagraphProperties();
            Justification justification11 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties43.Append(justification11);

            RunPropertiesBaseStyle runPropertiesBaseStyle96 = new RunPropertiesBaseStyle();
            Italic italic25 = new Italic();
            ItalicComplexScript italicComplexScript23 = new ItalicComplexScript();

            runPropertiesBaseStyle96.Append(italic25);
            runPropertiesBaseStyle96.Append(italicComplexScript23);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties113 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties113 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders83 = new TableCellBorders();
            TopBorder topBorder73 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder38 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder73 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder55 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder55 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders83.Append(topBorder73);
            tableCellBorders83.Append(leftBorder38);
            tableCellBorders83.Append(bottomBorder73);
            tableCellBorders83.Append(insideHorizontalBorder55);
            tableCellBorders83.Append(insideVerticalBorder55);
            Shading shading68 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties113.Append(tableCellBorders83);
            tableStyleConditionalFormattingTableCellProperties113.Append(shading68);

            tableStyleProperties150.Append(styleParagraphProperties43);
            tableStyleProperties150.Append(runPropertiesBaseStyle96);
            tableStyleProperties150.Append(tableStyleConditionalFormattingTableProperties113);
            tableStyleProperties150.Append(tableStyleConditionalFormattingTableCellProperties113);

            TableStyleProperties tableStyleProperties151 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle97 = new RunPropertiesBaseStyle();
            Italic italic26 = new Italic();
            ItalicComplexScript italicComplexScript24 = new ItalicComplexScript();

            runPropertiesBaseStyle97.Append(italic26);
            runPropertiesBaseStyle97.Append(italicComplexScript24);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties114 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties114 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders84 = new TableCellBorders();
            TopBorder topBorder74 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder74 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder38 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder56 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder56 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders84.Append(topBorder74);
            tableCellBorders84.Append(bottomBorder74);
            tableCellBorders84.Append(rightBorder38);
            tableCellBorders84.Append(insideHorizontalBorder56);
            tableCellBorders84.Append(insideVerticalBorder56);
            Shading shading69 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties114.Append(tableCellBorders84);
            tableStyleConditionalFormattingTableCellProperties114.Append(shading69);

            tableStyleProperties151.Append(runPropertiesBaseStyle97);
            tableStyleProperties151.Append(tableStyleConditionalFormattingTableProperties114);
            tableStyleProperties151.Append(tableStyleConditionalFormattingTableCellProperties114);

            TableStyleProperties tableStyleProperties152 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties115 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties115 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading70 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties115.Append(shading70);

            tableStyleProperties152.Append(tableStyleConditionalFormattingTableProperties115);
            tableStyleProperties152.Append(tableStyleConditionalFormattingTableCellProperties115);

            TableStyleProperties tableStyleProperties153 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties116 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties116 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading71 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties116.Append(shading71);

            tableStyleProperties153.Append(tableStyleConditionalFormattingTableProperties116);
            tableStyleProperties153.Append(tableStyleConditionalFormattingTableCellProperties116);

            TableStyleProperties tableStyleProperties154 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties117 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties117 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders85 = new TableCellBorders();
            BottomBorder bottomBorder75 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders85.Append(bottomBorder75);

            tableStyleConditionalFormattingTableCellProperties117.Append(tableCellBorders85);

            tableStyleProperties154.Append(tableStyleConditionalFormattingTableProperties117);
            tableStyleProperties154.Append(tableStyleConditionalFormattingTableCellProperties117);

            TableStyleProperties tableStyleProperties155 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties118 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties118 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders86 = new TableCellBorders();
            BottomBorder bottomBorder76 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders86.Append(bottomBorder76);

            tableStyleConditionalFormattingTableCellProperties118.Append(tableCellBorders86);

            tableStyleProperties155.Append(tableStyleConditionalFormattingTableProperties118);
            tableStyleProperties155.Append(tableStyleConditionalFormattingTableCellProperties118);

            TableStyleProperties tableStyleProperties156 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties119 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties119 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders87 = new TableCellBorders();
            TopBorder topBorder75 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders87.Append(topBorder75);

            tableStyleConditionalFormattingTableCellProperties119.Append(tableCellBorders87);

            tableStyleProperties156.Append(tableStyleConditionalFormattingTableProperties119);
            tableStyleProperties156.Append(tableStyleConditionalFormattingTableCellProperties119);

            TableStyleProperties tableStyleProperties157 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties120 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties120 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders88 = new TableCellBorders();
            TopBorder topBorder76 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders88.Append(topBorder76);

            tableStyleConditionalFormattingTableCellProperties120.Append(tableCellBorders88);

            tableStyleProperties157.Append(tableStyleConditionalFormattingTableProperties120);
            tableStyleProperties157.Append(tableStyleConditionalFormattingTableCellProperties120);

            style57.Append(styleName57);
            style57.Append(basedOn52);
            style57.Append(uIPriority56);
            style57.Append(rsid53);
            style57.Append(styleParagraphProperties42);
            style57.Append(styleTableProperties27);
            style57.Append(tableStyleProperties148);
            style57.Append(tableStyleProperties149);
            style57.Append(tableStyleProperties150);
            style57.Append(tableStyleProperties151);
            style57.Append(tableStyleProperties152);
            style57.Append(tableStyleProperties153);
            style57.Append(tableStyleProperties154);
            style57.Append(tableStyleProperties155);
            style57.Append(tableStyleProperties156);
            style57.Append(tableStyleProperties157);

            Style style58 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent5" };
            StyleName styleName58 = new StyleName() { Val = "Grid Table 3 Accent 5" };
            BasedOn basedOn53 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority57 = new UIPriority() { Val = 48 };
            Rsid rsid54 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties44 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines48 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties44.Append(spacingBetweenLines48);

            StyleTableProperties styleTableProperties28 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize25 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize25 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders24 = new TableBorders();
            TopBorder topBorder77 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder39 = new LeftBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder77 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder39 = new RightBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder57 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder57 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders24.Append(topBorder77);
            tableBorders24.Append(leftBorder39);
            tableBorders24.Append(bottomBorder77);
            tableBorders24.Append(rightBorder39);
            tableBorders24.Append(insideHorizontalBorder57);
            tableBorders24.Append(insideVerticalBorder57);

            styleTableProperties28.Append(tableStyleRowBandSize25);
            styleTableProperties28.Append(tableStyleColumnBandSize25);
            styleTableProperties28.Append(tableBorders24);

            TableStyleProperties tableStyleProperties158 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle98 = new RunPropertiesBaseStyle();
            Bold bold90 = new Bold();
            BoldComplexScript boldComplexScript88 = new BoldComplexScript();

            runPropertiesBaseStyle98.Append(bold90);
            runPropertiesBaseStyle98.Append(boldComplexScript88);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties121 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties121 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders89 = new TableCellBorders();
            TopBorder topBorder78 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder40 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder40 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder58 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder58 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders89.Append(topBorder78);
            tableCellBorders89.Append(leftBorder40);
            tableCellBorders89.Append(rightBorder40);
            tableCellBorders89.Append(insideHorizontalBorder58);
            tableCellBorders89.Append(insideVerticalBorder58);
            Shading shading72 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties121.Append(tableCellBorders89);
            tableStyleConditionalFormattingTableCellProperties121.Append(shading72);

            tableStyleProperties158.Append(runPropertiesBaseStyle98);
            tableStyleProperties158.Append(tableStyleConditionalFormattingTableProperties121);
            tableStyleProperties158.Append(tableStyleConditionalFormattingTableCellProperties121);

            TableStyleProperties tableStyleProperties159 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle99 = new RunPropertiesBaseStyle();
            Bold bold91 = new Bold();
            BoldComplexScript boldComplexScript89 = new BoldComplexScript();

            runPropertiesBaseStyle99.Append(bold91);
            runPropertiesBaseStyle99.Append(boldComplexScript89);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties122 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties122 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders90 = new TableCellBorders();
            LeftBorder leftBorder41 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder78 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder41 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder59 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder59 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders90.Append(leftBorder41);
            tableCellBorders90.Append(bottomBorder78);
            tableCellBorders90.Append(rightBorder41);
            tableCellBorders90.Append(insideHorizontalBorder59);
            tableCellBorders90.Append(insideVerticalBorder59);
            Shading shading73 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties122.Append(tableCellBorders90);
            tableStyleConditionalFormattingTableCellProperties122.Append(shading73);

            tableStyleProperties159.Append(runPropertiesBaseStyle99);
            tableStyleProperties159.Append(tableStyleConditionalFormattingTableProperties122);
            tableStyleProperties159.Append(tableStyleConditionalFormattingTableCellProperties122);

            TableStyleProperties tableStyleProperties160 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties45 = new StyleParagraphProperties();
            Justification justification12 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties45.Append(justification12);

            RunPropertiesBaseStyle runPropertiesBaseStyle100 = new RunPropertiesBaseStyle();
            Italic italic27 = new Italic();
            ItalicComplexScript italicComplexScript25 = new ItalicComplexScript();

            runPropertiesBaseStyle100.Append(italic27);
            runPropertiesBaseStyle100.Append(italicComplexScript25);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties123 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties123 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders91 = new TableCellBorders();
            TopBorder topBorder79 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder42 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder79 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder60 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder60 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders91.Append(topBorder79);
            tableCellBorders91.Append(leftBorder42);
            tableCellBorders91.Append(bottomBorder79);
            tableCellBorders91.Append(insideHorizontalBorder60);
            tableCellBorders91.Append(insideVerticalBorder60);
            Shading shading74 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties123.Append(tableCellBorders91);
            tableStyleConditionalFormattingTableCellProperties123.Append(shading74);

            tableStyleProperties160.Append(styleParagraphProperties45);
            tableStyleProperties160.Append(runPropertiesBaseStyle100);
            tableStyleProperties160.Append(tableStyleConditionalFormattingTableProperties123);
            tableStyleProperties160.Append(tableStyleConditionalFormattingTableCellProperties123);

            TableStyleProperties tableStyleProperties161 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle101 = new RunPropertiesBaseStyle();
            Italic italic28 = new Italic();
            ItalicComplexScript italicComplexScript26 = new ItalicComplexScript();

            runPropertiesBaseStyle101.Append(italic28);
            runPropertiesBaseStyle101.Append(italicComplexScript26);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties124 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties124 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders92 = new TableCellBorders();
            TopBorder topBorder80 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder80 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder42 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder61 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder61 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders92.Append(topBorder80);
            tableCellBorders92.Append(bottomBorder80);
            tableCellBorders92.Append(rightBorder42);
            tableCellBorders92.Append(insideHorizontalBorder61);
            tableCellBorders92.Append(insideVerticalBorder61);
            Shading shading75 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties124.Append(tableCellBorders92);
            tableStyleConditionalFormattingTableCellProperties124.Append(shading75);

            tableStyleProperties161.Append(runPropertiesBaseStyle101);
            tableStyleProperties161.Append(tableStyleConditionalFormattingTableProperties124);
            tableStyleProperties161.Append(tableStyleConditionalFormattingTableCellProperties124);

            TableStyleProperties tableStyleProperties162 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties125 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties125 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading76 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties125.Append(shading76);

            tableStyleProperties162.Append(tableStyleConditionalFormattingTableProperties125);
            tableStyleProperties162.Append(tableStyleConditionalFormattingTableCellProperties125);

            TableStyleProperties tableStyleProperties163 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties126 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties126 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading77 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties126.Append(shading77);

            tableStyleProperties163.Append(tableStyleConditionalFormattingTableProperties126);
            tableStyleProperties163.Append(tableStyleConditionalFormattingTableCellProperties126);

            TableStyleProperties tableStyleProperties164 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties127 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties127 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders93 = new TableCellBorders();
            BottomBorder bottomBorder81 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders93.Append(bottomBorder81);

            tableStyleConditionalFormattingTableCellProperties127.Append(tableCellBorders93);

            tableStyleProperties164.Append(tableStyleConditionalFormattingTableProperties127);
            tableStyleProperties164.Append(tableStyleConditionalFormattingTableCellProperties127);

            TableStyleProperties tableStyleProperties165 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties128 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties128 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders94 = new TableCellBorders();
            BottomBorder bottomBorder82 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders94.Append(bottomBorder82);

            tableStyleConditionalFormattingTableCellProperties128.Append(tableCellBorders94);

            tableStyleProperties165.Append(tableStyleConditionalFormattingTableProperties128);
            tableStyleProperties165.Append(tableStyleConditionalFormattingTableCellProperties128);

            TableStyleProperties tableStyleProperties166 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties129 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties129 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders95 = new TableCellBorders();
            TopBorder topBorder81 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders95.Append(topBorder81);

            tableStyleConditionalFormattingTableCellProperties129.Append(tableCellBorders95);

            tableStyleProperties166.Append(tableStyleConditionalFormattingTableProperties129);
            tableStyleProperties166.Append(tableStyleConditionalFormattingTableCellProperties129);

            TableStyleProperties tableStyleProperties167 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties130 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties130 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders96 = new TableCellBorders();
            TopBorder topBorder82 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders96.Append(topBorder82);

            tableStyleConditionalFormattingTableCellProperties130.Append(tableCellBorders96);

            tableStyleProperties167.Append(tableStyleConditionalFormattingTableProperties130);
            tableStyleProperties167.Append(tableStyleConditionalFormattingTableCellProperties130);

            style58.Append(styleName58);
            style58.Append(basedOn53);
            style58.Append(uIPriority57);
            style58.Append(rsid54);
            style58.Append(styleParagraphProperties44);
            style58.Append(styleTableProperties28);
            style58.Append(tableStyleProperties158);
            style58.Append(tableStyleProperties159);
            style58.Append(tableStyleProperties160);
            style58.Append(tableStyleProperties161);
            style58.Append(tableStyleProperties162);
            style58.Append(tableStyleProperties163);
            style58.Append(tableStyleProperties164);
            style58.Append(tableStyleProperties165);
            style58.Append(tableStyleProperties166);
            style58.Append(tableStyleProperties167);

            Style style59 = new Style() { Type = StyleValues.Table, StyleId = "GridTable3-Accent6" };
            StyleName styleName59 = new StyleName() { Val = "Grid Table 3 Accent 6" };
            BasedOn basedOn54 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority58 = new UIPriority() { Val = 48 };
            Rsid rsid55 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties46 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines49 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties46.Append(spacingBetweenLines49);

            StyleTableProperties styleTableProperties29 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize26 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize26 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders25 = new TableBorders();
            TopBorder topBorder83 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder43 = new LeftBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder83 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder43 = new RightBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder62 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder62 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders25.Append(topBorder83);
            tableBorders25.Append(leftBorder43);
            tableBorders25.Append(bottomBorder83);
            tableBorders25.Append(rightBorder43);
            tableBorders25.Append(insideHorizontalBorder62);
            tableBorders25.Append(insideVerticalBorder62);

            styleTableProperties29.Append(tableStyleRowBandSize26);
            styleTableProperties29.Append(tableStyleColumnBandSize26);
            styleTableProperties29.Append(tableBorders25);

            TableStyleProperties tableStyleProperties168 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle102 = new RunPropertiesBaseStyle();
            Bold bold92 = new Bold();
            BoldComplexScript boldComplexScript90 = new BoldComplexScript();

            runPropertiesBaseStyle102.Append(bold92);
            runPropertiesBaseStyle102.Append(boldComplexScript90);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties131 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties131 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders97 = new TableCellBorders();
            TopBorder topBorder84 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder44 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder44 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder63 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder63 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders97.Append(topBorder84);
            tableCellBorders97.Append(leftBorder44);
            tableCellBorders97.Append(rightBorder44);
            tableCellBorders97.Append(insideHorizontalBorder63);
            tableCellBorders97.Append(insideVerticalBorder63);
            Shading shading78 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties131.Append(tableCellBorders97);
            tableStyleConditionalFormattingTableCellProperties131.Append(shading78);

            tableStyleProperties168.Append(runPropertiesBaseStyle102);
            tableStyleProperties168.Append(tableStyleConditionalFormattingTableProperties131);
            tableStyleProperties168.Append(tableStyleConditionalFormattingTableCellProperties131);

            TableStyleProperties tableStyleProperties169 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle103 = new RunPropertiesBaseStyle();
            Bold bold93 = new Bold();
            BoldComplexScript boldComplexScript91 = new BoldComplexScript();

            runPropertiesBaseStyle103.Append(bold93);
            runPropertiesBaseStyle103.Append(boldComplexScript91);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties132 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties132 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders98 = new TableCellBorders();
            LeftBorder leftBorder45 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder84 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder45 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder64 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder64 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders98.Append(leftBorder45);
            tableCellBorders98.Append(bottomBorder84);
            tableCellBorders98.Append(rightBorder45);
            tableCellBorders98.Append(insideHorizontalBorder64);
            tableCellBorders98.Append(insideVerticalBorder64);
            Shading shading79 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties132.Append(tableCellBorders98);
            tableStyleConditionalFormattingTableCellProperties132.Append(shading79);

            tableStyleProperties169.Append(runPropertiesBaseStyle103);
            tableStyleProperties169.Append(tableStyleConditionalFormattingTableProperties132);
            tableStyleProperties169.Append(tableStyleConditionalFormattingTableCellProperties132);

            TableStyleProperties tableStyleProperties170 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties47 = new StyleParagraphProperties();
            Justification justification13 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties47.Append(justification13);

            RunPropertiesBaseStyle runPropertiesBaseStyle104 = new RunPropertiesBaseStyle();
            Italic italic29 = new Italic();
            ItalicComplexScript italicComplexScript27 = new ItalicComplexScript();

            runPropertiesBaseStyle104.Append(italic29);
            runPropertiesBaseStyle104.Append(italicComplexScript27);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties133 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties133 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders99 = new TableCellBorders();
            TopBorder topBorder85 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder46 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder85 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder65 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder65 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders99.Append(topBorder85);
            tableCellBorders99.Append(leftBorder46);
            tableCellBorders99.Append(bottomBorder85);
            tableCellBorders99.Append(insideHorizontalBorder65);
            tableCellBorders99.Append(insideVerticalBorder65);
            Shading shading80 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties133.Append(tableCellBorders99);
            tableStyleConditionalFormattingTableCellProperties133.Append(shading80);

            tableStyleProperties170.Append(styleParagraphProperties47);
            tableStyleProperties170.Append(runPropertiesBaseStyle104);
            tableStyleProperties170.Append(tableStyleConditionalFormattingTableProperties133);
            tableStyleProperties170.Append(tableStyleConditionalFormattingTableCellProperties133);

            TableStyleProperties tableStyleProperties171 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle105 = new RunPropertiesBaseStyle();
            Italic italic30 = new Italic();
            ItalicComplexScript italicComplexScript28 = new ItalicComplexScript();

            runPropertiesBaseStyle105.Append(italic30);
            runPropertiesBaseStyle105.Append(italicComplexScript28);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties134 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties134 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders100 = new TableCellBorders();
            TopBorder topBorder86 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder86 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder46 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder66 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder66 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders100.Append(topBorder86);
            tableCellBorders100.Append(bottomBorder86);
            tableCellBorders100.Append(rightBorder46);
            tableCellBorders100.Append(insideHorizontalBorder66);
            tableCellBorders100.Append(insideVerticalBorder66);
            Shading shading81 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties134.Append(tableCellBorders100);
            tableStyleConditionalFormattingTableCellProperties134.Append(shading81);

            tableStyleProperties171.Append(runPropertiesBaseStyle105);
            tableStyleProperties171.Append(tableStyleConditionalFormattingTableProperties134);
            tableStyleProperties171.Append(tableStyleConditionalFormattingTableCellProperties134);

            TableStyleProperties tableStyleProperties172 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties135 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties135 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading82 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties135.Append(shading82);

            tableStyleProperties172.Append(tableStyleConditionalFormattingTableProperties135);
            tableStyleProperties172.Append(tableStyleConditionalFormattingTableCellProperties135);

            TableStyleProperties tableStyleProperties173 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties136 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties136 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading83 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties136.Append(shading83);

            tableStyleProperties173.Append(tableStyleConditionalFormattingTableProperties136);
            tableStyleProperties173.Append(tableStyleConditionalFormattingTableCellProperties136);

            TableStyleProperties tableStyleProperties174 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties137 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties137 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders101 = new TableCellBorders();
            BottomBorder bottomBorder87 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders101.Append(bottomBorder87);

            tableStyleConditionalFormattingTableCellProperties137.Append(tableCellBorders101);

            tableStyleProperties174.Append(tableStyleConditionalFormattingTableProperties137);
            tableStyleProperties174.Append(tableStyleConditionalFormattingTableCellProperties137);

            TableStyleProperties tableStyleProperties175 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties138 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties138 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders102 = new TableCellBorders();
            BottomBorder bottomBorder88 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders102.Append(bottomBorder88);

            tableStyleConditionalFormattingTableCellProperties138.Append(tableCellBorders102);

            tableStyleProperties175.Append(tableStyleConditionalFormattingTableProperties138);
            tableStyleProperties175.Append(tableStyleConditionalFormattingTableCellProperties138);

            TableStyleProperties tableStyleProperties176 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties139 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties139 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders103 = new TableCellBorders();
            TopBorder topBorder87 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders103.Append(topBorder87);

            tableStyleConditionalFormattingTableCellProperties139.Append(tableCellBorders103);

            tableStyleProperties176.Append(tableStyleConditionalFormattingTableProperties139);
            tableStyleProperties176.Append(tableStyleConditionalFormattingTableCellProperties139);

            TableStyleProperties tableStyleProperties177 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties140 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties140 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders104 = new TableCellBorders();
            TopBorder topBorder88 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders104.Append(topBorder88);

            tableStyleConditionalFormattingTableCellProperties140.Append(tableCellBorders104);

            tableStyleProperties177.Append(tableStyleConditionalFormattingTableProperties140);
            tableStyleProperties177.Append(tableStyleConditionalFormattingTableCellProperties140);

            style59.Append(styleName59);
            style59.Append(basedOn54);
            style59.Append(uIPriority58);
            style59.Append(rsid55);
            style59.Append(styleParagraphProperties46);
            style59.Append(styleTableProperties29);
            style59.Append(tableStyleProperties168);
            style59.Append(tableStyleProperties169);
            style59.Append(tableStyleProperties170);
            style59.Append(tableStyleProperties171);
            style59.Append(tableStyleProperties172);
            style59.Append(tableStyleProperties173);
            style59.Append(tableStyleProperties174);
            style59.Append(tableStyleProperties175);
            style59.Append(tableStyleProperties176);
            style59.Append(tableStyleProperties177);

            Style style60 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4" };
            StyleName styleName60 = new StyleName() { Val = "Grid Table 4" };
            BasedOn basedOn55 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority59 = new UIPriority() { Val = 49 };
            Rsid rsid56 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties48 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines50 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties48.Append(spacingBetweenLines50);

            StyleTableProperties styleTableProperties30 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize27 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize27 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders26 = new TableBorders();
            TopBorder topBorder89 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder47 = new LeftBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder89 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder47 = new RightBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder67 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder67 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders26.Append(topBorder89);
            tableBorders26.Append(leftBorder47);
            tableBorders26.Append(bottomBorder89);
            tableBorders26.Append(rightBorder47);
            tableBorders26.Append(insideHorizontalBorder67);
            tableBorders26.Append(insideVerticalBorder67);

            styleTableProperties30.Append(tableStyleRowBandSize27);
            styleTableProperties30.Append(tableStyleColumnBandSize27);
            styleTableProperties30.Append(tableBorders26);

            TableStyleProperties tableStyleProperties178 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle106 = new RunPropertiesBaseStyle();
            Bold bold94 = new Bold();
            BoldComplexScript boldComplexScript92 = new BoldComplexScript();
            Color color30 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle106.Append(bold94);
            runPropertiesBaseStyle106.Append(boldComplexScript92);
            runPropertiesBaseStyle106.Append(color30);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties141 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties141 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders105 = new TableCellBorders();
            TopBorder topBorder90 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder48 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder90 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder48 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder68 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder68 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders105.Append(topBorder90);
            tableCellBorders105.Append(leftBorder48);
            tableCellBorders105.Append(bottomBorder90);
            tableCellBorders105.Append(rightBorder48);
            tableCellBorders105.Append(insideHorizontalBorder68);
            tableCellBorders105.Append(insideVerticalBorder68);
            Shading shading84 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties141.Append(tableCellBorders105);
            tableStyleConditionalFormattingTableCellProperties141.Append(shading84);

            tableStyleProperties178.Append(runPropertiesBaseStyle106);
            tableStyleProperties178.Append(tableStyleConditionalFormattingTableProperties141);
            tableStyleProperties178.Append(tableStyleConditionalFormattingTableCellProperties141);

            TableStyleProperties tableStyleProperties179 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle107 = new RunPropertiesBaseStyle();
            Bold bold95 = new Bold();
            BoldComplexScript boldComplexScript93 = new BoldComplexScript();

            runPropertiesBaseStyle107.Append(bold95);
            runPropertiesBaseStyle107.Append(boldComplexScript93);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties142 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties142 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders106 = new TableCellBorders();
            TopBorder topBorder91 = new TopBorder() { Val = BorderValues.Double, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders106.Append(topBorder91);

            tableStyleConditionalFormattingTableCellProperties142.Append(tableCellBorders106);

            tableStyleProperties179.Append(runPropertiesBaseStyle107);
            tableStyleProperties179.Append(tableStyleConditionalFormattingTableProperties142);
            tableStyleProperties179.Append(tableStyleConditionalFormattingTableCellProperties142);

            TableStyleProperties tableStyleProperties180 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle108 = new RunPropertiesBaseStyle();
            Bold bold96 = new Bold();
            BoldComplexScript boldComplexScript94 = new BoldComplexScript();

            runPropertiesBaseStyle108.Append(bold96);
            runPropertiesBaseStyle108.Append(boldComplexScript94);

            tableStyleProperties180.Append(runPropertiesBaseStyle108);

            TableStyleProperties tableStyleProperties181 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle109 = new RunPropertiesBaseStyle();
            Bold bold97 = new Bold();
            BoldComplexScript boldComplexScript95 = new BoldComplexScript();

            runPropertiesBaseStyle109.Append(bold97);
            runPropertiesBaseStyle109.Append(boldComplexScript95);

            tableStyleProperties181.Append(runPropertiesBaseStyle109);

            TableStyleProperties tableStyleProperties182 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties143 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties143 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading85 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties143.Append(shading85);

            tableStyleProperties182.Append(tableStyleConditionalFormattingTableProperties143);
            tableStyleProperties182.Append(tableStyleConditionalFormattingTableCellProperties143);

            TableStyleProperties tableStyleProperties183 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties144 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties144 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading86 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties144.Append(shading86);

            tableStyleProperties183.Append(tableStyleConditionalFormattingTableProperties144);
            tableStyleProperties183.Append(tableStyleConditionalFormattingTableCellProperties144);

            style60.Append(styleName60);
            style60.Append(basedOn55);
            style60.Append(uIPriority59);
            style60.Append(rsid56);
            style60.Append(styleParagraphProperties48);
            style60.Append(styleTableProperties30);
            style60.Append(tableStyleProperties178);
            style60.Append(tableStyleProperties179);
            style60.Append(tableStyleProperties180);
            style60.Append(tableStyleProperties181);
            style60.Append(tableStyleProperties182);
            style60.Append(tableStyleProperties183);

            Style style61 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent1" };
            StyleName styleName61 = new StyleName() { Val = "Grid Table 4 Accent 1" };
            BasedOn basedOn56 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority60 = new UIPriority() { Val = 49 };
            Rsid rsid57 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties49 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines51 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties49.Append(spacingBetweenLines51);

            StyleTableProperties styleTableProperties31 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize28 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize28 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders27 = new TableBorders();
            TopBorder topBorder92 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder49 = new LeftBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder91 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder49 = new RightBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder69 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder69 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders27.Append(topBorder92);
            tableBorders27.Append(leftBorder49);
            tableBorders27.Append(bottomBorder91);
            tableBorders27.Append(rightBorder49);
            tableBorders27.Append(insideHorizontalBorder69);
            tableBorders27.Append(insideVerticalBorder69);

            styleTableProperties31.Append(tableStyleRowBandSize28);
            styleTableProperties31.Append(tableStyleColumnBandSize28);
            styleTableProperties31.Append(tableBorders27);

            TableStyleProperties tableStyleProperties184 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle110 = new RunPropertiesBaseStyle();
            Bold bold98 = new Bold();
            BoldComplexScript boldComplexScript96 = new BoldComplexScript();
            Color color31 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle110.Append(bold98);
            runPropertiesBaseStyle110.Append(boldComplexScript96);
            runPropertiesBaseStyle110.Append(color31);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties145 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties145 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders107 = new TableCellBorders();
            TopBorder topBorder93 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder50 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder92 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder50 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder70 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder70 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders107.Append(topBorder93);
            tableCellBorders107.Append(leftBorder50);
            tableCellBorders107.Append(bottomBorder92);
            tableCellBorders107.Append(rightBorder50);
            tableCellBorders107.Append(insideHorizontalBorder70);
            tableCellBorders107.Append(insideVerticalBorder70);
            Shading shading87 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties145.Append(tableCellBorders107);
            tableStyleConditionalFormattingTableCellProperties145.Append(shading87);

            tableStyleProperties184.Append(runPropertiesBaseStyle110);
            tableStyleProperties184.Append(tableStyleConditionalFormattingTableProperties145);
            tableStyleProperties184.Append(tableStyleConditionalFormattingTableCellProperties145);

            TableStyleProperties tableStyleProperties185 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle111 = new RunPropertiesBaseStyle();
            Bold bold99 = new Bold();
            BoldComplexScript boldComplexScript97 = new BoldComplexScript();

            runPropertiesBaseStyle111.Append(bold99);
            runPropertiesBaseStyle111.Append(boldComplexScript97);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties146 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties146 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders108 = new TableCellBorders();
            TopBorder topBorder94 = new TopBorder() { Val = BorderValues.Double, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders108.Append(topBorder94);

            tableStyleConditionalFormattingTableCellProperties146.Append(tableCellBorders108);

            tableStyleProperties185.Append(runPropertiesBaseStyle111);
            tableStyleProperties185.Append(tableStyleConditionalFormattingTableProperties146);
            tableStyleProperties185.Append(tableStyleConditionalFormattingTableCellProperties146);

            TableStyleProperties tableStyleProperties186 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle112 = new RunPropertiesBaseStyle();
            Bold bold100 = new Bold();
            BoldComplexScript boldComplexScript98 = new BoldComplexScript();

            runPropertiesBaseStyle112.Append(bold100);
            runPropertiesBaseStyle112.Append(boldComplexScript98);

            tableStyleProperties186.Append(runPropertiesBaseStyle112);

            TableStyleProperties tableStyleProperties187 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle113 = new RunPropertiesBaseStyle();
            Bold bold101 = new Bold();
            BoldComplexScript boldComplexScript99 = new BoldComplexScript();

            runPropertiesBaseStyle113.Append(bold101);
            runPropertiesBaseStyle113.Append(boldComplexScript99);

            tableStyleProperties187.Append(runPropertiesBaseStyle113);

            TableStyleProperties tableStyleProperties188 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties147 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties147 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading88 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties147.Append(shading88);

            tableStyleProperties188.Append(tableStyleConditionalFormattingTableProperties147);
            tableStyleProperties188.Append(tableStyleConditionalFormattingTableCellProperties147);

            TableStyleProperties tableStyleProperties189 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties148 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties148 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading89 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties148.Append(shading89);

            tableStyleProperties189.Append(tableStyleConditionalFormattingTableProperties148);
            tableStyleProperties189.Append(tableStyleConditionalFormattingTableCellProperties148);

            style61.Append(styleName61);
            style61.Append(basedOn56);
            style61.Append(uIPriority60);
            style61.Append(rsid57);
            style61.Append(styleParagraphProperties49);
            style61.Append(styleTableProperties31);
            style61.Append(tableStyleProperties184);
            style61.Append(tableStyleProperties185);
            style61.Append(tableStyleProperties186);
            style61.Append(tableStyleProperties187);
            style61.Append(tableStyleProperties188);
            style61.Append(tableStyleProperties189);

            Style style62 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent2" };
            StyleName styleName62 = new StyleName() { Val = "Grid Table 4 Accent 2" };
            BasedOn basedOn57 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority61 = new UIPriority() { Val = 49 };
            Rsid rsid58 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties50 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines52 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties50.Append(spacingBetweenLines52);

            StyleTableProperties styleTableProperties32 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize29 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize29 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders28 = new TableBorders();
            TopBorder topBorder95 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder51 = new LeftBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder93 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder51 = new RightBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder71 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder71 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders28.Append(topBorder95);
            tableBorders28.Append(leftBorder51);
            tableBorders28.Append(bottomBorder93);
            tableBorders28.Append(rightBorder51);
            tableBorders28.Append(insideHorizontalBorder71);
            tableBorders28.Append(insideVerticalBorder71);

            styleTableProperties32.Append(tableStyleRowBandSize29);
            styleTableProperties32.Append(tableStyleColumnBandSize29);
            styleTableProperties32.Append(tableBorders28);

            TableStyleProperties tableStyleProperties190 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle114 = new RunPropertiesBaseStyle();
            Bold bold102 = new Bold();
            BoldComplexScript boldComplexScript100 = new BoldComplexScript();
            Color color32 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle114.Append(bold102);
            runPropertiesBaseStyle114.Append(boldComplexScript100);
            runPropertiesBaseStyle114.Append(color32);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties149 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties149 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders109 = new TableCellBorders();
            TopBorder topBorder96 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder52 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder94 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder52 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder72 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder72 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders109.Append(topBorder96);
            tableCellBorders109.Append(leftBorder52);
            tableCellBorders109.Append(bottomBorder94);
            tableCellBorders109.Append(rightBorder52);
            tableCellBorders109.Append(insideHorizontalBorder72);
            tableCellBorders109.Append(insideVerticalBorder72);
            Shading shading90 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties149.Append(tableCellBorders109);
            tableStyleConditionalFormattingTableCellProperties149.Append(shading90);

            tableStyleProperties190.Append(runPropertiesBaseStyle114);
            tableStyleProperties190.Append(tableStyleConditionalFormattingTableProperties149);
            tableStyleProperties190.Append(tableStyleConditionalFormattingTableCellProperties149);

            TableStyleProperties tableStyleProperties191 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle115 = new RunPropertiesBaseStyle();
            Bold bold103 = new Bold();
            BoldComplexScript boldComplexScript101 = new BoldComplexScript();

            runPropertiesBaseStyle115.Append(bold103);
            runPropertiesBaseStyle115.Append(boldComplexScript101);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties150 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties150 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders110 = new TableCellBorders();
            TopBorder topBorder97 = new TopBorder() { Val = BorderValues.Double, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders110.Append(topBorder97);

            tableStyleConditionalFormattingTableCellProperties150.Append(tableCellBorders110);

            tableStyleProperties191.Append(runPropertiesBaseStyle115);
            tableStyleProperties191.Append(tableStyleConditionalFormattingTableProperties150);
            tableStyleProperties191.Append(tableStyleConditionalFormattingTableCellProperties150);

            TableStyleProperties tableStyleProperties192 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle116 = new RunPropertiesBaseStyle();
            Bold bold104 = new Bold();
            BoldComplexScript boldComplexScript102 = new BoldComplexScript();

            runPropertiesBaseStyle116.Append(bold104);
            runPropertiesBaseStyle116.Append(boldComplexScript102);

            tableStyleProperties192.Append(runPropertiesBaseStyle116);

            TableStyleProperties tableStyleProperties193 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle117 = new RunPropertiesBaseStyle();
            Bold bold105 = new Bold();
            BoldComplexScript boldComplexScript103 = new BoldComplexScript();

            runPropertiesBaseStyle117.Append(bold105);
            runPropertiesBaseStyle117.Append(boldComplexScript103);

            tableStyleProperties193.Append(runPropertiesBaseStyle117);

            TableStyleProperties tableStyleProperties194 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties151 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties151 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading91 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties151.Append(shading91);

            tableStyleProperties194.Append(tableStyleConditionalFormattingTableProperties151);
            tableStyleProperties194.Append(tableStyleConditionalFormattingTableCellProperties151);

            TableStyleProperties tableStyleProperties195 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties152 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties152 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading92 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties152.Append(shading92);

            tableStyleProperties195.Append(tableStyleConditionalFormattingTableProperties152);
            tableStyleProperties195.Append(tableStyleConditionalFormattingTableCellProperties152);

            style62.Append(styleName62);
            style62.Append(basedOn57);
            style62.Append(uIPriority61);
            style62.Append(rsid58);
            style62.Append(styleParagraphProperties50);
            style62.Append(styleTableProperties32);
            style62.Append(tableStyleProperties190);
            style62.Append(tableStyleProperties191);
            style62.Append(tableStyleProperties192);
            style62.Append(tableStyleProperties193);
            style62.Append(tableStyleProperties194);
            style62.Append(tableStyleProperties195);

            Style style63 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent3" };
            StyleName styleName63 = new StyleName() { Val = "Grid Table 4 Accent 3" };
            BasedOn basedOn58 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority62 = new UIPriority() { Val = 49 };
            Rsid rsid59 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties51 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines53 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties51.Append(spacingBetweenLines53);

            StyleTableProperties styleTableProperties33 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize30 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize30 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders29 = new TableBorders();
            TopBorder topBorder98 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder53 = new LeftBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder95 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder53 = new RightBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder73 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder73 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders29.Append(topBorder98);
            tableBorders29.Append(leftBorder53);
            tableBorders29.Append(bottomBorder95);
            tableBorders29.Append(rightBorder53);
            tableBorders29.Append(insideHorizontalBorder73);
            tableBorders29.Append(insideVerticalBorder73);

            styleTableProperties33.Append(tableStyleRowBandSize30);
            styleTableProperties33.Append(tableStyleColumnBandSize30);
            styleTableProperties33.Append(tableBorders29);

            TableStyleProperties tableStyleProperties196 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle118 = new RunPropertiesBaseStyle();
            Bold bold106 = new Bold();
            BoldComplexScript boldComplexScript104 = new BoldComplexScript();
            Color color33 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle118.Append(bold106);
            runPropertiesBaseStyle118.Append(boldComplexScript104);
            runPropertiesBaseStyle118.Append(color33);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties153 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties153 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders111 = new TableCellBorders();
            TopBorder topBorder99 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder54 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder96 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder54 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder74 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder74 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders111.Append(topBorder99);
            tableCellBorders111.Append(leftBorder54);
            tableCellBorders111.Append(bottomBorder96);
            tableCellBorders111.Append(rightBorder54);
            tableCellBorders111.Append(insideHorizontalBorder74);
            tableCellBorders111.Append(insideVerticalBorder74);
            Shading shading93 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties153.Append(tableCellBorders111);
            tableStyleConditionalFormattingTableCellProperties153.Append(shading93);

            tableStyleProperties196.Append(runPropertiesBaseStyle118);
            tableStyleProperties196.Append(tableStyleConditionalFormattingTableProperties153);
            tableStyleProperties196.Append(tableStyleConditionalFormattingTableCellProperties153);

            TableStyleProperties tableStyleProperties197 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle119 = new RunPropertiesBaseStyle();
            Bold bold107 = new Bold();
            BoldComplexScript boldComplexScript105 = new BoldComplexScript();

            runPropertiesBaseStyle119.Append(bold107);
            runPropertiesBaseStyle119.Append(boldComplexScript105);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties154 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties154 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders112 = new TableCellBorders();
            TopBorder topBorder100 = new TopBorder() { Val = BorderValues.Double, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders112.Append(topBorder100);

            tableStyleConditionalFormattingTableCellProperties154.Append(tableCellBorders112);

            tableStyleProperties197.Append(runPropertiesBaseStyle119);
            tableStyleProperties197.Append(tableStyleConditionalFormattingTableProperties154);
            tableStyleProperties197.Append(tableStyleConditionalFormattingTableCellProperties154);

            TableStyleProperties tableStyleProperties198 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle120 = new RunPropertiesBaseStyle();
            Bold bold108 = new Bold();
            BoldComplexScript boldComplexScript106 = new BoldComplexScript();

            runPropertiesBaseStyle120.Append(bold108);
            runPropertiesBaseStyle120.Append(boldComplexScript106);

            tableStyleProperties198.Append(runPropertiesBaseStyle120);

            TableStyleProperties tableStyleProperties199 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle121 = new RunPropertiesBaseStyle();
            Bold bold109 = new Bold();
            BoldComplexScript boldComplexScript107 = new BoldComplexScript();

            runPropertiesBaseStyle121.Append(bold109);
            runPropertiesBaseStyle121.Append(boldComplexScript107);

            tableStyleProperties199.Append(runPropertiesBaseStyle121);

            TableStyleProperties tableStyleProperties200 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties155 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties155 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading94 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties155.Append(shading94);

            tableStyleProperties200.Append(tableStyleConditionalFormattingTableProperties155);
            tableStyleProperties200.Append(tableStyleConditionalFormattingTableCellProperties155);

            TableStyleProperties tableStyleProperties201 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties156 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties156 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading95 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties156.Append(shading95);

            tableStyleProperties201.Append(tableStyleConditionalFormattingTableProperties156);
            tableStyleProperties201.Append(tableStyleConditionalFormattingTableCellProperties156);

            style63.Append(styleName63);
            style63.Append(basedOn58);
            style63.Append(uIPriority62);
            style63.Append(rsid59);
            style63.Append(styleParagraphProperties51);
            style63.Append(styleTableProperties33);
            style63.Append(tableStyleProperties196);
            style63.Append(tableStyleProperties197);
            style63.Append(tableStyleProperties198);
            style63.Append(tableStyleProperties199);
            style63.Append(tableStyleProperties200);
            style63.Append(tableStyleProperties201);

            Style style64 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent4" };
            StyleName styleName64 = new StyleName() { Val = "Grid Table 4 Accent 4" };
            BasedOn basedOn59 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority63 = new UIPriority() { Val = 49 };
            Rsid rsid60 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties52 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines54 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties52.Append(spacingBetweenLines54);

            StyleTableProperties styleTableProperties34 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize31 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize31 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders30 = new TableBorders();
            TopBorder topBorder101 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder55 = new LeftBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder97 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder55 = new RightBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder75 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder75 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders30.Append(topBorder101);
            tableBorders30.Append(leftBorder55);
            tableBorders30.Append(bottomBorder97);
            tableBorders30.Append(rightBorder55);
            tableBorders30.Append(insideHorizontalBorder75);
            tableBorders30.Append(insideVerticalBorder75);

            styleTableProperties34.Append(tableStyleRowBandSize31);
            styleTableProperties34.Append(tableStyleColumnBandSize31);
            styleTableProperties34.Append(tableBorders30);

            TableStyleProperties tableStyleProperties202 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle122 = new RunPropertiesBaseStyle();
            Bold bold110 = new Bold();
            BoldComplexScript boldComplexScript108 = new BoldComplexScript();
            Color color34 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle122.Append(bold110);
            runPropertiesBaseStyle122.Append(boldComplexScript108);
            runPropertiesBaseStyle122.Append(color34);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties157 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties157 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders113 = new TableCellBorders();
            TopBorder topBorder102 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder56 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder98 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder56 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder76 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder76 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders113.Append(topBorder102);
            tableCellBorders113.Append(leftBorder56);
            tableCellBorders113.Append(bottomBorder98);
            tableCellBorders113.Append(rightBorder56);
            tableCellBorders113.Append(insideHorizontalBorder76);
            tableCellBorders113.Append(insideVerticalBorder76);
            Shading shading96 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties157.Append(tableCellBorders113);
            tableStyleConditionalFormattingTableCellProperties157.Append(shading96);

            tableStyleProperties202.Append(runPropertiesBaseStyle122);
            tableStyleProperties202.Append(tableStyleConditionalFormattingTableProperties157);
            tableStyleProperties202.Append(tableStyleConditionalFormattingTableCellProperties157);

            TableStyleProperties tableStyleProperties203 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle123 = new RunPropertiesBaseStyle();
            Bold bold111 = new Bold();
            BoldComplexScript boldComplexScript109 = new BoldComplexScript();

            runPropertiesBaseStyle123.Append(bold111);
            runPropertiesBaseStyle123.Append(boldComplexScript109);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties158 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties158 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders114 = new TableCellBorders();
            TopBorder topBorder103 = new TopBorder() { Val = BorderValues.Double, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders114.Append(topBorder103);

            tableStyleConditionalFormattingTableCellProperties158.Append(tableCellBorders114);

            tableStyleProperties203.Append(runPropertiesBaseStyle123);
            tableStyleProperties203.Append(tableStyleConditionalFormattingTableProperties158);
            tableStyleProperties203.Append(tableStyleConditionalFormattingTableCellProperties158);

            TableStyleProperties tableStyleProperties204 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle124 = new RunPropertiesBaseStyle();
            Bold bold112 = new Bold();
            BoldComplexScript boldComplexScript110 = new BoldComplexScript();

            runPropertiesBaseStyle124.Append(bold112);
            runPropertiesBaseStyle124.Append(boldComplexScript110);

            tableStyleProperties204.Append(runPropertiesBaseStyle124);

            TableStyleProperties tableStyleProperties205 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle125 = new RunPropertiesBaseStyle();
            Bold bold113 = new Bold();
            BoldComplexScript boldComplexScript111 = new BoldComplexScript();

            runPropertiesBaseStyle125.Append(bold113);
            runPropertiesBaseStyle125.Append(boldComplexScript111);

            tableStyleProperties205.Append(runPropertiesBaseStyle125);

            TableStyleProperties tableStyleProperties206 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties159 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties159 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading97 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties159.Append(shading97);

            tableStyleProperties206.Append(tableStyleConditionalFormattingTableProperties159);
            tableStyleProperties206.Append(tableStyleConditionalFormattingTableCellProperties159);

            TableStyleProperties tableStyleProperties207 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties160 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties160 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading98 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties160.Append(shading98);

            tableStyleProperties207.Append(tableStyleConditionalFormattingTableProperties160);
            tableStyleProperties207.Append(tableStyleConditionalFormattingTableCellProperties160);

            style64.Append(styleName64);
            style64.Append(basedOn59);
            style64.Append(uIPriority63);
            style64.Append(rsid60);
            style64.Append(styleParagraphProperties52);
            style64.Append(styleTableProperties34);
            style64.Append(tableStyleProperties202);
            style64.Append(tableStyleProperties203);
            style64.Append(tableStyleProperties204);
            style64.Append(tableStyleProperties205);
            style64.Append(tableStyleProperties206);
            style64.Append(tableStyleProperties207);

            Style style65 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent5" };
            StyleName styleName65 = new StyleName() { Val = "Grid Table 4 Accent 5" };
            BasedOn basedOn60 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority64 = new UIPriority() { Val = 49 };
            Rsid rsid61 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties53 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines55 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties53.Append(spacingBetweenLines55);

            StyleTableProperties styleTableProperties35 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize32 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize32 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders31 = new TableBorders();
            TopBorder topBorder104 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder57 = new LeftBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder99 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder57 = new RightBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder77 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder77 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders31.Append(topBorder104);
            tableBorders31.Append(leftBorder57);
            tableBorders31.Append(bottomBorder99);
            tableBorders31.Append(rightBorder57);
            tableBorders31.Append(insideHorizontalBorder77);
            tableBorders31.Append(insideVerticalBorder77);

            styleTableProperties35.Append(tableStyleRowBandSize32);
            styleTableProperties35.Append(tableStyleColumnBandSize32);
            styleTableProperties35.Append(tableBorders31);

            TableStyleProperties tableStyleProperties208 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle126 = new RunPropertiesBaseStyle();
            Bold bold114 = new Bold();
            BoldComplexScript boldComplexScript112 = new BoldComplexScript();
            Color color35 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle126.Append(bold114);
            runPropertiesBaseStyle126.Append(boldComplexScript112);
            runPropertiesBaseStyle126.Append(color35);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties161 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties161 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders115 = new TableCellBorders();
            TopBorder topBorder105 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder58 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder100 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder58 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder78 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder78 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders115.Append(topBorder105);
            tableCellBorders115.Append(leftBorder58);
            tableCellBorders115.Append(bottomBorder100);
            tableCellBorders115.Append(rightBorder58);
            tableCellBorders115.Append(insideHorizontalBorder78);
            tableCellBorders115.Append(insideVerticalBorder78);
            Shading shading99 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties161.Append(tableCellBorders115);
            tableStyleConditionalFormattingTableCellProperties161.Append(shading99);

            tableStyleProperties208.Append(runPropertiesBaseStyle126);
            tableStyleProperties208.Append(tableStyleConditionalFormattingTableProperties161);
            tableStyleProperties208.Append(tableStyleConditionalFormattingTableCellProperties161);

            TableStyleProperties tableStyleProperties209 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle127 = new RunPropertiesBaseStyle();
            Bold bold115 = new Bold();
            BoldComplexScript boldComplexScript113 = new BoldComplexScript();

            runPropertiesBaseStyle127.Append(bold115);
            runPropertiesBaseStyle127.Append(boldComplexScript113);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties162 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties162 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders116 = new TableCellBorders();
            TopBorder topBorder106 = new TopBorder() { Val = BorderValues.Double, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders116.Append(topBorder106);

            tableStyleConditionalFormattingTableCellProperties162.Append(tableCellBorders116);

            tableStyleProperties209.Append(runPropertiesBaseStyle127);
            tableStyleProperties209.Append(tableStyleConditionalFormattingTableProperties162);
            tableStyleProperties209.Append(tableStyleConditionalFormattingTableCellProperties162);

            TableStyleProperties tableStyleProperties210 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle128 = new RunPropertiesBaseStyle();
            Bold bold116 = new Bold();
            BoldComplexScript boldComplexScript114 = new BoldComplexScript();

            runPropertiesBaseStyle128.Append(bold116);
            runPropertiesBaseStyle128.Append(boldComplexScript114);

            tableStyleProperties210.Append(runPropertiesBaseStyle128);

            TableStyleProperties tableStyleProperties211 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle129 = new RunPropertiesBaseStyle();
            Bold bold117 = new Bold();
            BoldComplexScript boldComplexScript115 = new BoldComplexScript();

            runPropertiesBaseStyle129.Append(bold117);
            runPropertiesBaseStyle129.Append(boldComplexScript115);

            tableStyleProperties211.Append(runPropertiesBaseStyle129);

            TableStyleProperties tableStyleProperties212 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties163 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties163 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading100 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties163.Append(shading100);

            tableStyleProperties212.Append(tableStyleConditionalFormattingTableProperties163);
            tableStyleProperties212.Append(tableStyleConditionalFormattingTableCellProperties163);

            TableStyleProperties tableStyleProperties213 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties164 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties164 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading101 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties164.Append(shading101);

            tableStyleProperties213.Append(tableStyleConditionalFormattingTableProperties164);
            tableStyleProperties213.Append(tableStyleConditionalFormattingTableCellProperties164);

            style65.Append(styleName65);
            style65.Append(basedOn60);
            style65.Append(uIPriority64);
            style65.Append(rsid61);
            style65.Append(styleParagraphProperties53);
            style65.Append(styleTableProperties35);
            style65.Append(tableStyleProperties208);
            style65.Append(tableStyleProperties209);
            style65.Append(tableStyleProperties210);
            style65.Append(tableStyleProperties211);
            style65.Append(tableStyleProperties212);
            style65.Append(tableStyleProperties213);

            Style style66 = new Style() { Type = StyleValues.Table, StyleId = "GridTable4-Accent6" };
            StyleName styleName66 = new StyleName() { Val = "Grid Table 4 Accent 6" };
            BasedOn basedOn61 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority65 = new UIPriority() { Val = 49 };
            Rsid rsid62 = new Rsid() { Val = "00B64AE0" };

            StyleParagraphProperties styleParagraphProperties54 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines56 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties54.Append(spacingBetweenLines56);

            StyleTableProperties styleTableProperties36 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize33 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize33 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders32 = new TableBorders();
            TopBorder topBorder107 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder59 = new LeftBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder101 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder59 = new RightBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder79 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder79 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders32.Append(topBorder107);
            tableBorders32.Append(leftBorder59);
            tableBorders32.Append(bottomBorder101);
            tableBorders32.Append(rightBorder59);
            tableBorders32.Append(insideHorizontalBorder79);
            tableBorders32.Append(insideVerticalBorder79);

            styleTableProperties36.Append(tableStyleRowBandSize33);
            styleTableProperties36.Append(tableStyleColumnBandSize33);
            styleTableProperties36.Append(tableBorders32);

            TableStyleProperties tableStyleProperties214 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle130 = new RunPropertiesBaseStyle();
            Bold bold118 = new Bold();
            BoldComplexScript boldComplexScript116 = new BoldComplexScript();
            Color color36 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle130.Append(bold118);
            runPropertiesBaseStyle130.Append(boldComplexScript116);
            runPropertiesBaseStyle130.Append(color36);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties165 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties165 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders117 = new TableCellBorders();
            TopBorder topBorder108 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder60 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder102 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder60 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder80 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder80 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders117.Append(topBorder108);
            tableCellBorders117.Append(leftBorder60);
            tableCellBorders117.Append(bottomBorder102);
            tableCellBorders117.Append(rightBorder60);
            tableCellBorders117.Append(insideHorizontalBorder80);
            tableCellBorders117.Append(insideVerticalBorder80);
            Shading shading102 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties165.Append(tableCellBorders117);
            tableStyleConditionalFormattingTableCellProperties165.Append(shading102);

            tableStyleProperties214.Append(runPropertiesBaseStyle130);
            tableStyleProperties214.Append(tableStyleConditionalFormattingTableProperties165);
            tableStyleProperties214.Append(tableStyleConditionalFormattingTableCellProperties165);

            TableStyleProperties tableStyleProperties215 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle131 = new RunPropertiesBaseStyle();
            Bold bold119 = new Bold();
            BoldComplexScript boldComplexScript117 = new BoldComplexScript();

            runPropertiesBaseStyle131.Append(bold119);
            runPropertiesBaseStyle131.Append(boldComplexScript117);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties166 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties166 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders118 = new TableCellBorders();
            TopBorder topBorder109 = new TopBorder() { Val = BorderValues.Double, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders118.Append(topBorder109);

            tableStyleConditionalFormattingTableCellProperties166.Append(tableCellBorders118);

            tableStyleProperties215.Append(runPropertiesBaseStyle131);
            tableStyleProperties215.Append(tableStyleConditionalFormattingTableProperties166);
            tableStyleProperties215.Append(tableStyleConditionalFormattingTableCellProperties166);

            TableStyleProperties tableStyleProperties216 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle132 = new RunPropertiesBaseStyle();
            Bold bold120 = new Bold();
            BoldComplexScript boldComplexScript118 = new BoldComplexScript();

            runPropertiesBaseStyle132.Append(bold120);
            runPropertiesBaseStyle132.Append(boldComplexScript118);

            tableStyleProperties216.Append(runPropertiesBaseStyle132);

            TableStyleProperties tableStyleProperties217 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle133 = new RunPropertiesBaseStyle();
            Bold bold121 = new Bold();
            BoldComplexScript boldComplexScript119 = new BoldComplexScript();

            runPropertiesBaseStyle133.Append(bold121);
            runPropertiesBaseStyle133.Append(boldComplexScript119);

            tableStyleProperties217.Append(runPropertiesBaseStyle133);

            TableStyleProperties tableStyleProperties218 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties167 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties167 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading103 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties167.Append(shading103);

            tableStyleProperties218.Append(tableStyleConditionalFormattingTableProperties167);
            tableStyleProperties218.Append(tableStyleConditionalFormattingTableCellProperties167);

            TableStyleProperties tableStyleProperties219 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties168 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties168 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading104 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties168.Append(shading104);

            tableStyleProperties219.Append(tableStyleConditionalFormattingTableProperties168);
            tableStyleProperties219.Append(tableStyleConditionalFormattingTableCellProperties168);

            style66.Append(styleName66);
            style66.Append(basedOn61);
            style66.Append(uIPriority65);
            style66.Append(rsid62);
            style66.Append(styleParagraphProperties54);
            style66.Append(styleTableProperties36);
            style66.Append(tableStyleProperties214);
            style66.Append(tableStyleProperties215);
            style66.Append(tableStyleProperties216);
            style66.Append(tableStyleProperties217);
            style66.Append(tableStyleProperties218);
            style66.Append(tableStyleProperties219);

            Style style67 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark" };
            StyleName styleName67 = new StyleName() { Val = "Grid Table 5 Dark" };
            BasedOn basedOn62 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority66 = new UIPriority() { Val = 50 };
            Rsid rsid63 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties55 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines57 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties55.Append(spacingBetweenLines57);

            StyleTableProperties styleTableProperties37 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize34 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize34 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders33 = new TableBorders();
            TopBorder topBorder110 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder61 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder103 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder61 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder81 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder81 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders33.Append(topBorder110);
            tableBorders33.Append(leftBorder61);
            tableBorders33.Append(bottomBorder103);
            tableBorders33.Append(rightBorder61);
            tableBorders33.Append(insideHorizontalBorder81);
            tableBorders33.Append(insideVerticalBorder81);

            styleTableProperties37.Append(tableStyleRowBandSize34);
            styleTableProperties37.Append(tableStyleColumnBandSize34);
            styleTableProperties37.Append(tableBorders33);

            StyleTableCellProperties styleTableCellProperties1 = new StyleTableCellProperties();
            Shading shading105 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            styleTableCellProperties1.Append(shading105);

            TableStyleProperties tableStyleProperties220 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle134 = new RunPropertiesBaseStyle();
            Bold bold122 = new Bold();
            BoldComplexScript boldComplexScript120 = new BoldComplexScript();
            Color color37 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle134.Append(bold122);
            runPropertiesBaseStyle134.Append(boldComplexScript120);
            runPropertiesBaseStyle134.Append(color37);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties169 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties169 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders119 = new TableCellBorders();
            TopBorder topBorder111 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder62 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder62 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder82 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder82 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders119.Append(topBorder111);
            tableCellBorders119.Append(leftBorder62);
            tableCellBorders119.Append(rightBorder62);
            tableCellBorders119.Append(insideHorizontalBorder82);
            tableCellBorders119.Append(insideVerticalBorder82);
            Shading shading106 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties169.Append(tableCellBorders119);
            tableStyleConditionalFormattingTableCellProperties169.Append(shading106);

            tableStyleProperties220.Append(runPropertiesBaseStyle134);
            tableStyleProperties220.Append(tableStyleConditionalFormattingTableProperties169);
            tableStyleProperties220.Append(tableStyleConditionalFormattingTableCellProperties169);

            TableStyleProperties tableStyleProperties221 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle135 = new RunPropertiesBaseStyle();
            Bold bold123 = new Bold();
            BoldComplexScript boldComplexScript121 = new BoldComplexScript();
            Color color38 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle135.Append(bold123);
            runPropertiesBaseStyle135.Append(boldComplexScript121);
            runPropertiesBaseStyle135.Append(color38);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties170 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties170 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders120 = new TableCellBorders();
            LeftBorder leftBorder63 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder104 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder63 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder83 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder83 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders120.Append(leftBorder63);
            tableCellBorders120.Append(bottomBorder104);
            tableCellBorders120.Append(rightBorder63);
            tableCellBorders120.Append(insideHorizontalBorder83);
            tableCellBorders120.Append(insideVerticalBorder83);
            Shading shading107 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties170.Append(tableCellBorders120);
            tableStyleConditionalFormattingTableCellProperties170.Append(shading107);

            tableStyleProperties221.Append(runPropertiesBaseStyle135);
            tableStyleProperties221.Append(tableStyleConditionalFormattingTableProperties170);
            tableStyleProperties221.Append(tableStyleConditionalFormattingTableCellProperties170);

            TableStyleProperties tableStyleProperties222 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle136 = new RunPropertiesBaseStyle();
            Bold bold124 = new Bold();
            BoldComplexScript boldComplexScript122 = new BoldComplexScript();
            Color color39 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle136.Append(bold124);
            runPropertiesBaseStyle136.Append(boldComplexScript122);
            runPropertiesBaseStyle136.Append(color39);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties171 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties171 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders121 = new TableCellBorders();
            TopBorder topBorder112 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder64 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder105 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder84 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders121.Append(topBorder112);
            tableCellBorders121.Append(leftBorder64);
            tableCellBorders121.Append(bottomBorder105);
            tableCellBorders121.Append(insideVerticalBorder84);
            Shading shading108 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties171.Append(tableCellBorders121);
            tableStyleConditionalFormattingTableCellProperties171.Append(shading108);

            tableStyleProperties222.Append(runPropertiesBaseStyle136);
            tableStyleProperties222.Append(tableStyleConditionalFormattingTableProperties171);
            tableStyleProperties222.Append(tableStyleConditionalFormattingTableCellProperties171);

            TableStyleProperties tableStyleProperties223 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle137 = new RunPropertiesBaseStyle();
            Bold bold125 = new Bold();
            BoldComplexScript boldComplexScript123 = new BoldComplexScript();
            Color color40 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle137.Append(bold125);
            runPropertiesBaseStyle137.Append(boldComplexScript123);
            runPropertiesBaseStyle137.Append(color40);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties172 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties172 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders122 = new TableCellBorders();
            TopBorder topBorder113 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder106 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder64 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder85 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders122.Append(topBorder113);
            tableCellBorders122.Append(bottomBorder106);
            tableCellBorders122.Append(rightBorder64);
            tableCellBorders122.Append(insideVerticalBorder85);
            Shading shading109 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties172.Append(tableCellBorders122);
            tableStyleConditionalFormattingTableCellProperties172.Append(shading109);

            tableStyleProperties223.Append(runPropertiesBaseStyle137);
            tableStyleProperties223.Append(tableStyleConditionalFormattingTableProperties172);
            tableStyleProperties223.Append(tableStyleConditionalFormattingTableCellProperties172);

            TableStyleProperties tableStyleProperties224 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties173 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties173 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading110 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "999999", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties173.Append(shading110);

            tableStyleProperties224.Append(tableStyleConditionalFormattingTableProperties173);
            tableStyleProperties224.Append(tableStyleConditionalFormattingTableCellProperties173);

            TableStyleProperties tableStyleProperties225 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties174 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties174 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading111 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "999999", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties174.Append(shading111);

            tableStyleProperties225.Append(tableStyleConditionalFormattingTableProperties174);
            tableStyleProperties225.Append(tableStyleConditionalFormattingTableCellProperties174);

            style67.Append(styleName67);
            style67.Append(basedOn62);
            style67.Append(uIPriority66);
            style67.Append(rsid63);
            style67.Append(styleParagraphProperties55);
            style67.Append(styleTableProperties37);
            style67.Append(styleTableCellProperties1);
            style67.Append(tableStyleProperties220);
            style67.Append(tableStyleProperties221);
            style67.Append(tableStyleProperties222);
            style67.Append(tableStyleProperties223);
            style67.Append(tableStyleProperties224);
            style67.Append(tableStyleProperties225);

            Style style68 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent1" };
            StyleName styleName68 = new StyleName() { Val = "Grid Table 5 Dark Accent 1" };
            BasedOn basedOn63 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority67 = new UIPriority() { Val = 50 };
            Rsid rsid64 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties56 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines58 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties56.Append(spacingBetweenLines58);

            StyleTableProperties styleTableProperties38 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize35 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize35 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders34 = new TableBorders();
            TopBorder topBorder114 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder65 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder107 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder65 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder84 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder86 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders34.Append(topBorder114);
            tableBorders34.Append(leftBorder65);
            tableBorders34.Append(bottomBorder107);
            tableBorders34.Append(rightBorder65);
            tableBorders34.Append(insideHorizontalBorder84);
            tableBorders34.Append(insideVerticalBorder86);

            styleTableProperties38.Append(tableStyleRowBandSize35);
            styleTableProperties38.Append(tableStyleColumnBandSize35);
            styleTableProperties38.Append(tableBorders34);

            StyleTableCellProperties styleTableCellProperties2 = new StyleTableCellProperties();
            Shading shading112 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            styleTableCellProperties2.Append(shading112);

            TableStyleProperties tableStyleProperties226 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle138 = new RunPropertiesBaseStyle();
            Bold bold126 = new Bold();
            BoldComplexScript boldComplexScript124 = new BoldComplexScript();
            Color color41 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle138.Append(bold126);
            runPropertiesBaseStyle138.Append(boldComplexScript124);
            runPropertiesBaseStyle138.Append(color41);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties175 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties175 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders123 = new TableCellBorders();
            TopBorder topBorder115 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder66 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder66 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder85 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder87 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders123.Append(topBorder115);
            tableCellBorders123.Append(leftBorder66);
            tableCellBorders123.Append(rightBorder66);
            tableCellBorders123.Append(insideHorizontalBorder85);
            tableCellBorders123.Append(insideVerticalBorder87);
            Shading shading113 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties175.Append(tableCellBorders123);
            tableStyleConditionalFormattingTableCellProperties175.Append(shading113);

            tableStyleProperties226.Append(runPropertiesBaseStyle138);
            tableStyleProperties226.Append(tableStyleConditionalFormattingTableProperties175);
            tableStyleProperties226.Append(tableStyleConditionalFormattingTableCellProperties175);

            TableStyleProperties tableStyleProperties227 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle139 = new RunPropertiesBaseStyle();
            Bold bold127 = new Bold();
            BoldComplexScript boldComplexScript125 = new BoldComplexScript();
            Color color42 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle139.Append(bold127);
            runPropertiesBaseStyle139.Append(boldComplexScript125);
            runPropertiesBaseStyle139.Append(color42);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties176 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties176 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders124 = new TableCellBorders();
            LeftBorder leftBorder67 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder108 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder67 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder86 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder88 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders124.Append(leftBorder67);
            tableCellBorders124.Append(bottomBorder108);
            tableCellBorders124.Append(rightBorder67);
            tableCellBorders124.Append(insideHorizontalBorder86);
            tableCellBorders124.Append(insideVerticalBorder88);
            Shading shading114 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties176.Append(tableCellBorders124);
            tableStyleConditionalFormattingTableCellProperties176.Append(shading114);

            tableStyleProperties227.Append(runPropertiesBaseStyle139);
            tableStyleProperties227.Append(tableStyleConditionalFormattingTableProperties176);
            tableStyleProperties227.Append(tableStyleConditionalFormattingTableCellProperties176);

            TableStyleProperties tableStyleProperties228 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle140 = new RunPropertiesBaseStyle();
            Bold bold128 = new Bold();
            BoldComplexScript boldComplexScript126 = new BoldComplexScript();
            Color color43 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle140.Append(bold128);
            runPropertiesBaseStyle140.Append(boldComplexScript126);
            runPropertiesBaseStyle140.Append(color43);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties177 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties177 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders125 = new TableCellBorders();
            TopBorder topBorder116 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder68 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder109 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder89 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders125.Append(topBorder116);
            tableCellBorders125.Append(leftBorder68);
            tableCellBorders125.Append(bottomBorder109);
            tableCellBorders125.Append(insideVerticalBorder89);
            Shading shading115 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties177.Append(tableCellBorders125);
            tableStyleConditionalFormattingTableCellProperties177.Append(shading115);

            tableStyleProperties228.Append(runPropertiesBaseStyle140);
            tableStyleProperties228.Append(tableStyleConditionalFormattingTableProperties177);
            tableStyleProperties228.Append(tableStyleConditionalFormattingTableCellProperties177);

            TableStyleProperties tableStyleProperties229 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle141 = new RunPropertiesBaseStyle();
            Bold bold129 = new Bold();
            BoldComplexScript boldComplexScript127 = new BoldComplexScript();
            Color color44 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle141.Append(bold129);
            runPropertiesBaseStyle141.Append(boldComplexScript127);
            runPropertiesBaseStyle141.Append(color44);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties178 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties178 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders126 = new TableCellBorders();
            TopBorder topBorder117 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder110 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder68 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder90 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders126.Append(topBorder117);
            tableCellBorders126.Append(bottomBorder110);
            tableCellBorders126.Append(rightBorder68);
            tableCellBorders126.Append(insideVerticalBorder90);
            Shading shading116 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties178.Append(tableCellBorders126);
            tableStyleConditionalFormattingTableCellProperties178.Append(shading116);

            tableStyleProperties229.Append(runPropertiesBaseStyle141);
            tableStyleProperties229.Append(tableStyleConditionalFormattingTableProperties178);
            tableStyleProperties229.Append(tableStyleConditionalFormattingTableCellProperties178);

            TableStyleProperties tableStyleProperties230 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties179 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties179 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading117 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "BDD6EE", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties179.Append(shading117);

            tableStyleProperties230.Append(tableStyleConditionalFormattingTableProperties179);
            tableStyleProperties230.Append(tableStyleConditionalFormattingTableCellProperties179);

            TableStyleProperties tableStyleProperties231 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties180 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties180 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading118 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "BDD6EE", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties180.Append(shading118);

            tableStyleProperties231.Append(tableStyleConditionalFormattingTableProperties180);
            tableStyleProperties231.Append(tableStyleConditionalFormattingTableCellProperties180);

            style68.Append(styleName68);
            style68.Append(basedOn63);
            style68.Append(uIPriority67);
            style68.Append(rsid64);
            style68.Append(styleParagraphProperties56);
            style68.Append(styleTableProperties38);
            style68.Append(styleTableCellProperties2);
            style68.Append(tableStyleProperties226);
            style68.Append(tableStyleProperties227);
            style68.Append(tableStyleProperties228);
            style68.Append(tableStyleProperties229);
            style68.Append(tableStyleProperties230);
            style68.Append(tableStyleProperties231);

            Style style69 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent2" };
            StyleName styleName69 = new StyleName() { Val = "Grid Table 5 Dark Accent 2" };
            BasedOn basedOn64 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority68 = new UIPriority() { Val = 50 };
            Rsid rsid65 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties57 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines59 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties57.Append(spacingBetweenLines59);

            StyleTableProperties styleTableProperties39 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize36 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize36 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders35 = new TableBorders();
            TopBorder topBorder118 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder69 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder111 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder69 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder87 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder91 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders35.Append(topBorder118);
            tableBorders35.Append(leftBorder69);
            tableBorders35.Append(bottomBorder111);
            tableBorders35.Append(rightBorder69);
            tableBorders35.Append(insideHorizontalBorder87);
            tableBorders35.Append(insideVerticalBorder91);

            styleTableProperties39.Append(tableStyleRowBandSize36);
            styleTableProperties39.Append(tableStyleColumnBandSize36);
            styleTableProperties39.Append(tableBorders35);

            StyleTableCellProperties styleTableCellProperties3 = new StyleTableCellProperties();
            Shading shading119 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            styleTableCellProperties3.Append(shading119);

            TableStyleProperties tableStyleProperties232 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle142 = new RunPropertiesBaseStyle();
            Bold bold130 = new Bold();
            BoldComplexScript boldComplexScript128 = new BoldComplexScript();
            Color color45 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle142.Append(bold130);
            runPropertiesBaseStyle142.Append(boldComplexScript128);
            runPropertiesBaseStyle142.Append(color45);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties181 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties181 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders127 = new TableCellBorders();
            TopBorder topBorder119 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder70 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder70 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder88 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder92 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders127.Append(topBorder119);
            tableCellBorders127.Append(leftBorder70);
            tableCellBorders127.Append(rightBorder70);
            tableCellBorders127.Append(insideHorizontalBorder88);
            tableCellBorders127.Append(insideVerticalBorder92);
            Shading shading120 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties181.Append(tableCellBorders127);
            tableStyleConditionalFormattingTableCellProperties181.Append(shading120);

            tableStyleProperties232.Append(runPropertiesBaseStyle142);
            tableStyleProperties232.Append(tableStyleConditionalFormattingTableProperties181);
            tableStyleProperties232.Append(tableStyleConditionalFormattingTableCellProperties181);

            TableStyleProperties tableStyleProperties233 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle143 = new RunPropertiesBaseStyle();
            Bold bold131 = new Bold();
            BoldComplexScript boldComplexScript129 = new BoldComplexScript();
            Color color46 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle143.Append(bold131);
            runPropertiesBaseStyle143.Append(boldComplexScript129);
            runPropertiesBaseStyle143.Append(color46);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties182 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties182 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders128 = new TableCellBorders();
            LeftBorder leftBorder71 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder112 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder71 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder89 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder93 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders128.Append(leftBorder71);
            tableCellBorders128.Append(bottomBorder112);
            tableCellBorders128.Append(rightBorder71);
            tableCellBorders128.Append(insideHorizontalBorder89);
            tableCellBorders128.Append(insideVerticalBorder93);
            Shading shading121 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties182.Append(tableCellBorders128);
            tableStyleConditionalFormattingTableCellProperties182.Append(shading121);

            tableStyleProperties233.Append(runPropertiesBaseStyle143);
            tableStyleProperties233.Append(tableStyleConditionalFormattingTableProperties182);
            tableStyleProperties233.Append(tableStyleConditionalFormattingTableCellProperties182);

            TableStyleProperties tableStyleProperties234 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle144 = new RunPropertiesBaseStyle();
            Bold bold132 = new Bold();
            BoldComplexScript boldComplexScript130 = new BoldComplexScript();
            Color color47 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle144.Append(bold132);
            runPropertiesBaseStyle144.Append(boldComplexScript130);
            runPropertiesBaseStyle144.Append(color47);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties183 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties183 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders129 = new TableCellBorders();
            TopBorder topBorder120 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder72 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder113 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder94 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders129.Append(topBorder120);
            tableCellBorders129.Append(leftBorder72);
            tableCellBorders129.Append(bottomBorder113);
            tableCellBorders129.Append(insideVerticalBorder94);
            Shading shading122 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties183.Append(tableCellBorders129);
            tableStyleConditionalFormattingTableCellProperties183.Append(shading122);

            tableStyleProperties234.Append(runPropertiesBaseStyle144);
            tableStyleProperties234.Append(tableStyleConditionalFormattingTableProperties183);
            tableStyleProperties234.Append(tableStyleConditionalFormattingTableCellProperties183);

            TableStyleProperties tableStyleProperties235 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle145 = new RunPropertiesBaseStyle();
            Bold bold133 = new Bold();
            BoldComplexScript boldComplexScript131 = new BoldComplexScript();
            Color color48 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle145.Append(bold133);
            runPropertiesBaseStyle145.Append(boldComplexScript131);
            runPropertiesBaseStyle145.Append(color48);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties184 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties184 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders130 = new TableCellBorders();
            TopBorder topBorder121 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder114 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder72 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder95 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders130.Append(topBorder121);
            tableCellBorders130.Append(bottomBorder114);
            tableCellBorders130.Append(rightBorder72);
            tableCellBorders130.Append(insideVerticalBorder95);
            Shading shading123 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties184.Append(tableCellBorders130);
            tableStyleConditionalFormattingTableCellProperties184.Append(shading123);

            tableStyleProperties235.Append(runPropertiesBaseStyle145);
            tableStyleProperties235.Append(tableStyleConditionalFormattingTableProperties184);
            tableStyleProperties235.Append(tableStyleConditionalFormattingTableCellProperties184);

            TableStyleProperties tableStyleProperties236 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties185 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties185 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading124 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F7CAAC", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties185.Append(shading124);

            tableStyleProperties236.Append(tableStyleConditionalFormattingTableProperties185);
            tableStyleProperties236.Append(tableStyleConditionalFormattingTableCellProperties185);

            TableStyleProperties tableStyleProperties237 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties186 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties186 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading125 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "F7CAAC", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties186.Append(shading125);

            tableStyleProperties237.Append(tableStyleConditionalFormattingTableProperties186);
            tableStyleProperties237.Append(tableStyleConditionalFormattingTableCellProperties186);

            style69.Append(styleName69);
            style69.Append(basedOn64);
            style69.Append(uIPriority68);
            style69.Append(rsid65);
            style69.Append(styleParagraphProperties57);
            style69.Append(styleTableProperties39);
            style69.Append(styleTableCellProperties3);
            style69.Append(tableStyleProperties232);
            style69.Append(tableStyleProperties233);
            style69.Append(tableStyleProperties234);
            style69.Append(tableStyleProperties235);
            style69.Append(tableStyleProperties236);
            style69.Append(tableStyleProperties237);

            Style style70 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent3" };
            StyleName styleName70 = new StyleName() { Val = "Grid Table 5 Dark Accent 3" };
            BasedOn basedOn65 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority69 = new UIPriority() { Val = 50 };
            Rsid rsid66 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties58 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines60 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties58.Append(spacingBetweenLines60);

            StyleTableProperties styleTableProperties40 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize37 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize37 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders36 = new TableBorders();
            TopBorder topBorder122 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder73 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder115 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder73 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder90 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder96 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders36.Append(topBorder122);
            tableBorders36.Append(leftBorder73);
            tableBorders36.Append(bottomBorder115);
            tableBorders36.Append(rightBorder73);
            tableBorders36.Append(insideHorizontalBorder90);
            tableBorders36.Append(insideVerticalBorder96);

            styleTableProperties40.Append(tableStyleRowBandSize37);
            styleTableProperties40.Append(tableStyleColumnBandSize37);
            styleTableProperties40.Append(tableBorders36);

            StyleTableCellProperties styleTableCellProperties4 = new StyleTableCellProperties();
            Shading shading126 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            styleTableCellProperties4.Append(shading126);

            TableStyleProperties tableStyleProperties238 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle146 = new RunPropertiesBaseStyle();
            Bold bold134 = new Bold();
            BoldComplexScript boldComplexScript132 = new BoldComplexScript();
            Color color49 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle146.Append(bold134);
            runPropertiesBaseStyle146.Append(boldComplexScript132);
            runPropertiesBaseStyle146.Append(color49);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties187 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties187 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders131 = new TableCellBorders();
            TopBorder topBorder123 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder74 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder74 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder91 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder97 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders131.Append(topBorder123);
            tableCellBorders131.Append(leftBorder74);
            tableCellBorders131.Append(rightBorder74);
            tableCellBorders131.Append(insideHorizontalBorder91);
            tableCellBorders131.Append(insideVerticalBorder97);
            Shading shading127 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties187.Append(tableCellBorders131);
            tableStyleConditionalFormattingTableCellProperties187.Append(shading127);

            tableStyleProperties238.Append(runPropertiesBaseStyle146);
            tableStyleProperties238.Append(tableStyleConditionalFormattingTableProperties187);
            tableStyleProperties238.Append(tableStyleConditionalFormattingTableCellProperties187);

            TableStyleProperties tableStyleProperties239 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle147 = new RunPropertiesBaseStyle();
            Bold bold135 = new Bold();
            BoldComplexScript boldComplexScript133 = new BoldComplexScript();
            Color color50 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle147.Append(bold135);
            runPropertiesBaseStyle147.Append(boldComplexScript133);
            runPropertiesBaseStyle147.Append(color50);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties188 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties188 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders132 = new TableCellBorders();
            LeftBorder leftBorder75 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder116 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder75 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder92 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder98 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders132.Append(leftBorder75);
            tableCellBorders132.Append(bottomBorder116);
            tableCellBorders132.Append(rightBorder75);
            tableCellBorders132.Append(insideHorizontalBorder92);
            tableCellBorders132.Append(insideVerticalBorder98);
            Shading shading128 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties188.Append(tableCellBorders132);
            tableStyleConditionalFormattingTableCellProperties188.Append(shading128);

            tableStyleProperties239.Append(runPropertiesBaseStyle147);
            tableStyleProperties239.Append(tableStyleConditionalFormattingTableProperties188);
            tableStyleProperties239.Append(tableStyleConditionalFormattingTableCellProperties188);

            TableStyleProperties tableStyleProperties240 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle148 = new RunPropertiesBaseStyle();
            Bold bold136 = new Bold();
            BoldComplexScript boldComplexScript134 = new BoldComplexScript();
            Color color51 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle148.Append(bold136);
            runPropertiesBaseStyle148.Append(boldComplexScript134);
            runPropertiesBaseStyle148.Append(color51);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties189 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties189 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders133 = new TableCellBorders();
            TopBorder topBorder124 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder76 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder117 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder99 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders133.Append(topBorder124);
            tableCellBorders133.Append(leftBorder76);
            tableCellBorders133.Append(bottomBorder117);
            tableCellBorders133.Append(insideVerticalBorder99);
            Shading shading129 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties189.Append(tableCellBorders133);
            tableStyleConditionalFormattingTableCellProperties189.Append(shading129);

            tableStyleProperties240.Append(runPropertiesBaseStyle148);
            tableStyleProperties240.Append(tableStyleConditionalFormattingTableProperties189);
            tableStyleProperties240.Append(tableStyleConditionalFormattingTableCellProperties189);

            TableStyleProperties tableStyleProperties241 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle149 = new RunPropertiesBaseStyle();
            Bold bold137 = new Bold();
            BoldComplexScript boldComplexScript135 = new BoldComplexScript();
            Color color52 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle149.Append(bold137);
            runPropertiesBaseStyle149.Append(boldComplexScript135);
            runPropertiesBaseStyle149.Append(color52);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties190 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties190 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders134 = new TableCellBorders();
            TopBorder topBorder125 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder118 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder76 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder100 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders134.Append(topBorder125);
            tableCellBorders134.Append(bottomBorder118);
            tableCellBorders134.Append(rightBorder76);
            tableCellBorders134.Append(insideVerticalBorder100);
            Shading shading130 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties190.Append(tableCellBorders134);
            tableStyleConditionalFormattingTableCellProperties190.Append(shading130);

            tableStyleProperties241.Append(runPropertiesBaseStyle149);
            tableStyleProperties241.Append(tableStyleConditionalFormattingTableProperties190);
            tableStyleProperties241.Append(tableStyleConditionalFormattingTableCellProperties190);

            TableStyleProperties tableStyleProperties242 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties191 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties191 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading131 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DBDBDB", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties191.Append(shading131);

            tableStyleProperties242.Append(tableStyleConditionalFormattingTableProperties191);
            tableStyleProperties242.Append(tableStyleConditionalFormattingTableCellProperties191);

            TableStyleProperties tableStyleProperties243 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties192 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties192 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading132 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DBDBDB", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties192.Append(shading132);

            tableStyleProperties243.Append(tableStyleConditionalFormattingTableProperties192);
            tableStyleProperties243.Append(tableStyleConditionalFormattingTableCellProperties192);

            style70.Append(styleName70);
            style70.Append(basedOn65);
            style70.Append(uIPriority69);
            style70.Append(rsid66);
            style70.Append(styleParagraphProperties58);
            style70.Append(styleTableProperties40);
            style70.Append(styleTableCellProperties4);
            style70.Append(tableStyleProperties238);
            style70.Append(tableStyleProperties239);
            style70.Append(tableStyleProperties240);
            style70.Append(tableStyleProperties241);
            style70.Append(tableStyleProperties242);
            style70.Append(tableStyleProperties243);

            Style style71 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent4" };
            StyleName styleName71 = new StyleName() { Val = "Grid Table 5 Dark Accent 4" };
            BasedOn basedOn66 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority70 = new UIPriority() { Val = 50 };
            Rsid rsid67 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties59 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines61 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties59.Append(spacingBetweenLines61);

            StyleTableProperties styleTableProperties41 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize38 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize38 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders37 = new TableBorders();
            TopBorder topBorder126 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder77 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder119 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder77 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder93 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder101 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders37.Append(topBorder126);
            tableBorders37.Append(leftBorder77);
            tableBorders37.Append(bottomBorder119);
            tableBorders37.Append(rightBorder77);
            tableBorders37.Append(insideHorizontalBorder93);
            tableBorders37.Append(insideVerticalBorder101);

            styleTableProperties41.Append(tableStyleRowBandSize38);
            styleTableProperties41.Append(tableStyleColumnBandSize38);
            styleTableProperties41.Append(tableBorders37);

            StyleTableCellProperties styleTableCellProperties5 = new StyleTableCellProperties();
            Shading shading133 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            styleTableCellProperties5.Append(shading133);

            TableStyleProperties tableStyleProperties244 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle150 = new RunPropertiesBaseStyle();
            Bold bold138 = new Bold();
            BoldComplexScript boldComplexScript136 = new BoldComplexScript();
            Color color53 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle150.Append(bold138);
            runPropertiesBaseStyle150.Append(boldComplexScript136);
            runPropertiesBaseStyle150.Append(color53);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties193 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties193 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders135 = new TableCellBorders();
            TopBorder topBorder127 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder78 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder78 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder94 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder102 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders135.Append(topBorder127);
            tableCellBorders135.Append(leftBorder78);
            tableCellBorders135.Append(rightBorder78);
            tableCellBorders135.Append(insideHorizontalBorder94);
            tableCellBorders135.Append(insideVerticalBorder102);
            Shading shading134 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties193.Append(tableCellBorders135);
            tableStyleConditionalFormattingTableCellProperties193.Append(shading134);

            tableStyleProperties244.Append(runPropertiesBaseStyle150);
            tableStyleProperties244.Append(tableStyleConditionalFormattingTableProperties193);
            tableStyleProperties244.Append(tableStyleConditionalFormattingTableCellProperties193);

            TableStyleProperties tableStyleProperties245 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle151 = new RunPropertiesBaseStyle();
            Bold bold139 = new Bold();
            BoldComplexScript boldComplexScript137 = new BoldComplexScript();
            Color color54 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle151.Append(bold139);
            runPropertiesBaseStyle151.Append(boldComplexScript137);
            runPropertiesBaseStyle151.Append(color54);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties194 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties194 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders136 = new TableCellBorders();
            LeftBorder leftBorder79 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder120 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder79 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder95 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder103 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders136.Append(leftBorder79);
            tableCellBorders136.Append(bottomBorder120);
            tableCellBorders136.Append(rightBorder79);
            tableCellBorders136.Append(insideHorizontalBorder95);
            tableCellBorders136.Append(insideVerticalBorder103);
            Shading shading135 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties194.Append(tableCellBorders136);
            tableStyleConditionalFormattingTableCellProperties194.Append(shading135);

            tableStyleProperties245.Append(runPropertiesBaseStyle151);
            tableStyleProperties245.Append(tableStyleConditionalFormattingTableProperties194);
            tableStyleProperties245.Append(tableStyleConditionalFormattingTableCellProperties194);

            TableStyleProperties tableStyleProperties246 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle152 = new RunPropertiesBaseStyle();
            Bold bold140 = new Bold();
            BoldComplexScript boldComplexScript138 = new BoldComplexScript();
            Color color55 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle152.Append(bold140);
            runPropertiesBaseStyle152.Append(boldComplexScript138);
            runPropertiesBaseStyle152.Append(color55);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties195 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties195 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders137 = new TableCellBorders();
            TopBorder topBorder128 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder80 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder121 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder104 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders137.Append(topBorder128);
            tableCellBorders137.Append(leftBorder80);
            tableCellBorders137.Append(bottomBorder121);
            tableCellBorders137.Append(insideVerticalBorder104);
            Shading shading136 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties195.Append(tableCellBorders137);
            tableStyleConditionalFormattingTableCellProperties195.Append(shading136);

            tableStyleProperties246.Append(runPropertiesBaseStyle152);
            tableStyleProperties246.Append(tableStyleConditionalFormattingTableProperties195);
            tableStyleProperties246.Append(tableStyleConditionalFormattingTableCellProperties195);

            TableStyleProperties tableStyleProperties247 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle153 = new RunPropertiesBaseStyle();
            Bold bold141 = new Bold();
            BoldComplexScript boldComplexScript139 = new BoldComplexScript();
            Color color56 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle153.Append(bold141);
            runPropertiesBaseStyle153.Append(boldComplexScript139);
            runPropertiesBaseStyle153.Append(color56);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties196 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties196 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders138 = new TableCellBorders();
            TopBorder topBorder129 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder122 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder80 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder105 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders138.Append(topBorder129);
            tableCellBorders138.Append(bottomBorder122);
            tableCellBorders138.Append(rightBorder80);
            tableCellBorders138.Append(insideVerticalBorder105);
            Shading shading137 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties196.Append(tableCellBorders138);
            tableStyleConditionalFormattingTableCellProperties196.Append(shading137);

            tableStyleProperties247.Append(runPropertiesBaseStyle153);
            tableStyleProperties247.Append(tableStyleConditionalFormattingTableProperties196);
            tableStyleProperties247.Append(tableStyleConditionalFormattingTableCellProperties196);

            TableStyleProperties tableStyleProperties248 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties197 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties197 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading138 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFE599", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties197.Append(shading138);

            tableStyleProperties248.Append(tableStyleConditionalFormattingTableProperties197);
            tableStyleProperties248.Append(tableStyleConditionalFormattingTableCellProperties197);

            TableStyleProperties tableStyleProperties249 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties198 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties198 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading139 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFE599", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties198.Append(shading139);

            tableStyleProperties249.Append(tableStyleConditionalFormattingTableProperties198);
            tableStyleProperties249.Append(tableStyleConditionalFormattingTableCellProperties198);

            style71.Append(styleName71);
            style71.Append(basedOn66);
            style71.Append(uIPriority70);
            style71.Append(rsid67);
            style71.Append(styleParagraphProperties59);
            style71.Append(styleTableProperties41);
            style71.Append(styleTableCellProperties5);
            style71.Append(tableStyleProperties244);
            style71.Append(tableStyleProperties245);
            style71.Append(tableStyleProperties246);
            style71.Append(tableStyleProperties247);
            style71.Append(tableStyleProperties248);
            style71.Append(tableStyleProperties249);

            Style style72 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent5" };
            StyleName styleName72 = new StyleName() { Val = "Grid Table 5 Dark Accent 5" };
            BasedOn basedOn67 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority71 = new UIPriority() { Val = 50 };
            Rsid rsid68 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties60 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines62 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties60.Append(spacingBetweenLines62);

            StyleTableProperties styleTableProperties42 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize39 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize39 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders38 = new TableBorders();
            TopBorder topBorder130 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder81 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder123 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder81 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder96 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder106 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders38.Append(topBorder130);
            tableBorders38.Append(leftBorder81);
            tableBorders38.Append(bottomBorder123);
            tableBorders38.Append(rightBorder81);
            tableBorders38.Append(insideHorizontalBorder96);
            tableBorders38.Append(insideVerticalBorder106);

            styleTableProperties42.Append(tableStyleRowBandSize39);
            styleTableProperties42.Append(tableStyleColumnBandSize39);
            styleTableProperties42.Append(tableBorders38);

            StyleTableCellProperties styleTableCellProperties6 = new StyleTableCellProperties();
            Shading shading140 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            styleTableCellProperties6.Append(shading140);

            TableStyleProperties tableStyleProperties250 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle154 = new RunPropertiesBaseStyle();
            Bold bold142 = new Bold();
            BoldComplexScript boldComplexScript140 = new BoldComplexScript();
            Color color57 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle154.Append(bold142);
            runPropertiesBaseStyle154.Append(boldComplexScript140);
            runPropertiesBaseStyle154.Append(color57);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties199 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties199 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders139 = new TableCellBorders();
            TopBorder topBorder131 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder82 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder82 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder97 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder107 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders139.Append(topBorder131);
            tableCellBorders139.Append(leftBorder82);
            tableCellBorders139.Append(rightBorder82);
            tableCellBorders139.Append(insideHorizontalBorder97);
            tableCellBorders139.Append(insideVerticalBorder107);
            Shading shading141 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties199.Append(tableCellBorders139);
            tableStyleConditionalFormattingTableCellProperties199.Append(shading141);

            tableStyleProperties250.Append(runPropertiesBaseStyle154);
            tableStyleProperties250.Append(tableStyleConditionalFormattingTableProperties199);
            tableStyleProperties250.Append(tableStyleConditionalFormattingTableCellProperties199);

            TableStyleProperties tableStyleProperties251 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle155 = new RunPropertiesBaseStyle();
            Bold bold143 = new Bold();
            BoldComplexScript boldComplexScript141 = new BoldComplexScript();
            Color color58 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle155.Append(bold143);
            runPropertiesBaseStyle155.Append(boldComplexScript141);
            runPropertiesBaseStyle155.Append(color58);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties200 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties200 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders140 = new TableCellBorders();
            LeftBorder leftBorder83 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder124 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder83 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder98 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder108 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders140.Append(leftBorder83);
            tableCellBorders140.Append(bottomBorder124);
            tableCellBorders140.Append(rightBorder83);
            tableCellBorders140.Append(insideHorizontalBorder98);
            tableCellBorders140.Append(insideVerticalBorder108);
            Shading shading142 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties200.Append(tableCellBorders140);
            tableStyleConditionalFormattingTableCellProperties200.Append(shading142);

            tableStyleProperties251.Append(runPropertiesBaseStyle155);
            tableStyleProperties251.Append(tableStyleConditionalFormattingTableProperties200);
            tableStyleProperties251.Append(tableStyleConditionalFormattingTableCellProperties200);

            TableStyleProperties tableStyleProperties252 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle156 = new RunPropertiesBaseStyle();
            Bold bold144 = new Bold();
            BoldComplexScript boldComplexScript142 = new BoldComplexScript();
            Color color59 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle156.Append(bold144);
            runPropertiesBaseStyle156.Append(boldComplexScript142);
            runPropertiesBaseStyle156.Append(color59);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties201 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties201 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders141 = new TableCellBorders();
            TopBorder topBorder132 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder84 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder125 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder109 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders141.Append(topBorder132);
            tableCellBorders141.Append(leftBorder84);
            tableCellBorders141.Append(bottomBorder125);
            tableCellBorders141.Append(insideVerticalBorder109);
            Shading shading143 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties201.Append(tableCellBorders141);
            tableStyleConditionalFormattingTableCellProperties201.Append(shading143);

            tableStyleProperties252.Append(runPropertiesBaseStyle156);
            tableStyleProperties252.Append(tableStyleConditionalFormattingTableProperties201);
            tableStyleProperties252.Append(tableStyleConditionalFormattingTableCellProperties201);

            TableStyleProperties tableStyleProperties253 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle157 = new RunPropertiesBaseStyle();
            Bold bold145 = new Bold();
            BoldComplexScript boldComplexScript143 = new BoldComplexScript();
            Color color60 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle157.Append(bold145);
            runPropertiesBaseStyle157.Append(boldComplexScript143);
            runPropertiesBaseStyle157.Append(color60);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties202 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties202 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders142 = new TableCellBorders();
            TopBorder topBorder133 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder126 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder84 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder110 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders142.Append(topBorder133);
            tableCellBorders142.Append(bottomBorder126);
            tableCellBorders142.Append(rightBorder84);
            tableCellBorders142.Append(insideVerticalBorder110);
            Shading shading144 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties202.Append(tableCellBorders142);
            tableStyleConditionalFormattingTableCellProperties202.Append(shading144);

            tableStyleProperties253.Append(runPropertiesBaseStyle157);
            tableStyleProperties253.Append(tableStyleConditionalFormattingTableProperties202);
            tableStyleProperties253.Append(tableStyleConditionalFormattingTableCellProperties202);

            TableStyleProperties tableStyleProperties254 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties203 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties203 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading145 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "B4C6E7", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties203.Append(shading145);

            tableStyleProperties254.Append(tableStyleConditionalFormattingTableProperties203);
            tableStyleProperties254.Append(tableStyleConditionalFormattingTableCellProperties203);

            TableStyleProperties tableStyleProperties255 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties204 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties204 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading146 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "B4C6E7", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties204.Append(shading146);

            tableStyleProperties255.Append(tableStyleConditionalFormattingTableProperties204);
            tableStyleProperties255.Append(tableStyleConditionalFormattingTableCellProperties204);

            style72.Append(styleName72);
            style72.Append(basedOn67);
            style72.Append(uIPriority71);
            style72.Append(rsid68);
            style72.Append(styleParagraphProperties60);
            style72.Append(styleTableProperties42);
            style72.Append(styleTableCellProperties6);
            style72.Append(tableStyleProperties250);
            style72.Append(tableStyleProperties251);
            style72.Append(tableStyleProperties252);
            style72.Append(tableStyleProperties253);
            style72.Append(tableStyleProperties254);
            style72.Append(tableStyleProperties255);

            Style style73 = new Style() { Type = StyleValues.Table, StyleId = "GridTable5Dark-Accent6" };
            StyleName styleName73 = new StyleName() { Val = "Grid Table 5 Dark Accent 6" };
            BasedOn basedOn68 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority72 = new UIPriority() { Val = 50 };
            Rsid rsid69 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties61 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines63 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties61.Append(spacingBetweenLines63);

            StyleTableProperties styleTableProperties43 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize40 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize40 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders39 = new TableBorders();
            TopBorder topBorder134 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder85 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder127 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder85 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder99 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder111 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders39.Append(topBorder134);
            tableBorders39.Append(leftBorder85);
            tableBorders39.Append(bottomBorder127);
            tableBorders39.Append(rightBorder85);
            tableBorders39.Append(insideHorizontalBorder99);
            tableBorders39.Append(insideVerticalBorder111);

            styleTableProperties43.Append(tableStyleRowBandSize40);
            styleTableProperties43.Append(tableStyleColumnBandSize40);
            styleTableProperties43.Append(tableBorders39);

            StyleTableCellProperties styleTableCellProperties7 = new StyleTableCellProperties();
            Shading shading147 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            styleTableCellProperties7.Append(shading147);

            TableStyleProperties tableStyleProperties256 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle158 = new RunPropertiesBaseStyle();
            Bold bold146 = new Bold();
            BoldComplexScript boldComplexScript144 = new BoldComplexScript();
            Color color61 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle158.Append(bold146);
            runPropertiesBaseStyle158.Append(boldComplexScript144);
            runPropertiesBaseStyle158.Append(color61);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties205 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties205 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders143 = new TableCellBorders();
            TopBorder topBorder135 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder86 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder86 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder100 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder112 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders143.Append(topBorder135);
            tableCellBorders143.Append(leftBorder86);
            tableCellBorders143.Append(rightBorder86);
            tableCellBorders143.Append(insideHorizontalBorder100);
            tableCellBorders143.Append(insideVerticalBorder112);
            Shading shading148 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties205.Append(tableCellBorders143);
            tableStyleConditionalFormattingTableCellProperties205.Append(shading148);

            tableStyleProperties256.Append(runPropertiesBaseStyle158);
            tableStyleProperties256.Append(tableStyleConditionalFormattingTableProperties205);
            tableStyleProperties256.Append(tableStyleConditionalFormattingTableCellProperties205);

            TableStyleProperties tableStyleProperties257 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle159 = new RunPropertiesBaseStyle();
            Bold bold147 = new Bold();
            BoldComplexScript boldComplexScript145 = new BoldComplexScript();
            Color color62 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle159.Append(bold147);
            runPropertiesBaseStyle159.Append(boldComplexScript145);
            runPropertiesBaseStyle159.Append(color62);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties206 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties206 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders144 = new TableCellBorders();
            LeftBorder leftBorder87 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder128 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder87 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder101 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder113 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders144.Append(leftBorder87);
            tableCellBorders144.Append(bottomBorder128);
            tableCellBorders144.Append(rightBorder87);
            tableCellBorders144.Append(insideHorizontalBorder101);
            tableCellBorders144.Append(insideVerticalBorder113);
            Shading shading149 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties206.Append(tableCellBorders144);
            tableStyleConditionalFormattingTableCellProperties206.Append(shading149);

            tableStyleProperties257.Append(runPropertiesBaseStyle159);
            tableStyleProperties257.Append(tableStyleConditionalFormattingTableProperties206);
            tableStyleProperties257.Append(tableStyleConditionalFormattingTableCellProperties206);

            TableStyleProperties tableStyleProperties258 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle160 = new RunPropertiesBaseStyle();
            Bold bold148 = new Bold();
            BoldComplexScript boldComplexScript146 = new BoldComplexScript();
            Color color63 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle160.Append(bold148);
            runPropertiesBaseStyle160.Append(boldComplexScript146);
            runPropertiesBaseStyle160.Append(color63);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties207 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties207 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders145 = new TableCellBorders();
            TopBorder topBorder136 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder88 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder129 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder114 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders145.Append(topBorder136);
            tableCellBorders145.Append(leftBorder88);
            tableCellBorders145.Append(bottomBorder129);
            tableCellBorders145.Append(insideVerticalBorder114);
            Shading shading150 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties207.Append(tableCellBorders145);
            tableStyleConditionalFormattingTableCellProperties207.Append(shading150);

            tableStyleProperties258.Append(runPropertiesBaseStyle160);
            tableStyleProperties258.Append(tableStyleConditionalFormattingTableProperties207);
            tableStyleProperties258.Append(tableStyleConditionalFormattingTableCellProperties207);

            TableStyleProperties tableStyleProperties259 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle161 = new RunPropertiesBaseStyle();
            Bold bold149 = new Bold();
            BoldComplexScript boldComplexScript147 = new BoldComplexScript();
            Color color64 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle161.Append(bold149);
            runPropertiesBaseStyle161.Append(boldComplexScript147);
            runPropertiesBaseStyle161.Append(color64);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties208 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties208 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders146 = new TableCellBorders();
            TopBorder topBorder137 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder130 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder88 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder115 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders146.Append(topBorder137);
            tableCellBorders146.Append(bottomBorder130);
            tableCellBorders146.Append(rightBorder88);
            tableCellBorders146.Append(insideVerticalBorder115);
            Shading shading151 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties208.Append(tableCellBorders146);
            tableStyleConditionalFormattingTableCellProperties208.Append(shading151);

            tableStyleProperties259.Append(runPropertiesBaseStyle161);
            tableStyleProperties259.Append(tableStyleConditionalFormattingTableProperties208);
            tableStyleProperties259.Append(tableStyleConditionalFormattingTableCellProperties208);

            TableStyleProperties tableStyleProperties260 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties209 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties209 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading152 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "C5E0B3", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties209.Append(shading152);

            tableStyleProperties260.Append(tableStyleConditionalFormattingTableProperties209);
            tableStyleProperties260.Append(tableStyleConditionalFormattingTableCellProperties209);

            TableStyleProperties tableStyleProperties261 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties210 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties210 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading153 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "C5E0B3", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "66" };

            tableStyleConditionalFormattingTableCellProperties210.Append(shading153);

            tableStyleProperties261.Append(tableStyleConditionalFormattingTableProperties210);
            tableStyleProperties261.Append(tableStyleConditionalFormattingTableCellProperties210);

            style73.Append(styleName73);
            style73.Append(basedOn68);
            style73.Append(uIPriority72);
            style73.Append(rsid69);
            style73.Append(styleParagraphProperties61);
            style73.Append(styleTableProperties43);
            style73.Append(styleTableCellProperties7);
            style73.Append(tableStyleProperties256);
            style73.Append(tableStyleProperties257);
            style73.Append(tableStyleProperties258);
            style73.Append(tableStyleProperties259);
            style73.Append(tableStyleProperties260);
            style73.Append(tableStyleProperties261);

            Style style74 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful" };
            StyleName styleName74 = new StyleName() { Val = "Grid Table 6 Colorful" };
            BasedOn basedOn69 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority73 = new UIPriority() { Val = 51 };
            Rsid rsid70 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties62 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines64 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties62.Append(spacingBetweenLines64);

            StyleRunProperties styleRunProperties26 = new StyleRunProperties();
            Color color65 = new Color() { Val = "000000", ThemeColor = ThemeColorValues.Text1 };

            styleRunProperties26.Append(color65);

            StyleTableProperties styleTableProperties44 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize41 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize41 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders40 = new TableBorders();
            TopBorder topBorder138 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder89 = new LeftBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder131 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder89 = new RightBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder102 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder116 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders40.Append(topBorder138);
            tableBorders40.Append(leftBorder89);
            tableBorders40.Append(bottomBorder131);
            tableBorders40.Append(rightBorder89);
            tableBorders40.Append(insideHorizontalBorder102);
            tableBorders40.Append(insideVerticalBorder116);

            styleTableProperties44.Append(tableStyleRowBandSize41);
            styleTableProperties44.Append(tableStyleColumnBandSize41);
            styleTableProperties44.Append(tableBorders40);

            TableStyleProperties tableStyleProperties262 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle162 = new RunPropertiesBaseStyle();
            Bold bold150 = new Bold();
            BoldComplexScript boldComplexScript148 = new BoldComplexScript();

            runPropertiesBaseStyle162.Append(bold150);
            runPropertiesBaseStyle162.Append(boldComplexScript148);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties211 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties211 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders147 = new TableCellBorders();
            BottomBorder bottomBorder132 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders147.Append(bottomBorder132);

            tableStyleConditionalFormattingTableCellProperties211.Append(tableCellBorders147);

            tableStyleProperties262.Append(runPropertiesBaseStyle162);
            tableStyleProperties262.Append(tableStyleConditionalFormattingTableProperties211);
            tableStyleProperties262.Append(tableStyleConditionalFormattingTableCellProperties211);

            TableStyleProperties tableStyleProperties263 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle163 = new RunPropertiesBaseStyle();
            Bold bold151 = new Bold();
            BoldComplexScript boldComplexScript149 = new BoldComplexScript();

            runPropertiesBaseStyle163.Append(bold151);
            runPropertiesBaseStyle163.Append(boldComplexScript149);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties212 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties212 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders148 = new TableCellBorders();
            TopBorder topBorder139 = new TopBorder() { Val = BorderValues.Double, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders148.Append(topBorder139);

            tableStyleConditionalFormattingTableCellProperties212.Append(tableCellBorders148);

            tableStyleProperties263.Append(runPropertiesBaseStyle163);
            tableStyleProperties263.Append(tableStyleConditionalFormattingTableProperties212);
            tableStyleProperties263.Append(tableStyleConditionalFormattingTableCellProperties212);

            TableStyleProperties tableStyleProperties264 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle164 = new RunPropertiesBaseStyle();
            Bold bold152 = new Bold();
            BoldComplexScript boldComplexScript150 = new BoldComplexScript();

            runPropertiesBaseStyle164.Append(bold152);
            runPropertiesBaseStyle164.Append(boldComplexScript150);

            tableStyleProperties264.Append(runPropertiesBaseStyle164);

            TableStyleProperties tableStyleProperties265 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle165 = new RunPropertiesBaseStyle();
            Bold bold153 = new Bold();
            BoldComplexScript boldComplexScript151 = new BoldComplexScript();

            runPropertiesBaseStyle165.Append(bold153);
            runPropertiesBaseStyle165.Append(boldComplexScript151);

            tableStyleProperties265.Append(runPropertiesBaseStyle165);

            TableStyleProperties tableStyleProperties266 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties213 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties213 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading154 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties213.Append(shading154);

            tableStyleProperties266.Append(tableStyleConditionalFormattingTableProperties213);
            tableStyleProperties266.Append(tableStyleConditionalFormattingTableCellProperties213);

            TableStyleProperties tableStyleProperties267 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties214 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties214 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading155 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties214.Append(shading155);

            tableStyleProperties267.Append(tableStyleConditionalFormattingTableProperties214);
            tableStyleProperties267.Append(tableStyleConditionalFormattingTableCellProperties214);

            style74.Append(styleName74);
            style74.Append(basedOn69);
            style74.Append(uIPriority73);
            style74.Append(rsid70);
            style74.Append(styleParagraphProperties62);
            style74.Append(styleRunProperties26);
            style74.Append(styleTableProperties44);
            style74.Append(tableStyleProperties262);
            style74.Append(tableStyleProperties263);
            style74.Append(tableStyleProperties264);
            style74.Append(tableStyleProperties265);
            style74.Append(tableStyleProperties266);
            style74.Append(tableStyleProperties267);

            Style style75 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent1" };
            StyleName styleName75 = new StyleName() { Val = "Grid Table 6 Colorful Accent 1" };
            BasedOn basedOn70 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority74 = new UIPriority() { Val = 51 };
            Rsid rsid71 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties63 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines65 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties63.Append(spacingBetweenLines65);

            StyleRunProperties styleRunProperties27 = new StyleRunProperties();
            Color color66 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties27.Append(color66);

            StyleTableProperties styleTableProperties45 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize42 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize42 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders41 = new TableBorders();
            TopBorder topBorder140 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder90 = new LeftBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder133 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder90 = new RightBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder103 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder117 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders41.Append(topBorder140);
            tableBorders41.Append(leftBorder90);
            tableBorders41.Append(bottomBorder133);
            tableBorders41.Append(rightBorder90);
            tableBorders41.Append(insideHorizontalBorder103);
            tableBorders41.Append(insideVerticalBorder117);

            styleTableProperties45.Append(tableStyleRowBandSize42);
            styleTableProperties45.Append(tableStyleColumnBandSize42);
            styleTableProperties45.Append(tableBorders41);

            TableStyleProperties tableStyleProperties268 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle166 = new RunPropertiesBaseStyle();
            Bold bold154 = new Bold();
            BoldComplexScript boldComplexScript152 = new BoldComplexScript();

            runPropertiesBaseStyle166.Append(bold154);
            runPropertiesBaseStyle166.Append(boldComplexScript152);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties215 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties215 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders149 = new TableCellBorders();
            BottomBorder bottomBorder134 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders149.Append(bottomBorder134);

            tableStyleConditionalFormattingTableCellProperties215.Append(tableCellBorders149);

            tableStyleProperties268.Append(runPropertiesBaseStyle166);
            tableStyleProperties268.Append(tableStyleConditionalFormattingTableProperties215);
            tableStyleProperties268.Append(tableStyleConditionalFormattingTableCellProperties215);

            TableStyleProperties tableStyleProperties269 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle167 = new RunPropertiesBaseStyle();
            Bold bold155 = new Bold();
            BoldComplexScript boldComplexScript153 = new BoldComplexScript();

            runPropertiesBaseStyle167.Append(bold155);
            runPropertiesBaseStyle167.Append(boldComplexScript153);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties216 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties216 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders150 = new TableCellBorders();
            TopBorder topBorder141 = new TopBorder() { Val = BorderValues.Double, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders150.Append(topBorder141);

            tableStyleConditionalFormattingTableCellProperties216.Append(tableCellBorders150);

            tableStyleProperties269.Append(runPropertiesBaseStyle167);
            tableStyleProperties269.Append(tableStyleConditionalFormattingTableProperties216);
            tableStyleProperties269.Append(tableStyleConditionalFormattingTableCellProperties216);

            TableStyleProperties tableStyleProperties270 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle168 = new RunPropertiesBaseStyle();
            Bold bold156 = new Bold();
            BoldComplexScript boldComplexScript154 = new BoldComplexScript();

            runPropertiesBaseStyle168.Append(bold156);
            runPropertiesBaseStyle168.Append(boldComplexScript154);

            tableStyleProperties270.Append(runPropertiesBaseStyle168);

            TableStyleProperties tableStyleProperties271 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle169 = new RunPropertiesBaseStyle();
            Bold bold157 = new Bold();
            BoldComplexScript boldComplexScript155 = new BoldComplexScript();

            runPropertiesBaseStyle169.Append(bold157);
            runPropertiesBaseStyle169.Append(boldComplexScript155);

            tableStyleProperties271.Append(runPropertiesBaseStyle169);

            TableStyleProperties tableStyleProperties272 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties217 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties217 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading156 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties217.Append(shading156);

            tableStyleProperties272.Append(tableStyleConditionalFormattingTableProperties217);
            tableStyleProperties272.Append(tableStyleConditionalFormattingTableCellProperties217);

            TableStyleProperties tableStyleProperties273 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties218 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties218 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading157 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties218.Append(shading157);

            tableStyleProperties273.Append(tableStyleConditionalFormattingTableProperties218);
            tableStyleProperties273.Append(tableStyleConditionalFormattingTableCellProperties218);

            style75.Append(styleName75);
            style75.Append(basedOn70);
            style75.Append(uIPriority74);
            style75.Append(rsid71);
            style75.Append(styleParagraphProperties63);
            style75.Append(styleRunProperties27);
            style75.Append(styleTableProperties45);
            style75.Append(tableStyleProperties268);
            style75.Append(tableStyleProperties269);
            style75.Append(tableStyleProperties270);
            style75.Append(tableStyleProperties271);
            style75.Append(tableStyleProperties272);
            style75.Append(tableStyleProperties273);

            Style style76 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent6" };
            StyleName styleName76 = new StyleName() { Val = "Grid Table 6 Colorful Accent 6" };
            BasedOn basedOn71 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority75 = new UIPriority() { Val = 51 };
            Rsid rsid72 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties64 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines66 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties64.Append(spacingBetweenLines66);

            StyleRunProperties styleRunProperties28 = new StyleRunProperties();
            Color color67 = new Color() { Val = "538135", ThemeColor = ThemeColorValues.Accent6, ThemeShade = "BF" };

            styleRunProperties28.Append(color67);

            StyleTableProperties styleTableProperties46 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize43 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize43 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders42 = new TableBorders();
            TopBorder topBorder142 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder91 = new LeftBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder135 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder91 = new RightBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder104 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder118 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders42.Append(topBorder142);
            tableBorders42.Append(leftBorder91);
            tableBorders42.Append(bottomBorder135);
            tableBorders42.Append(rightBorder91);
            tableBorders42.Append(insideHorizontalBorder104);
            tableBorders42.Append(insideVerticalBorder118);

            styleTableProperties46.Append(tableStyleRowBandSize43);
            styleTableProperties46.Append(tableStyleColumnBandSize43);
            styleTableProperties46.Append(tableBorders42);

            TableStyleProperties tableStyleProperties274 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle170 = new RunPropertiesBaseStyle();
            Bold bold158 = new Bold();
            BoldComplexScript boldComplexScript156 = new BoldComplexScript();

            runPropertiesBaseStyle170.Append(bold158);
            runPropertiesBaseStyle170.Append(boldComplexScript156);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties219 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties219 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders151 = new TableCellBorders();
            BottomBorder bottomBorder136 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders151.Append(bottomBorder136);

            tableStyleConditionalFormattingTableCellProperties219.Append(tableCellBorders151);

            tableStyleProperties274.Append(runPropertiesBaseStyle170);
            tableStyleProperties274.Append(tableStyleConditionalFormattingTableProperties219);
            tableStyleProperties274.Append(tableStyleConditionalFormattingTableCellProperties219);

            TableStyleProperties tableStyleProperties275 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle171 = new RunPropertiesBaseStyle();
            Bold bold159 = new Bold();
            BoldComplexScript boldComplexScript157 = new BoldComplexScript();

            runPropertiesBaseStyle171.Append(bold159);
            runPropertiesBaseStyle171.Append(boldComplexScript157);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties220 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties220 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders152 = new TableCellBorders();
            TopBorder topBorder143 = new TopBorder() { Val = BorderValues.Double, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders152.Append(topBorder143);

            tableStyleConditionalFormattingTableCellProperties220.Append(tableCellBorders152);

            tableStyleProperties275.Append(runPropertiesBaseStyle171);
            tableStyleProperties275.Append(tableStyleConditionalFormattingTableProperties220);
            tableStyleProperties275.Append(tableStyleConditionalFormattingTableCellProperties220);

            TableStyleProperties tableStyleProperties276 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle172 = new RunPropertiesBaseStyle();
            Bold bold160 = new Bold();
            BoldComplexScript boldComplexScript158 = new BoldComplexScript();

            runPropertiesBaseStyle172.Append(bold160);
            runPropertiesBaseStyle172.Append(boldComplexScript158);

            tableStyleProperties276.Append(runPropertiesBaseStyle172);

            TableStyleProperties tableStyleProperties277 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle173 = new RunPropertiesBaseStyle();
            Bold bold161 = new Bold();
            BoldComplexScript boldComplexScript159 = new BoldComplexScript();

            runPropertiesBaseStyle173.Append(bold161);
            runPropertiesBaseStyle173.Append(boldComplexScript159);

            tableStyleProperties277.Append(runPropertiesBaseStyle173);

            TableStyleProperties tableStyleProperties278 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties221 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties221 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading158 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties221.Append(shading158);

            tableStyleProperties278.Append(tableStyleConditionalFormattingTableProperties221);
            tableStyleProperties278.Append(tableStyleConditionalFormattingTableCellProperties221);

            TableStyleProperties tableStyleProperties279 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties222 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties222 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading159 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties222.Append(shading159);

            tableStyleProperties279.Append(tableStyleConditionalFormattingTableProperties222);
            tableStyleProperties279.Append(tableStyleConditionalFormattingTableCellProperties222);

            style76.Append(styleName76);
            style76.Append(basedOn71);
            style76.Append(uIPriority75);
            style76.Append(rsid72);
            style76.Append(styleParagraphProperties64);
            style76.Append(styleRunProperties28);
            style76.Append(styleTableProperties46);
            style76.Append(tableStyleProperties274);
            style76.Append(tableStyleProperties275);
            style76.Append(tableStyleProperties276);
            style76.Append(tableStyleProperties277);
            style76.Append(tableStyleProperties278);
            style76.Append(tableStyleProperties279);

            Style style77 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent5" };
            StyleName styleName77 = new StyleName() { Val = "Grid Table 6 Colorful Accent 5" };
            BasedOn basedOn72 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority76 = new UIPriority() { Val = 51 };
            Rsid rsid73 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties65 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines67 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties65.Append(spacingBetweenLines67);

            StyleRunProperties styleRunProperties29 = new StyleRunProperties();
            Color color68 = new Color() { Val = "2F5496", ThemeColor = ThemeColorValues.Accent5, ThemeShade = "BF" };

            styleRunProperties29.Append(color68);

            StyleTableProperties styleTableProperties47 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize44 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize44 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders43 = new TableBorders();
            TopBorder topBorder144 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder92 = new LeftBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder137 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder92 = new RightBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder105 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder119 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders43.Append(topBorder144);
            tableBorders43.Append(leftBorder92);
            tableBorders43.Append(bottomBorder137);
            tableBorders43.Append(rightBorder92);
            tableBorders43.Append(insideHorizontalBorder105);
            tableBorders43.Append(insideVerticalBorder119);

            styleTableProperties47.Append(tableStyleRowBandSize44);
            styleTableProperties47.Append(tableStyleColumnBandSize44);
            styleTableProperties47.Append(tableBorders43);

            TableStyleProperties tableStyleProperties280 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle174 = new RunPropertiesBaseStyle();
            Bold bold162 = new Bold();
            BoldComplexScript boldComplexScript160 = new BoldComplexScript();

            runPropertiesBaseStyle174.Append(bold162);
            runPropertiesBaseStyle174.Append(boldComplexScript160);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties223 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties223 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders153 = new TableCellBorders();
            BottomBorder bottomBorder138 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders153.Append(bottomBorder138);

            tableStyleConditionalFormattingTableCellProperties223.Append(tableCellBorders153);

            tableStyleProperties280.Append(runPropertiesBaseStyle174);
            tableStyleProperties280.Append(tableStyleConditionalFormattingTableProperties223);
            tableStyleProperties280.Append(tableStyleConditionalFormattingTableCellProperties223);

            TableStyleProperties tableStyleProperties281 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle175 = new RunPropertiesBaseStyle();
            Bold bold163 = new Bold();
            BoldComplexScript boldComplexScript161 = new BoldComplexScript();

            runPropertiesBaseStyle175.Append(bold163);
            runPropertiesBaseStyle175.Append(boldComplexScript161);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties224 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties224 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders154 = new TableCellBorders();
            TopBorder topBorder145 = new TopBorder() { Val = BorderValues.Double, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders154.Append(topBorder145);

            tableStyleConditionalFormattingTableCellProperties224.Append(tableCellBorders154);

            tableStyleProperties281.Append(runPropertiesBaseStyle175);
            tableStyleProperties281.Append(tableStyleConditionalFormattingTableProperties224);
            tableStyleProperties281.Append(tableStyleConditionalFormattingTableCellProperties224);

            TableStyleProperties tableStyleProperties282 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle176 = new RunPropertiesBaseStyle();
            Bold bold164 = new Bold();
            BoldComplexScript boldComplexScript162 = new BoldComplexScript();

            runPropertiesBaseStyle176.Append(bold164);
            runPropertiesBaseStyle176.Append(boldComplexScript162);

            tableStyleProperties282.Append(runPropertiesBaseStyle176);

            TableStyleProperties tableStyleProperties283 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle177 = new RunPropertiesBaseStyle();
            Bold bold165 = new Bold();
            BoldComplexScript boldComplexScript163 = new BoldComplexScript();

            runPropertiesBaseStyle177.Append(bold165);
            runPropertiesBaseStyle177.Append(boldComplexScript163);

            tableStyleProperties283.Append(runPropertiesBaseStyle177);

            TableStyleProperties tableStyleProperties284 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties225 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties225 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading160 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties225.Append(shading160);

            tableStyleProperties284.Append(tableStyleConditionalFormattingTableProperties225);
            tableStyleProperties284.Append(tableStyleConditionalFormattingTableCellProperties225);

            TableStyleProperties tableStyleProperties285 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties226 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties226 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading161 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties226.Append(shading161);

            tableStyleProperties285.Append(tableStyleConditionalFormattingTableProperties226);
            tableStyleProperties285.Append(tableStyleConditionalFormattingTableCellProperties226);

            style77.Append(styleName77);
            style77.Append(basedOn72);
            style77.Append(uIPriority76);
            style77.Append(rsid73);
            style77.Append(styleParagraphProperties65);
            style77.Append(styleRunProperties29);
            style77.Append(styleTableProperties47);
            style77.Append(tableStyleProperties280);
            style77.Append(tableStyleProperties281);
            style77.Append(tableStyleProperties282);
            style77.Append(tableStyleProperties283);
            style77.Append(tableStyleProperties284);
            style77.Append(tableStyleProperties285);

            Style style78 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent4" };
            StyleName styleName78 = new StyleName() { Val = "Grid Table 6 Colorful Accent 4" };
            BasedOn basedOn73 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority77 = new UIPriority() { Val = 51 };
            Rsid rsid74 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties66 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines68 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties66.Append(spacingBetweenLines68);

            StyleRunProperties styleRunProperties30 = new StyleRunProperties();
            Color color69 = new Color() { Val = "BF8F00", ThemeColor = ThemeColorValues.Accent4, ThemeShade = "BF" };

            styleRunProperties30.Append(color69);

            StyleTableProperties styleTableProperties48 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize45 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize45 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders44 = new TableBorders();
            TopBorder topBorder146 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder93 = new LeftBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder139 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder93 = new RightBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder106 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder120 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders44.Append(topBorder146);
            tableBorders44.Append(leftBorder93);
            tableBorders44.Append(bottomBorder139);
            tableBorders44.Append(rightBorder93);
            tableBorders44.Append(insideHorizontalBorder106);
            tableBorders44.Append(insideVerticalBorder120);

            styleTableProperties48.Append(tableStyleRowBandSize45);
            styleTableProperties48.Append(tableStyleColumnBandSize45);
            styleTableProperties48.Append(tableBorders44);

            TableStyleProperties tableStyleProperties286 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle178 = new RunPropertiesBaseStyle();
            Bold bold166 = new Bold();
            BoldComplexScript boldComplexScript164 = new BoldComplexScript();

            runPropertiesBaseStyle178.Append(bold166);
            runPropertiesBaseStyle178.Append(boldComplexScript164);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties227 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties227 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders155 = new TableCellBorders();
            BottomBorder bottomBorder140 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders155.Append(bottomBorder140);

            tableStyleConditionalFormattingTableCellProperties227.Append(tableCellBorders155);

            tableStyleProperties286.Append(runPropertiesBaseStyle178);
            tableStyleProperties286.Append(tableStyleConditionalFormattingTableProperties227);
            tableStyleProperties286.Append(tableStyleConditionalFormattingTableCellProperties227);

            TableStyleProperties tableStyleProperties287 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle179 = new RunPropertiesBaseStyle();
            Bold bold167 = new Bold();
            BoldComplexScript boldComplexScript165 = new BoldComplexScript();

            runPropertiesBaseStyle179.Append(bold167);
            runPropertiesBaseStyle179.Append(boldComplexScript165);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties228 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties228 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders156 = new TableCellBorders();
            TopBorder topBorder147 = new TopBorder() { Val = BorderValues.Double, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders156.Append(topBorder147);

            tableStyleConditionalFormattingTableCellProperties228.Append(tableCellBorders156);

            tableStyleProperties287.Append(runPropertiesBaseStyle179);
            tableStyleProperties287.Append(tableStyleConditionalFormattingTableProperties228);
            tableStyleProperties287.Append(tableStyleConditionalFormattingTableCellProperties228);

            TableStyleProperties tableStyleProperties288 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle180 = new RunPropertiesBaseStyle();
            Bold bold168 = new Bold();
            BoldComplexScript boldComplexScript166 = new BoldComplexScript();

            runPropertiesBaseStyle180.Append(bold168);
            runPropertiesBaseStyle180.Append(boldComplexScript166);

            tableStyleProperties288.Append(runPropertiesBaseStyle180);

            TableStyleProperties tableStyleProperties289 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle181 = new RunPropertiesBaseStyle();
            Bold bold169 = new Bold();
            BoldComplexScript boldComplexScript167 = new BoldComplexScript();

            runPropertiesBaseStyle181.Append(bold169);
            runPropertiesBaseStyle181.Append(boldComplexScript167);

            tableStyleProperties289.Append(runPropertiesBaseStyle181);

            TableStyleProperties tableStyleProperties290 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties229 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties229 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading162 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties229.Append(shading162);

            tableStyleProperties290.Append(tableStyleConditionalFormattingTableProperties229);
            tableStyleProperties290.Append(tableStyleConditionalFormattingTableCellProperties229);

            TableStyleProperties tableStyleProperties291 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties230 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties230 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading163 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties230.Append(shading163);

            tableStyleProperties291.Append(tableStyleConditionalFormattingTableProperties230);
            tableStyleProperties291.Append(tableStyleConditionalFormattingTableCellProperties230);

            style78.Append(styleName78);
            style78.Append(basedOn73);
            style78.Append(uIPriority77);
            style78.Append(rsid74);
            style78.Append(styleParagraphProperties66);
            style78.Append(styleRunProperties30);
            style78.Append(styleTableProperties48);
            style78.Append(tableStyleProperties286);
            style78.Append(tableStyleProperties287);
            style78.Append(tableStyleProperties288);
            style78.Append(tableStyleProperties289);
            style78.Append(tableStyleProperties290);
            style78.Append(tableStyleProperties291);

            Style style79 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent3" };
            StyleName styleName79 = new StyleName() { Val = "Grid Table 6 Colorful Accent 3" };
            BasedOn basedOn74 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority78 = new UIPriority() { Val = 51 };
            Rsid rsid75 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties67 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines69 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties67.Append(spacingBetweenLines69);

            StyleRunProperties styleRunProperties31 = new StyleRunProperties();
            Color color70 = new Color() { Val = "7B7B7B", ThemeColor = ThemeColorValues.Accent3, ThemeShade = "BF" };

            styleRunProperties31.Append(color70);

            StyleTableProperties styleTableProperties49 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize46 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize46 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders45 = new TableBorders();
            TopBorder topBorder148 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder94 = new LeftBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder141 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder94 = new RightBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder107 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder121 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders45.Append(topBorder148);
            tableBorders45.Append(leftBorder94);
            tableBorders45.Append(bottomBorder141);
            tableBorders45.Append(rightBorder94);
            tableBorders45.Append(insideHorizontalBorder107);
            tableBorders45.Append(insideVerticalBorder121);

            styleTableProperties49.Append(tableStyleRowBandSize46);
            styleTableProperties49.Append(tableStyleColumnBandSize46);
            styleTableProperties49.Append(tableBorders45);

            TableStyleProperties tableStyleProperties292 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle182 = new RunPropertiesBaseStyle();
            Bold bold170 = new Bold();
            BoldComplexScript boldComplexScript168 = new BoldComplexScript();

            runPropertiesBaseStyle182.Append(bold170);
            runPropertiesBaseStyle182.Append(boldComplexScript168);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties231 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties231 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders157 = new TableCellBorders();
            BottomBorder bottomBorder142 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders157.Append(bottomBorder142);

            tableStyleConditionalFormattingTableCellProperties231.Append(tableCellBorders157);

            tableStyleProperties292.Append(runPropertiesBaseStyle182);
            tableStyleProperties292.Append(tableStyleConditionalFormattingTableProperties231);
            tableStyleProperties292.Append(tableStyleConditionalFormattingTableCellProperties231);

            TableStyleProperties tableStyleProperties293 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle183 = new RunPropertiesBaseStyle();
            Bold bold171 = new Bold();
            BoldComplexScript boldComplexScript169 = new BoldComplexScript();

            runPropertiesBaseStyle183.Append(bold171);
            runPropertiesBaseStyle183.Append(boldComplexScript169);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties232 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties232 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders158 = new TableCellBorders();
            TopBorder topBorder149 = new TopBorder() { Val = BorderValues.Double, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders158.Append(topBorder149);

            tableStyleConditionalFormattingTableCellProperties232.Append(tableCellBorders158);

            tableStyleProperties293.Append(runPropertiesBaseStyle183);
            tableStyleProperties293.Append(tableStyleConditionalFormattingTableProperties232);
            tableStyleProperties293.Append(tableStyleConditionalFormattingTableCellProperties232);

            TableStyleProperties tableStyleProperties294 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle184 = new RunPropertiesBaseStyle();
            Bold bold172 = new Bold();
            BoldComplexScript boldComplexScript170 = new BoldComplexScript();

            runPropertiesBaseStyle184.Append(bold172);
            runPropertiesBaseStyle184.Append(boldComplexScript170);

            tableStyleProperties294.Append(runPropertiesBaseStyle184);

            TableStyleProperties tableStyleProperties295 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle185 = new RunPropertiesBaseStyle();
            Bold bold173 = new Bold();
            BoldComplexScript boldComplexScript171 = new BoldComplexScript();

            runPropertiesBaseStyle185.Append(bold173);
            runPropertiesBaseStyle185.Append(boldComplexScript171);

            tableStyleProperties295.Append(runPropertiesBaseStyle185);

            TableStyleProperties tableStyleProperties296 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties233 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties233 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading164 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties233.Append(shading164);

            tableStyleProperties296.Append(tableStyleConditionalFormattingTableProperties233);
            tableStyleProperties296.Append(tableStyleConditionalFormattingTableCellProperties233);

            TableStyleProperties tableStyleProperties297 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties234 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties234 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading165 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties234.Append(shading165);

            tableStyleProperties297.Append(tableStyleConditionalFormattingTableProperties234);
            tableStyleProperties297.Append(tableStyleConditionalFormattingTableCellProperties234);

            style79.Append(styleName79);
            style79.Append(basedOn74);
            style79.Append(uIPriority78);
            style79.Append(rsid75);
            style79.Append(styleParagraphProperties67);
            style79.Append(styleRunProperties31);
            style79.Append(styleTableProperties49);
            style79.Append(tableStyleProperties292);
            style79.Append(tableStyleProperties293);
            style79.Append(tableStyleProperties294);
            style79.Append(tableStyleProperties295);
            style79.Append(tableStyleProperties296);
            style79.Append(tableStyleProperties297);

            Style style80 = new Style() { Type = StyleValues.Table, StyleId = "GridTable6Colorful-Accent2" };
            StyleName styleName80 = new StyleName() { Val = "Grid Table 6 Colorful Accent 2" };
            BasedOn basedOn75 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority79 = new UIPriority() { Val = 51 };
            Rsid rsid76 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties68 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines70 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties68.Append(spacingBetweenLines70);

            StyleRunProperties styleRunProperties32 = new StyleRunProperties();
            Color color71 = new Color() { Val = "C45911", ThemeColor = ThemeColorValues.Accent2, ThemeShade = "BF" };

            styleRunProperties32.Append(color71);

            StyleTableProperties styleTableProperties50 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize47 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize47 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders46 = new TableBorders();
            TopBorder topBorder150 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder95 = new LeftBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder143 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder95 = new RightBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder108 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder122 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders46.Append(topBorder150);
            tableBorders46.Append(leftBorder95);
            tableBorders46.Append(bottomBorder143);
            tableBorders46.Append(rightBorder95);
            tableBorders46.Append(insideHorizontalBorder108);
            tableBorders46.Append(insideVerticalBorder122);

            styleTableProperties50.Append(tableStyleRowBandSize47);
            styleTableProperties50.Append(tableStyleColumnBandSize47);
            styleTableProperties50.Append(tableBorders46);

            TableStyleProperties tableStyleProperties298 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle186 = new RunPropertiesBaseStyle();
            Bold bold174 = new Bold();
            BoldComplexScript boldComplexScript172 = new BoldComplexScript();

            runPropertiesBaseStyle186.Append(bold174);
            runPropertiesBaseStyle186.Append(boldComplexScript172);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties235 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties235 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders159 = new TableCellBorders();
            BottomBorder bottomBorder144 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)12U, Space = (UInt32Value)0U };

            tableCellBorders159.Append(bottomBorder144);

            tableStyleConditionalFormattingTableCellProperties235.Append(tableCellBorders159);

            tableStyleProperties298.Append(runPropertiesBaseStyle186);
            tableStyleProperties298.Append(tableStyleConditionalFormattingTableProperties235);
            tableStyleProperties298.Append(tableStyleConditionalFormattingTableCellProperties235);

            TableStyleProperties tableStyleProperties299 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle187 = new RunPropertiesBaseStyle();
            Bold bold175 = new Bold();
            BoldComplexScript boldComplexScript173 = new BoldComplexScript();

            runPropertiesBaseStyle187.Append(bold175);
            runPropertiesBaseStyle187.Append(boldComplexScript173);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties236 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties236 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders160 = new TableCellBorders();
            TopBorder topBorder151 = new TopBorder() { Val = BorderValues.Double, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders160.Append(topBorder151);

            tableStyleConditionalFormattingTableCellProperties236.Append(tableCellBorders160);

            tableStyleProperties299.Append(runPropertiesBaseStyle187);
            tableStyleProperties299.Append(tableStyleConditionalFormattingTableProperties236);
            tableStyleProperties299.Append(tableStyleConditionalFormattingTableCellProperties236);

            TableStyleProperties tableStyleProperties300 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle188 = new RunPropertiesBaseStyle();
            Bold bold176 = new Bold();
            BoldComplexScript boldComplexScript174 = new BoldComplexScript();

            runPropertiesBaseStyle188.Append(bold176);
            runPropertiesBaseStyle188.Append(boldComplexScript174);

            tableStyleProperties300.Append(runPropertiesBaseStyle188);

            TableStyleProperties tableStyleProperties301 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle189 = new RunPropertiesBaseStyle();
            Bold bold177 = new Bold();
            BoldComplexScript boldComplexScript175 = new BoldComplexScript();

            runPropertiesBaseStyle189.Append(bold177);
            runPropertiesBaseStyle189.Append(boldComplexScript175);

            tableStyleProperties301.Append(runPropertiesBaseStyle189);

            TableStyleProperties tableStyleProperties302 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties237 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties237 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading166 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties237.Append(shading166);

            tableStyleProperties302.Append(tableStyleConditionalFormattingTableProperties237);
            tableStyleProperties302.Append(tableStyleConditionalFormattingTableCellProperties237);

            TableStyleProperties tableStyleProperties303 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties238 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties238 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading167 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties238.Append(shading167);

            tableStyleProperties303.Append(tableStyleConditionalFormattingTableProperties238);
            tableStyleProperties303.Append(tableStyleConditionalFormattingTableCellProperties238);

            style80.Append(styleName80);
            style80.Append(basedOn75);
            style80.Append(uIPriority79);
            style80.Append(rsid76);
            style80.Append(styleParagraphProperties68);
            style80.Append(styleRunProperties32);
            style80.Append(styleTableProperties50);
            style80.Append(tableStyleProperties298);
            style80.Append(tableStyleProperties299);
            style80.Append(tableStyleProperties300);
            style80.Append(tableStyleProperties301);
            style80.Append(tableStyleProperties302);
            style80.Append(tableStyleProperties303);

            Style style81 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful" };
            StyleName styleName81 = new StyleName() { Val = "Grid Table 7 Colorful" };
            BasedOn basedOn76 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority80 = new UIPriority() { Val = 52 };
            Rsid rsid77 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties69 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines71 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties69.Append(spacingBetweenLines71);

            StyleRunProperties styleRunProperties33 = new StyleRunProperties();
            Color color72 = new Color() { Val = "000000", ThemeColor = ThemeColorValues.Text1 };

            styleRunProperties33.Append(color72);

            StyleTableProperties styleTableProperties51 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize48 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize48 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders47 = new TableBorders();
            TopBorder topBorder152 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder96 = new LeftBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder145 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder96 = new RightBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder109 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder123 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders47.Append(topBorder152);
            tableBorders47.Append(leftBorder96);
            tableBorders47.Append(bottomBorder145);
            tableBorders47.Append(rightBorder96);
            tableBorders47.Append(insideHorizontalBorder109);
            tableBorders47.Append(insideVerticalBorder123);

            styleTableProperties51.Append(tableStyleRowBandSize48);
            styleTableProperties51.Append(tableStyleColumnBandSize48);
            styleTableProperties51.Append(tableBorders47);

            TableStyleProperties tableStyleProperties304 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle190 = new RunPropertiesBaseStyle();
            Bold bold178 = new Bold();
            BoldComplexScript boldComplexScript176 = new BoldComplexScript();

            runPropertiesBaseStyle190.Append(bold178);
            runPropertiesBaseStyle190.Append(boldComplexScript176);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties239 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties239 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders161 = new TableCellBorders();
            TopBorder topBorder153 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder97 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder97 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder110 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder124 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders161.Append(topBorder153);
            tableCellBorders161.Append(leftBorder97);
            tableCellBorders161.Append(rightBorder97);
            tableCellBorders161.Append(insideHorizontalBorder110);
            tableCellBorders161.Append(insideVerticalBorder124);
            Shading shading168 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties239.Append(tableCellBorders161);
            tableStyleConditionalFormattingTableCellProperties239.Append(shading168);

            tableStyleProperties304.Append(runPropertiesBaseStyle190);
            tableStyleProperties304.Append(tableStyleConditionalFormattingTableProperties239);
            tableStyleProperties304.Append(tableStyleConditionalFormattingTableCellProperties239);

            TableStyleProperties tableStyleProperties305 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle191 = new RunPropertiesBaseStyle();
            Bold bold179 = new Bold();
            BoldComplexScript boldComplexScript177 = new BoldComplexScript();

            runPropertiesBaseStyle191.Append(bold179);
            runPropertiesBaseStyle191.Append(boldComplexScript177);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties240 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties240 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders162 = new TableCellBorders();
            LeftBorder leftBorder98 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder146 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder98 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder111 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder125 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders162.Append(leftBorder98);
            tableCellBorders162.Append(bottomBorder146);
            tableCellBorders162.Append(rightBorder98);
            tableCellBorders162.Append(insideHorizontalBorder111);
            tableCellBorders162.Append(insideVerticalBorder125);
            Shading shading169 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties240.Append(tableCellBorders162);
            tableStyleConditionalFormattingTableCellProperties240.Append(shading169);

            tableStyleProperties305.Append(runPropertiesBaseStyle191);
            tableStyleProperties305.Append(tableStyleConditionalFormattingTableProperties240);
            tableStyleProperties305.Append(tableStyleConditionalFormattingTableCellProperties240);

            TableStyleProperties tableStyleProperties306 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties70 = new StyleParagraphProperties();
            Justification justification14 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties70.Append(justification14);

            RunPropertiesBaseStyle runPropertiesBaseStyle192 = new RunPropertiesBaseStyle();
            Italic italic31 = new Italic();
            ItalicComplexScript italicComplexScript29 = new ItalicComplexScript();

            runPropertiesBaseStyle192.Append(italic31);
            runPropertiesBaseStyle192.Append(italicComplexScript29);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties241 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties241 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders163 = new TableCellBorders();
            TopBorder topBorder154 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder99 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder147 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder112 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder126 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders163.Append(topBorder154);
            tableCellBorders163.Append(leftBorder99);
            tableCellBorders163.Append(bottomBorder147);
            tableCellBorders163.Append(insideHorizontalBorder112);
            tableCellBorders163.Append(insideVerticalBorder126);
            Shading shading170 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties241.Append(tableCellBorders163);
            tableStyleConditionalFormattingTableCellProperties241.Append(shading170);

            tableStyleProperties306.Append(styleParagraphProperties70);
            tableStyleProperties306.Append(runPropertiesBaseStyle192);
            tableStyleProperties306.Append(tableStyleConditionalFormattingTableProperties241);
            tableStyleProperties306.Append(tableStyleConditionalFormattingTableCellProperties241);

            TableStyleProperties tableStyleProperties307 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle193 = new RunPropertiesBaseStyle();
            Italic italic32 = new Italic();
            ItalicComplexScript italicComplexScript30 = new ItalicComplexScript();

            runPropertiesBaseStyle193.Append(italic32);
            runPropertiesBaseStyle193.Append(italicComplexScript30);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties242 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties242 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders164 = new TableCellBorders();
            TopBorder topBorder155 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder148 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder99 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder113 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder127 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders164.Append(topBorder155);
            tableCellBorders164.Append(bottomBorder148);
            tableCellBorders164.Append(rightBorder99);
            tableCellBorders164.Append(insideHorizontalBorder113);
            tableCellBorders164.Append(insideVerticalBorder127);
            Shading shading171 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties242.Append(tableCellBorders164);
            tableStyleConditionalFormattingTableCellProperties242.Append(shading171);

            tableStyleProperties307.Append(runPropertiesBaseStyle193);
            tableStyleProperties307.Append(tableStyleConditionalFormattingTableProperties242);
            tableStyleProperties307.Append(tableStyleConditionalFormattingTableCellProperties242);

            TableStyleProperties tableStyleProperties308 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties243 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties243 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading172 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties243.Append(shading172);

            tableStyleProperties308.Append(tableStyleConditionalFormattingTableProperties243);
            tableStyleProperties308.Append(tableStyleConditionalFormattingTableCellProperties243);

            TableStyleProperties tableStyleProperties309 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties244 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties244 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading173 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties244.Append(shading173);

            tableStyleProperties309.Append(tableStyleConditionalFormattingTableProperties244);
            tableStyleProperties309.Append(tableStyleConditionalFormattingTableCellProperties244);

            TableStyleProperties tableStyleProperties310 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties245 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties245 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders165 = new TableCellBorders();
            BottomBorder bottomBorder149 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders165.Append(bottomBorder149);

            tableStyleConditionalFormattingTableCellProperties245.Append(tableCellBorders165);

            tableStyleProperties310.Append(tableStyleConditionalFormattingTableProperties245);
            tableStyleProperties310.Append(tableStyleConditionalFormattingTableCellProperties245);

            TableStyleProperties tableStyleProperties311 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties246 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties246 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders166 = new TableCellBorders();
            BottomBorder bottomBorder150 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders166.Append(bottomBorder150);

            tableStyleConditionalFormattingTableCellProperties246.Append(tableCellBorders166);

            tableStyleProperties311.Append(tableStyleConditionalFormattingTableProperties246);
            tableStyleProperties311.Append(tableStyleConditionalFormattingTableCellProperties246);

            TableStyleProperties tableStyleProperties312 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties247 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties247 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders167 = new TableCellBorders();
            TopBorder topBorder156 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders167.Append(topBorder156);

            tableStyleConditionalFormattingTableCellProperties247.Append(tableCellBorders167);

            tableStyleProperties312.Append(tableStyleConditionalFormattingTableProperties247);
            tableStyleProperties312.Append(tableStyleConditionalFormattingTableCellProperties247);

            TableStyleProperties tableStyleProperties313 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties248 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties248 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders168 = new TableCellBorders();
            TopBorder topBorder157 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders168.Append(topBorder157);

            tableStyleConditionalFormattingTableCellProperties248.Append(tableCellBorders168);

            tableStyleProperties313.Append(tableStyleConditionalFormattingTableProperties248);
            tableStyleProperties313.Append(tableStyleConditionalFormattingTableCellProperties248);

            style81.Append(styleName81);
            style81.Append(basedOn76);
            style81.Append(uIPriority80);
            style81.Append(rsid77);
            style81.Append(styleParagraphProperties69);
            style81.Append(styleRunProperties33);
            style81.Append(styleTableProperties51);
            style81.Append(tableStyleProperties304);
            style81.Append(tableStyleProperties305);
            style81.Append(tableStyleProperties306);
            style81.Append(tableStyleProperties307);
            style81.Append(tableStyleProperties308);
            style81.Append(tableStyleProperties309);
            style81.Append(tableStyleProperties310);
            style81.Append(tableStyleProperties311);
            style81.Append(tableStyleProperties312);
            style81.Append(tableStyleProperties313);

            Style style82 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent1" };
            StyleName styleName82 = new StyleName() { Val = "Grid Table 7 Colorful Accent 1" };
            BasedOn basedOn77 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority81 = new UIPriority() { Val = 52 };
            Rsid rsid78 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties71 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines72 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties71.Append(spacingBetweenLines72);

            StyleRunProperties styleRunProperties34 = new StyleRunProperties();
            Color color73 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties34.Append(color73);

            StyleTableProperties styleTableProperties52 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize49 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize49 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders48 = new TableBorders();
            TopBorder topBorder158 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder100 = new LeftBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder151 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder100 = new RightBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder114 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder128 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders48.Append(topBorder158);
            tableBorders48.Append(leftBorder100);
            tableBorders48.Append(bottomBorder151);
            tableBorders48.Append(rightBorder100);
            tableBorders48.Append(insideHorizontalBorder114);
            tableBorders48.Append(insideVerticalBorder128);

            styleTableProperties52.Append(tableStyleRowBandSize49);
            styleTableProperties52.Append(tableStyleColumnBandSize49);
            styleTableProperties52.Append(tableBorders48);

            TableStyleProperties tableStyleProperties314 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle194 = new RunPropertiesBaseStyle();
            Bold bold180 = new Bold();
            BoldComplexScript boldComplexScript178 = new BoldComplexScript();

            runPropertiesBaseStyle194.Append(bold180);
            runPropertiesBaseStyle194.Append(boldComplexScript178);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties249 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties249 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders169 = new TableCellBorders();
            TopBorder topBorder159 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder101 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder101 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder115 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder129 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders169.Append(topBorder159);
            tableCellBorders169.Append(leftBorder101);
            tableCellBorders169.Append(rightBorder101);
            tableCellBorders169.Append(insideHorizontalBorder115);
            tableCellBorders169.Append(insideVerticalBorder129);
            Shading shading174 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties249.Append(tableCellBorders169);
            tableStyleConditionalFormattingTableCellProperties249.Append(shading174);

            tableStyleProperties314.Append(runPropertiesBaseStyle194);
            tableStyleProperties314.Append(tableStyleConditionalFormattingTableProperties249);
            tableStyleProperties314.Append(tableStyleConditionalFormattingTableCellProperties249);

            TableStyleProperties tableStyleProperties315 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle195 = new RunPropertiesBaseStyle();
            Bold bold181 = new Bold();
            BoldComplexScript boldComplexScript179 = new BoldComplexScript();

            runPropertiesBaseStyle195.Append(bold181);
            runPropertiesBaseStyle195.Append(boldComplexScript179);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties250 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties250 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders170 = new TableCellBorders();
            LeftBorder leftBorder102 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder152 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder102 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder116 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder130 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders170.Append(leftBorder102);
            tableCellBorders170.Append(bottomBorder152);
            tableCellBorders170.Append(rightBorder102);
            tableCellBorders170.Append(insideHorizontalBorder116);
            tableCellBorders170.Append(insideVerticalBorder130);
            Shading shading175 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties250.Append(tableCellBorders170);
            tableStyleConditionalFormattingTableCellProperties250.Append(shading175);

            tableStyleProperties315.Append(runPropertiesBaseStyle195);
            tableStyleProperties315.Append(tableStyleConditionalFormattingTableProperties250);
            tableStyleProperties315.Append(tableStyleConditionalFormattingTableCellProperties250);

            TableStyleProperties tableStyleProperties316 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties72 = new StyleParagraphProperties();
            Justification justification15 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties72.Append(justification15);

            RunPropertiesBaseStyle runPropertiesBaseStyle196 = new RunPropertiesBaseStyle();
            Italic italic33 = new Italic();
            ItalicComplexScript italicComplexScript31 = new ItalicComplexScript();

            runPropertiesBaseStyle196.Append(italic33);
            runPropertiesBaseStyle196.Append(italicComplexScript31);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties251 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties251 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders171 = new TableCellBorders();
            TopBorder topBorder160 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder103 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder153 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder117 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder131 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders171.Append(topBorder160);
            tableCellBorders171.Append(leftBorder103);
            tableCellBorders171.Append(bottomBorder153);
            tableCellBorders171.Append(insideHorizontalBorder117);
            tableCellBorders171.Append(insideVerticalBorder131);
            Shading shading176 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties251.Append(tableCellBorders171);
            tableStyleConditionalFormattingTableCellProperties251.Append(shading176);

            tableStyleProperties316.Append(styleParagraphProperties72);
            tableStyleProperties316.Append(runPropertiesBaseStyle196);
            tableStyleProperties316.Append(tableStyleConditionalFormattingTableProperties251);
            tableStyleProperties316.Append(tableStyleConditionalFormattingTableCellProperties251);

            TableStyleProperties tableStyleProperties317 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle197 = new RunPropertiesBaseStyle();
            Italic italic34 = new Italic();
            ItalicComplexScript italicComplexScript32 = new ItalicComplexScript();

            runPropertiesBaseStyle197.Append(italic34);
            runPropertiesBaseStyle197.Append(italicComplexScript32);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties252 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties252 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders172 = new TableCellBorders();
            TopBorder topBorder161 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder154 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder103 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder118 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder132 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders172.Append(topBorder161);
            tableCellBorders172.Append(bottomBorder154);
            tableCellBorders172.Append(rightBorder103);
            tableCellBorders172.Append(insideHorizontalBorder118);
            tableCellBorders172.Append(insideVerticalBorder132);
            Shading shading177 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties252.Append(tableCellBorders172);
            tableStyleConditionalFormattingTableCellProperties252.Append(shading177);

            tableStyleProperties317.Append(runPropertiesBaseStyle197);
            tableStyleProperties317.Append(tableStyleConditionalFormattingTableProperties252);
            tableStyleProperties317.Append(tableStyleConditionalFormattingTableCellProperties252);

            TableStyleProperties tableStyleProperties318 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties253 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties253 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading178 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties253.Append(shading178);

            tableStyleProperties318.Append(tableStyleConditionalFormattingTableProperties253);
            tableStyleProperties318.Append(tableStyleConditionalFormattingTableCellProperties253);

            TableStyleProperties tableStyleProperties319 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties254 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties254 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading179 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties254.Append(shading179);

            tableStyleProperties319.Append(tableStyleConditionalFormattingTableProperties254);
            tableStyleProperties319.Append(tableStyleConditionalFormattingTableCellProperties254);

            TableStyleProperties tableStyleProperties320 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties255 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties255 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders173 = new TableCellBorders();
            BottomBorder bottomBorder155 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders173.Append(bottomBorder155);

            tableStyleConditionalFormattingTableCellProperties255.Append(tableCellBorders173);

            tableStyleProperties320.Append(tableStyleConditionalFormattingTableProperties255);
            tableStyleProperties320.Append(tableStyleConditionalFormattingTableCellProperties255);

            TableStyleProperties tableStyleProperties321 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties256 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties256 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders174 = new TableCellBorders();
            BottomBorder bottomBorder156 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders174.Append(bottomBorder156);

            tableStyleConditionalFormattingTableCellProperties256.Append(tableCellBorders174);

            tableStyleProperties321.Append(tableStyleConditionalFormattingTableProperties256);
            tableStyleProperties321.Append(tableStyleConditionalFormattingTableCellProperties256);

            TableStyleProperties tableStyleProperties322 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties257 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties257 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders175 = new TableCellBorders();
            TopBorder topBorder162 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders175.Append(topBorder162);

            tableStyleConditionalFormattingTableCellProperties257.Append(tableCellBorders175);

            tableStyleProperties322.Append(tableStyleConditionalFormattingTableProperties257);
            tableStyleProperties322.Append(tableStyleConditionalFormattingTableCellProperties257);

            TableStyleProperties tableStyleProperties323 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties258 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties258 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders176 = new TableCellBorders();
            TopBorder topBorder163 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders176.Append(topBorder163);

            tableStyleConditionalFormattingTableCellProperties258.Append(tableCellBorders176);

            tableStyleProperties323.Append(tableStyleConditionalFormattingTableProperties258);
            tableStyleProperties323.Append(tableStyleConditionalFormattingTableCellProperties258);

            style82.Append(styleName82);
            style82.Append(basedOn77);
            style82.Append(uIPriority81);
            style82.Append(rsid78);
            style82.Append(styleParagraphProperties71);
            style82.Append(styleRunProperties34);
            style82.Append(styleTableProperties52);
            style82.Append(tableStyleProperties314);
            style82.Append(tableStyleProperties315);
            style82.Append(tableStyleProperties316);
            style82.Append(tableStyleProperties317);
            style82.Append(tableStyleProperties318);
            style82.Append(tableStyleProperties319);
            style82.Append(tableStyleProperties320);
            style82.Append(tableStyleProperties321);
            style82.Append(tableStyleProperties322);
            style82.Append(tableStyleProperties323);

            Style style83 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent2" };
            StyleName styleName83 = new StyleName() { Val = "Grid Table 7 Colorful Accent 2" };
            BasedOn basedOn78 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority82 = new UIPriority() { Val = 52 };
            Rsid rsid79 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties73 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines73 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties73.Append(spacingBetweenLines73);

            StyleRunProperties styleRunProperties35 = new StyleRunProperties();
            Color color74 = new Color() { Val = "C45911", ThemeColor = ThemeColorValues.Accent2, ThemeShade = "BF" };

            styleRunProperties35.Append(color74);

            StyleTableProperties styleTableProperties53 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize50 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize50 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders49 = new TableBorders();
            TopBorder topBorder164 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder104 = new LeftBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder157 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder104 = new RightBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder119 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder133 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders49.Append(topBorder164);
            tableBorders49.Append(leftBorder104);
            tableBorders49.Append(bottomBorder157);
            tableBorders49.Append(rightBorder104);
            tableBorders49.Append(insideHorizontalBorder119);
            tableBorders49.Append(insideVerticalBorder133);

            styleTableProperties53.Append(tableStyleRowBandSize50);
            styleTableProperties53.Append(tableStyleColumnBandSize50);
            styleTableProperties53.Append(tableBorders49);

            TableStyleProperties tableStyleProperties324 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle198 = new RunPropertiesBaseStyle();
            Bold bold182 = new Bold();
            BoldComplexScript boldComplexScript180 = new BoldComplexScript();

            runPropertiesBaseStyle198.Append(bold182);
            runPropertiesBaseStyle198.Append(boldComplexScript180);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties259 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties259 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders177 = new TableCellBorders();
            TopBorder topBorder165 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder105 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder105 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder120 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder134 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders177.Append(topBorder165);
            tableCellBorders177.Append(leftBorder105);
            tableCellBorders177.Append(rightBorder105);
            tableCellBorders177.Append(insideHorizontalBorder120);
            tableCellBorders177.Append(insideVerticalBorder134);
            Shading shading180 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties259.Append(tableCellBorders177);
            tableStyleConditionalFormattingTableCellProperties259.Append(shading180);

            tableStyleProperties324.Append(runPropertiesBaseStyle198);
            tableStyleProperties324.Append(tableStyleConditionalFormattingTableProperties259);
            tableStyleProperties324.Append(tableStyleConditionalFormattingTableCellProperties259);

            TableStyleProperties tableStyleProperties325 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle199 = new RunPropertiesBaseStyle();
            Bold bold183 = new Bold();
            BoldComplexScript boldComplexScript181 = new BoldComplexScript();

            runPropertiesBaseStyle199.Append(bold183);
            runPropertiesBaseStyle199.Append(boldComplexScript181);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties260 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties260 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders178 = new TableCellBorders();
            LeftBorder leftBorder106 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder158 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder106 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder121 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder135 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders178.Append(leftBorder106);
            tableCellBorders178.Append(bottomBorder158);
            tableCellBorders178.Append(rightBorder106);
            tableCellBorders178.Append(insideHorizontalBorder121);
            tableCellBorders178.Append(insideVerticalBorder135);
            Shading shading181 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties260.Append(tableCellBorders178);
            tableStyleConditionalFormattingTableCellProperties260.Append(shading181);

            tableStyleProperties325.Append(runPropertiesBaseStyle199);
            tableStyleProperties325.Append(tableStyleConditionalFormattingTableProperties260);
            tableStyleProperties325.Append(tableStyleConditionalFormattingTableCellProperties260);

            TableStyleProperties tableStyleProperties326 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties74 = new StyleParagraphProperties();
            Justification justification16 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties74.Append(justification16);

            RunPropertiesBaseStyle runPropertiesBaseStyle200 = new RunPropertiesBaseStyle();
            Italic italic35 = new Italic();
            ItalicComplexScript italicComplexScript33 = new ItalicComplexScript();

            runPropertiesBaseStyle200.Append(italic35);
            runPropertiesBaseStyle200.Append(italicComplexScript33);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties261 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties261 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders179 = new TableCellBorders();
            TopBorder topBorder166 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder107 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder159 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder122 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder136 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders179.Append(topBorder166);
            tableCellBorders179.Append(leftBorder107);
            tableCellBorders179.Append(bottomBorder159);
            tableCellBorders179.Append(insideHorizontalBorder122);
            tableCellBorders179.Append(insideVerticalBorder136);
            Shading shading182 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties261.Append(tableCellBorders179);
            tableStyleConditionalFormattingTableCellProperties261.Append(shading182);

            tableStyleProperties326.Append(styleParagraphProperties74);
            tableStyleProperties326.Append(runPropertiesBaseStyle200);
            tableStyleProperties326.Append(tableStyleConditionalFormattingTableProperties261);
            tableStyleProperties326.Append(tableStyleConditionalFormattingTableCellProperties261);

            TableStyleProperties tableStyleProperties327 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle201 = new RunPropertiesBaseStyle();
            Italic italic36 = new Italic();
            ItalicComplexScript italicComplexScript34 = new ItalicComplexScript();

            runPropertiesBaseStyle201.Append(italic36);
            runPropertiesBaseStyle201.Append(italicComplexScript34);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties262 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties262 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders180 = new TableCellBorders();
            TopBorder topBorder167 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder160 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder107 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder123 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder137 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders180.Append(topBorder167);
            tableCellBorders180.Append(bottomBorder160);
            tableCellBorders180.Append(rightBorder107);
            tableCellBorders180.Append(insideHorizontalBorder123);
            tableCellBorders180.Append(insideVerticalBorder137);
            Shading shading183 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties262.Append(tableCellBorders180);
            tableStyleConditionalFormattingTableCellProperties262.Append(shading183);

            tableStyleProperties327.Append(runPropertiesBaseStyle201);
            tableStyleProperties327.Append(tableStyleConditionalFormattingTableProperties262);
            tableStyleProperties327.Append(tableStyleConditionalFormattingTableCellProperties262);

            TableStyleProperties tableStyleProperties328 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties263 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties263 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading184 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties263.Append(shading184);

            tableStyleProperties328.Append(tableStyleConditionalFormattingTableProperties263);
            tableStyleProperties328.Append(tableStyleConditionalFormattingTableCellProperties263);

            TableStyleProperties tableStyleProperties329 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties264 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties264 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading185 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties264.Append(shading185);

            tableStyleProperties329.Append(tableStyleConditionalFormattingTableProperties264);
            tableStyleProperties329.Append(tableStyleConditionalFormattingTableCellProperties264);

            TableStyleProperties tableStyleProperties330 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties265 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties265 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders181 = new TableCellBorders();
            BottomBorder bottomBorder161 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders181.Append(bottomBorder161);

            tableStyleConditionalFormattingTableCellProperties265.Append(tableCellBorders181);

            tableStyleProperties330.Append(tableStyleConditionalFormattingTableProperties265);
            tableStyleProperties330.Append(tableStyleConditionalFormattingTableCellProperties265);

            TableStyleProperties tableStyleProperties331 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties266 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties266 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders182 = new TableCellBorders();
            BottomBorder bottomBorder162 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders182.Append(bottomBorder162);

            tableStyleConditionalFormattingTableCellProperties266.Append(tableCellBorders182);

            tableStyleProperties331.Append(tableStyleConditionalFormattingTableProperties266);
            tableStyleProperties331.Append(tableStyleConditionalFormattingTableCellProperties266);

            TableStyleProperties tableStyleProperties332 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties267 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties267 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders183 = new TableCellBorders();
            TopBorder topBorder168 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders183.Append(topBorder168);

            tableStyleConditionalFormattingTableCellProperties267.Append(tableCellBorders183);

            tableStyleProperties332.Append(tableStyleConditionalFormattingTableProperties267);
            tableStyleProperties332.Append(tableStyleConditionalFormattingTableCellProperties267);

            TableStyleProperties tableStyleProperties333 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties268 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties268 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders184 = new TableCellBorders();
            TopBorder topBorder169 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders184.Append(topBorder169);

            tableStyleConditionalFormattingTableCellProperties268.Append(tableCellBorders184);

            tableStyleProperties333.Append(tableStyleConditionalFormattingTableProperties268);
            tableStyleProperties333.Append(tableStyleConditionalFormattingTableCellProperties268);

            style83.Append(styleName83);
            style83.Append(basedOn78);
            style83.Append(uIPriority82);
            style83.Append(rsid79);
            style83.Append(styleParagraphProperties73);
            style83.Append(styleRunProperties35);
            style83.Append(styleTableProperties53);
            style83.Append(tableStyleProperties324);
            style83.Append(tableStyleProperties325);
            style83.Append(tableStyleProperties326);
            style83.Append(tableStyleProperties327);
            style83.Append(tableStyleProperties328);
            style83.Append(tableStyleProperties329);
            style83.Append(tableStyleProperties330);
            style83.Append(tableStyleProperties331);
            style83.Append(tableStyleProperties332);
            style83.Append(tableStyleProperties333);

            Style style84 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent4" };
            StyleName styleName84 = new StyleName() { Val = "Grid Table 7 Colorful Accent 4" };
            BasedOn basedOn79 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority83 = new UIPriority() { Val = 52 };
            Rsid rsid80 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties75 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines74 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties75.Append(spacingBetweenLines74);

            StyleRunProperties styleRunProperties36 = new StyleRunProperties();
            Color color75 = new Color() { Val = "BF8F00", ThemeColor = ThemeColorValues.Accent4, ThemeShade = "BF" };

            styleRunProperties36.Append(color75);

            StyleTableProperties styleTableProperties54 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize51 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize51 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders50 = new TableBorders();
            TopBorder topBorder170 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder108 = new LeftBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder163 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder108 = new RightBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder124 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder138 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders50.Append(topBorder170);
            tableBorders50.Append(leftBorder108);
            tableBorders50.Append(bottomBorder163);
            tableBorders50.Append(rightBorder108);
            tableBorders50.Append(insideHorizontalBorder124);
            tableBorders50.Append(insideVerticalBorder138);

            styleTableProperties54.Append(tableStyleRowBandSize51);
            styleTableProperties54.Append(tableStyleColumnBandSize51);
            styleTableProperties54.Append(tableBorders50);

            TableStyleProperties tableStyleProperties334 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle202 = new RunPropertiesBaseStyle();
            Bold bold184 = new Bold();
            BoldComplexScript boldComplexScript182 = new BoldComplexScript();

            runPropertiesBaseStyle202.Append(bold184);
            runPropertiesBaseStyle202.Append(boldComplexScript182);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties269 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties269 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders185 = new TableCellBorders();
            TopBorder topBorder171 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder109 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder109 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder125 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder139 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders185.Append(topBorder171);
            tableCellBorders185.Append(leftBorder109);
            tableCellBorders185.Append(rightBorder109);
            tableCellBorders185.Append(insideHorizontalBorder125);
            tableCellBorders185.Append(insideVerticalBorder139);
            Shading shading186 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties269.Append(tableCellBorders185);
            tableStyleConditionalFormattingTableCellProperties269.Append(shading186);

            tableStyleProperties334.Append(runPropertiesBaseStyle202);
            tableStyleProperties334.Append(tableStyleConditionalFormattingTableProperties269);
            tableStyleProperties334.Append(tableStyleConditionalFormattingTableCellProperties269);

            TableStyleProperties tableStyleProperties335 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle203 = new RunPropertiesBaseStyle();
            Bold bold185 = new Bold();
            BoldComplexScript boldComplexScript183 = new BoldComplexScript();

            runPropertiesBaseStyle203.Append(bold185);
            runPropertiesBaseStyle203.Append(boldComplexScript183);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties270 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties270 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders186 = new TableCellBorders();
            LeftBorder leftBorder110 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder164 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder110 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder126 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder140 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders186.Append(leftBorder110);
            tableCellBorders186.Append(bottomBorder164);
            tableCellBorders186.Append(rightBorder110);
            tableCellBorders186.Append(insideHorizontalBorder126);
            tableCellBorders186.Append(insideVerticalBorder140);
            Shading shading187 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties270.Append(tableCellBorders186);
            tableStyleConditionalFormattingTableCellProperties270.Append(shading187);

            tableStyleProperties335.Append(runPropertiesBaseStyle203);
            tableStyleProperties335.Append(tableStyleConditionalFormattingTableProperties270);
            tableStyleProperties335.Append(tableStyleConditionalFormattingTableCellProperties270);

            TableStyleProperties tableStyleProperties336 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties76 = new StyleParagraphProperties();
            Justification justification17 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties76.Append(justification17);

            RunPropertiesBaseStyle runPropertiesBaseStyle204 = new RunPropertiesBaseStyle();
            Italic italic37 = new Italic();
            ItalicComplexScript italicComplexScript35 = new ItalicComplexScript();

            runPropertiesBaseStyle204.Append(italic37);
            runPropertiesBaseStyle204.Append(italicComplexScript35);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties271 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties271 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders187 = new TableCellBorders();
            TopBorder topBorder172 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder111 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder165 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder127 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder141 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders187.Append(topBorder172);
            tableCellBorders187.Append(leftBorder111);
            tableCellBorders187.Append(bottomBorder165);
            tableCellBorders187.Append(insideHorizontalBorder127);
            tableCellBorders187.Append(insideVerticalBorder141);
            Shading shading188 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties271.Append(tableCellBorders187);
            tableStyleConditionalFormattingTableCellProperties271.Append(shading188);

            tableStyleProperties336.Append(styleParagraphProperties76);
            tableStyleProperties336.Append(runPropertiesBaseStyle204);
            tableStyleProperties336.Append(tableStyleConditionalFormattingTableProperties271);
            tableStyleProperties336.Append(tableStyleConditionalFormattingTableCellProperties271);

            TableStyleProperties tableStyleProperties337 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle205 = new RunPropertiesBaseStyle();
            Italic italic38 = new Italic();
            ItalicComplexScript italicComplexScript36 = new ItalicComplexScript();

            runPropertiesBaseStyle205.Append(italic38);
            runPropertiesBaseStyle205.Append(italicComplexScript36);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties272 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties272 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders188 = new TableCellBorders();
            TopBorder topBorder173 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder166 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder111 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder128 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder142 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders188.Append(topBorder173);
            tableCellBorders188.Append(bottomBorder166);
            tableCellBorders188.Append(rightBorder111);
            tableCellBorders188.Append(insideHorizontalBorder128);
            tableCellBorders188.Append(insideVerticalBorder142);
            Shading shading189 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties272.Append(tableCellBorders188);
            tableStyleConditionalFormattingTableCellProperties272.Append(shading189);

            tableStyleProperties337.Append(runPropertiesBaseStyle205);
            tableStyleProperties337.Append(tableStyleConditionalFormattingTableProperties272);
            tableStyleProperties337.Append(tableStyleConditionalFormattingTableCellProperties272);

            TableStyleProperties tableStyleProperties338 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties273 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties273 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading190 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties273.Append(shading190);

            tableStyleProperties338.Append(tableStyleConditionalFormattingTableProperties273);
            tableStyleProperties338.Append(tableStyleConditionalFormattingTableCellProperties273);

            TableStyleProperties tableStyleProperties339 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties274 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties274 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading191 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties274.Append(shading191);

            tableStyleProperties339.Append(tableStyleConditionalFormattingTableProperties274);
            tableStyleProperties339.Append(tableStyleConditionalFormattingTableCellProperties274);

            TableStyleProperties tableStyleProperties340 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties275 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties275 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders189 = new TableCellBorders();
            BottomBorder bottomBorder167 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders189.Append(bottomBorder167);

            tableStyleConditionalFormattingTableCellProperties275.Append(tableCellBorders189);

            tableStyleProperties340.Append(tableStyleConditionalFormattingTableProperties275);
            tableStyleProperties340.Append(tableStyleConditionalFormattingTableCellProperties275);

            TableStyleProperties tableStyleProperties341 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties276 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties276 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders190 = new TableCellBorders();
            BottomBorder bottomBorder168 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders190.Append(bottomBorder168);

            tableStyleConditionalFormattingTableCellProperties276.Append(tableCellBorders190);

            tableStyleProperties341.Append(tableStyleConditionalFormattingTableProperties276);
            tableStyleProperties341.Append(tableStyleConditionalFormattingTableCellProperties276);

            TableStyleProperties tableStyleProperties342 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties277 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties277 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders191 = new TableCellBorders();
            TopBorder topBorder174 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders191.Append(topBorder174);

            tableStyleConditionalFormattingTableCellProperties277.Append(tableCellBorders191);

            tableStyleProperties342.Append(tableStyleConditionalFormattingTableProperties277);
            tableStyleProperties342.Append(tableStyleConditionalFormattingTableCellProperties277);

            TableStyleProperties tableStyleProperties343 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties278 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties278 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders192 = new TableCellBorders();
            TopBorder topBorder175 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders192.Append(topBorder175);

            tableStyleConditionalFormattingTableCellProperties278.Append(tableCellBorders192);

            tableStyleProperties343.Append(tableStyleConditionalFormattingTableProperties278);
            tableStyleProperties343.Append(tableStyleConditionalFormattingTableCellProperties278);

            style84.Append(styleName84);
            style84.Append(basedOn79);
            style84.Append(uIPriority83);
            style84.Append(rsid80);
            style84.Append(styleParagraphProperties75);
            style84.Append(styleRunProperties36);
            style84.Append(styleTableProperties54);
            style84.Append(tableStyleProperties334);
            style84.Append(tableStyleProperties335);
            style84.Append(tableStyleProperties336);
            style84.Append(tableStyleProperties337);
            style84.Append(tableStyleProperties338);
            style84.Append(tableStyleProperties339);
            style84.Append(tableStyleProperties340);
            style84.Append(tableStyleProperties341);
            style84.Append(tableStyleProperties342);
            style84.Append(tableStyleProperties343);

            Style style85 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent3" };
            StyleName styleName85 = new StyleName() { Val = "Grid Table 7 Colorful Accent 3" };
            BasedOn basedOn80 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority84 = new UIPriority() { Val = 52 };
            Rsid rsid81 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties77 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines75 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties77.Append(spacingBetweenLines75);

            StyleRunProperties styleRunProperties37 = new StyleRunProperties();
            Color color76 = new Color() { Val = "7B7B7B", ThemeColor = ThemeColorValues.Accent3, ThemeShade = "BF" };

            styleRunProperties37.Append(color76);

            StyleTableProperties styleTableProperties55 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize52 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize52 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders51 = new TableBorders();
            TopBorder topBorder176 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder112 = new LeftBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder169 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder112 = new RightBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder129 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder143 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders51.Append(topBorder176);
            tableBorders51.Append(leftBorder112);
            tableBorders51.Append(bottomBorder169);
            tableBorders51.Append(rightBorder112);
            tableBorders51.Append(insideHorizontalBorder129);
            tableBorders51.Append(insideVerticalBorder143);

            styleTableProperties55.Append(tableStyleRowBandSize52);
            styleTableProperties55.Append(tableStyleColumnBandSize52);
            styleTableProperties55.Append(tableBorders51);

            TableStyleProperties tableStyleProperties344 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle206 = new RunPropertiesBaseStyle();
            Bold bold186 = new Bold();
            BoldComplexScript boldComplexScript184 = new BoldComplexScript();

            runPropertiesBaseStyle206.Append(bold186);
            runPropertiesBaseStyle206.Append(boldComplexScript184);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties279 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties279 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders193 = new TableCellBorders();
            TopBorder topBorder177 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder113 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder113 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder130 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder144 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders193.Append(topBorder177);
            tableCellBorders193.Append(leftBorder113);
            tableCellBorders193.Append(rightBorder113);
            tableCellBorders193.Append(insideHorizontalBorder130);
            tableCellBorders193.Append(insideVerticalBorder144);
            Shading shading192 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties279.Append(tableCellBorders193);
            tableStyleConditionalFormattingTableCellProperties279.Append(shading192);

            tableStyleProperties344.Append(runPropertiesBaseStyle206);
            tableStyleProperties344.Append(tableStyleConditionalFormattingTableProperties279);
            tableStyleProperties344.Append(tableStyleConditionalFormattingTableCellProperties279);

            TableStyleProperties tableStyleProperties345 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle207 = new RunPropertiesBaseStyle();
            Bold bold187 = new Bold();
            BoldComplexScript boldComplexScript185 = new BoldComplexScript();

            runPropertiesBaseStyle207.Append(bold187);
            runPropertiesBaseStyle207.Append(boldComplexScript185);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties280 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties280 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders194 = new TableCellBorders();
            LeftBorder leftBorder114 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder170 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder114 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder131 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder145 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders194.Append(leftBorder114);
            tableCellBorders194.Append(bottomBorder170);
            tableCellBorders194.Append(rightBorder114);
            tableCellBorders194.Append(insideHorizontalBorder131);
            tableCellBorders194.Append(insideVerticalBorder145);
            Shading shading193 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties280.Append(tableCellBorders194);
            tableStyleConditionalFormattingTableCellProperties280.Append(shading193);

            tableStyleProperties345.Append(runPropertiesBaseStyle207);
            tableStyleProperties345.Append(tableStyleConditionalFormattingTableProperties280);
            tableStyleProperties345.Append(tableStyleConditionalFormattingTableCellProperties280);

            TableStyleProperties tableStyleProperties346 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties78 = new StyleParagraphProperties();
            Justification justification18 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties78.Append(justification18);

            RunPropertiesBaseStyle runPropertiesBaseStyle208 = new RunPropertiesBaseStyle();
            Italic italic39 = new Italic();
            ItalicComplexScript italicComplexScript37 = new ItalicComplexScript();

            runPropertiesBaseStyle208.Append(italic39);
            runPropertiesBaseStyle208.Append(italicComplexScript37);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties281 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties281 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders195 = new TableCellBorders();
            TopBorder topBorder178 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder115 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder171 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder132 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder146 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders195.Append(topBorder178);
            tableCellBorders195.Append(leftBorder115);
            tableCellBorders195.Append(bottomBorder171);
            tableCellBorders195.Append(insideHorizontalBorder132);
            tableCellBorders195.Append(insideVerticalBorder146);
            Shading shading194 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties281.Append(tableCellBorders195);
            tableStyleConditionalFormattingTableCellProperties281.Append(shading194);

            tableStyleProperties346.Append(styleParagraphProperties78);
            tableStyleProperties346.Append(runPropertiesBaseStyle208);
            tableStyleProperties346.Append(tableStyleConditionalFormattingTableProperties281);
            tableStyleProperties346.Append(tableStyleConditionalFormattingTableCellProperties281);

            TableStyleProperties tableStyleProperties347 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle209 = new RunPropertiesBaseStyle();
            Italic italic40 = new Italic();
            ItalicComplexScript italicComplexScript38 = new ItalicComplexScript();

            runPropertiesBaseStyle209.Append(italic40);
            runPropertiesBaseStyle209.Append(italicComplexScript38);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties282 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties282 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders196 = new TableCellBorders();
            TopBorder topBorder179 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder172 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder115 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder133 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder147 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders196.Append(topBorder179);
            tableCellBorders196.Append(bottomBorder172);
            tableCellBorders196.Append(rightBorder115);
            tableCellBorders196.Append(insideHorizontalBorder133);
            tableCellBorders196.Append(insideVerticalBorder147);
            Shading shading195 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties282.Append(tableCellBorders196);
            tableStyleConditionalFormattingTableCellProperties282.Append(shading195);

            tableStyleProperties347.Append(runPropertiesBaseStyle209);
            tableStyleProperties347.Append(tableStyleConditionalFormattingTableProperties282);
            tableStyleProperties347.Append(tableStyleConditionalFormattingTableCellProperties282);

            TableStyleProperties tableStyleProperties348 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties283 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties283 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading196 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties283.Append(shading196);

            tableStyleProperties348.Append(tableStyleConditionalFormattingTableProperties283);
            tableStyleProperties348.Append(tableStyleConditionalFormattingTableCellProperties283);

            TableStyleProperties tableStyleProperties349 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties284 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties284 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading197 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties284.Append(shading197);

            tableStyleProperties349.Append(tableStyleConditionalFormattingTableProperties284);
            tableStyleProperties349.Append(tableStyleConditionalFormattingTableCellProperties284);

            TableStyleProperties tableStyleProperties350 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties285 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties285 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders197 = new TableCellBorders();
            BottomBorder bottomBorder173 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders197.Append(bottomBorder173);

            tableStyleConditionalFormattingTableCellProperties285.Append(tableCellBorders197);

            tableStyleProperties350.Append(tableStyleConditionalFormattingTableProperties285);
            tableStyleProperties350.Append(tableStyleConditionalFormattingTableCellProperties285);

            TableStyleProperties tableStyleProperties351 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties286 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties286 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders198 = new TableCellBorders();
            BottomBorder bottomBorder174 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders198.Append(bottomBorder174);

            tableStyleConditionalFormattingTableCellProperties286.Append(tableCellBorders198);

            tableStyleProperties351.Append(tableStyleConditionalFormattingTableProperties286);
            tableStyleProperties351.Append(tableStyleConditionalFormattingTableCellProperties286);

            TableStyleProperties tableStyleProperties352 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties287 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties287 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders199 = new TableCellBorders();
            TopBorder topBorder180 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders199.Append(topBorder180);

            tableStyleConditionalFormattingTableCellProperties287.Append(tableCellBorders199);

            tableStyleProperties352.Append(tableStyleConditionalFormattingTableProperties287);
            tableStyleProperties352.Append(tableStyleConditionalFormattingTableCellProperties287);

            TableStyleProperties tableStyleProperties353 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties288 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties288 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders200 = new TableCellBorders();
            TopBorder topBorder181 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders200.Append(topBorder181);

            tableStyleConditionalFormattingTableCellProperties288.Append(tableCellBorders200);

            tableStyleProperties353.Append(tableStyleConditionalFormattingTableProperties288);
            tableStyleProperties353.Append(tableStyleConditionalFormattingTableCellProperties288);

            style85.Append(styleName85);
            style85.Append(basedOn80);
            style85.Append(uIPriority84);
            style85.Append(rsid81);
            style85.Append(styleParagraphProperties77);
            style85.Append(styleRunProperties37);
            style85.Append(styleTableProperties55);
            style85.Append(tableStyleProperties344);
            style85.Append(tableStyleProperties345);
            style85.Append(tableStyleProperties346);
            style85.Append(tableStyleProperties347);
            style85.Append(tableStyleProperties348);
            style85.Append(tableStyleProperties349);
            style85.Append(tableStyleProperties350);
            style85.Append(tableStyleProperties351);
            style85.Append(tableStyleProperties352);
            style85.Append(tableStyleProperties353);

            Style style86 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent5" };
            StyleName styleName86 = new StyleName() { Val = "Grid Table 7 Colorful Accent 5" };
            BasedOn basedOn81 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority85 = new UIPriority() { Val = 52 };
            Rsid rsid82 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties79 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines76 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties79.Append(spacingBetweenLines76);

            StyleRunProperties styleRunProperties38 = new StyleRunProperties();
            Color color77 = new Color() { Val = "2F5496", ThemeColor = ThemeColorValues.Accent5, ThemeShade = "BF" };

            styleRunProperties38.Append(color77);

            StyleTableProperties styleTableProperties56 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize53 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize53 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders52 = new TableBorders();
            TopBorder topBorder182 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder116 = new LeftBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder175 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder116 = new RightBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder134 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder148 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders52.Append(topBorder182);
            tableBorders52.Append(leftBorder116);
            tableBorders52.Append(bottomBorder175);
            tableBorders52.Append(rightBorder116);
            tableBorders52.Append(insideHorizontalBorder134);
            tableBorders52.Append(insideVerticalBorder148);

            styleTableProperties56.Append(tableStyleRowBandSize53);
            styleTableProperties56.Append(tableStyleColumnBandSize53);
            styleTableProperties56.Append(tableBorders52);

            TableStyleProperties tableStyleProperties354 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle210 = new RunPropertiesBaseStyle();
            Bold bold188 = new Bold();
            BoldComplexScript boldComplexScript186 = new BoldComplexScript();

            runPropertiesBaseStyle210.Append(bold188);
            runPropertiesBaseStyle210.Append(boldComplexScript186);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties289 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties289 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders201 = new TableCellBorders();
            TopBorder topBorder183 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder117 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder117 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder135 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder149 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders201.Append(topBorder183);
            tableCellBorders201.Append(leftBorder117);
            tableCellBorders201.Append(rightBorder117);
            tableCellBorders201.Append(insideHorizontalBorder135);
            tableCellBorders201.Append(insideVerticalBorder149);
            Shading shading198 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties289.Append(tableCellBorders201);
            tableStyleConditionalFormattingTableCellProperties289.Append(shading198);

            tableStyleProperties354.Append(runPropertiesBaseStyle210);
            tableStyleProperties354.Append(tableStyleConditionalFormattingTableProperties289);
            tableStyleProperties354.Append(tableStyleConditionalFormattingTableCellProperties289);

            TableStyleProperties tableStyleProperties355 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle211 = new RunPropertiesBaseStyle();
            Bold bold189 = new Bold();
            BoldComplexScript boldComplexScript187 = new BoldComplexScript();

            runPropertiesBaseStyle211.Append(bold189);
            runPropertiesBaseStyle211.Append(boldComplexScript187);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties290 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties290 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders202 = new TableCellBorders();
            LeftBorder leftBorder118 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder176 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder118 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder136 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder150 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders202.Append(leftBorder118);
            tableCellBorders202.Append(bottomBorder176);
            tableCellBorders202.Append(rightBorder118);
            tableCellBorders202.Append(insideHorizontalBorder136);
            tableCellBorders202.Append(insideVerticalBorder150);
            Shading shading199 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties290.Append(tableCellBorders202);
            tableStyleConditionalFormattingTableCellProperties290.Append(shading199);

            tableStyleProperties355.Append(runPropertiesBaseStyle211);
            tableStyleProperties355.Append(tableStyleConditionalFormattingTableProperties290);
            tableStyleProperties355.Append(tableStyleConditionalFormattingTableCellProperties290);

            TableStyleProperties tableStyleProperties356 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties80 = new StyleParagraphProperties();
            Justification justification19 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties80.Append(justification19);

            RunPropertiesBaseStyle runPropertiesBaseStyle212 = new RunPropertiesBaseStyle();
            Italic italic41 = new Italic();
            ItalicComplexScript italicComplexScript39 = new ItalicComplexScript();

            runPropertiesBaseStyle212.Append(italic41);
            runPropertiesBaseStyle212.Append(italicComplexScript39);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties291 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties291 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders203 = new TableCellBorders();
            TopBorder topBorder184 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder119 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder177 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder137 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder151 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders203.Append(topBorder184);
            tableCellBorders203.Append(leftBorder119);
            tableCellBorders203.Append(bottomBorder177);
            tableCellBorders203.Append(insideHorizontalBorder137);
            tableCellBorders203.Append(insideVerticalBorder151);
            Shading shading200 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties291.Append(tableCellBorders203);
            tableStyleConditionalFormattingTableCellProperties291.Append(shading200);

            tableStyleProperties356.Append(styleParagraphProperties80);
            tableStyleProperties356.Append(runPropertiesBaseStyle212);
            tableStyleProperties356.Append(tableStyleConditionalFormattingTableProperties291);
            tableStyleProperties356.Append(tableStyleConditionalFormattingTableCellProperties291);

            TableStyleProperties tableStyleProperties357 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle213 = new RunPropertiesBaseStyle();
            Italic italic42 = new Italic();
            ItalicComplexScript italicComplexScript40 = new ItalicComplexScript();

            runPropertiesBaseStyle213.Append(italic42);
            runPropertiesBaseStyle213.Append(italicComplexScript40);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties292 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties292 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders204 = new TableCellBorders();
            TopBorder topBorder185 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder178 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder119 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder138 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder152 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders204.Append(topBorder185);
            tableCellBorders204.Append(bottomBorder178);
            tableCellBorders204.Append(rightBorder119);
            tableCellBorders204.Append(insideHorizontalBorder138);
            tableCellBorders204.Append(insideVerticalBorder152);
            Shading shading201 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties292.Append(tableCellBorders204);
            tableStyleConditionalFormattingTableCellProperties292.Append(shading201);

            tableStyleProperties357.Append(runPropertiesBaseStyle213);
            tableStyleProperties357.Append(tableStyleConditionalFormattingTableProperties292);
            tableStyleProperties357.Append(tableStyleConditionalFormattingTableCellProperties292);

            TableStyleProperties tableStyleProperties358 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties293 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties293 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading202 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties293.Append(shading202);

            tableStyleProperties358.Append(tableStyleConditionalFormattingTableProperties293);
            tableStyleProperties358.Append(tableStyleConditionalFormattingTableCellProperties293);

            TableStyleProperties tableStyleProperties359 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties294 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties294 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading203 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties294.Append(shading203);

            tableStyleProperties359.Append(tableStyleConditionalFormattingTableProperties294);
            tableStyleProperties359.Append(tableStyleConditionalFormattingTableCellProperties294);

            TableStyleProperties tableStyleProperties360 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties295 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties295 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders205 = new TableCellBorders();
            BottomBorder bottomBorder179 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders205.Append(bottomBorder179);

            tableStyleConditionalFormattingTableCellProperties295.Append(tableCellBorders205);

            tableStyleProperties360.Append(tableStyleConditionalFormattingTableProperties295);
            tableStyleProperties360.Append(tableStyleConditionalFormattingTableCellProperties295);

            TableStyleProperties tableStyleProperties361 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties296 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties296 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders206 = new TableCellBorders();
            BottomBorder bottomBorder180 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders206.Append(bottomBorder180);

            tableStyleConditionalFormattingTableCellProperties296.Append(tableCellBorders206);

            tableStyleProperties361.Append(tableStyleConditionalFormattingTableProperties296);
            tableStyleProperties361.Append(tableStyleConditionalFormattingTableCellProperties296);

            TableStyleProperties tableStyleProperties362 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties297 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties297 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders207 = new TableCellBorders();
            TopBorder topBorder186 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders207.Append(topBorder186);

            tableStyleConditionalFormattingTableCellProperties297.Append(tableCellBorders207);

            tableStyleProperties362.Append(tableStyleConditionalFormattingTableProperties297);
            tableStyleProperties362.Append(tableStyleConditionalFormattingTableCellProperties297);

            TableStyleProperties tableStyleProperties363 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties298 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties298 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders208 = new TableCellBorders();
            TopBorder topBorder187 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders208.Append(topBorder187);

            tableStyleConditionalFormattingTableCellProperties298.Append(tableCellBorders208);

            tableStyleProperties363.Append(tableStyleConditionalFormattingTableProperties298);
            tableStyleProperties363.Append(tableStyleConditionalFormattingTableCellProperties298);

            style86.Append(styleName86);
            style86.Append(basedOn81);
            style86.Append(uIPriority85);
            style86.Append(rsid82);
            style86.Append(styleParagraphProperties79);
            style86.Append(styleRunProperties38);
            style86.Append(styleTableProperties56);
            style86.Append(tableStyleProperties354);
            style86.Append(tableStyleProperties355);
            style86.Append(tableStyleProperties356);
            style86.Append(tableStyleProperties357);
            style86.Append(tableStyleProperties358);
            style86.Append(tableStyleProperties359);
            style86.Append(tableStyleProperties360);
            style86.Append(tableStyleProperties361);
            style86.Append(tableStyleProperties362);
            style86.Append(tableStyleProperties363);

            Style style87 = new Style() { Type = StyleValues.Table, StyleId = "GridTable7Colorful-Accent6" };
            StyleName styleName87 = new StyleName() { Val = "Grid Table 7 Colorful Accent 6" };
            BasedOn basedOn82 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority86 = new UIPriority() { Val = 52 };
            Rsid rsid83 = new Rsid() { Val = "000B6DD7" };

            StyleParagraphProperties styleParagraphProperties81 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines77 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties81.Append(spacingBetweenLines77);

            StyleRunProperties styleRunProperties39 = new StyleRunProperties();
            Color color78 = new Color() { Val = "538135", ThemeColor = ThemeColorValues.Accent6, ThemeShade = "BF" };

            styleRunProperties39.Append(color78);

            StyleTableProperties styleTableProperties57 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize54 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize54 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders53 = new TableBorders();
            TopBorder topBorder188 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder120 = new LeftBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder181 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder120 = new RightBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder139 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideVerticalBorder insideVerticalBorder153 = new InsideVerticalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders53.Append(topBorder188);
            tableBorders53.Append(leftBorder120);
            tableBorders53.Append(bottomBorder181);
            tableBorders53.Append(rightBorder120);
            tableBorders53.Append(insideHorizontalBorder139);
            tableBorders53.Append(insideVerticalBorder153);

            styleTableProperties57.Append(tableStyleRowBandSize54);
            styleTableProperties57.Append(tableStyleColumnBandSize54);
            styleTableProperties57.Append(tableBorders53);

            TableStyleProperties tableStyleProperties364 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle214 = new RunPropertiesBaseStyle();
            Bold bold190 = new Bold();
            BoldComplexScript boldComplexScript188 = new BoldComplexScript();

            runPropertiesBaseStyle214.Append(bold190);
            runPropertiesBaseStyle214.Append(boldComplexScript188);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties299 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties299 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders209 = new TableCellBorders();
            TopBorder topBorder189 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder121 = new LeftBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder121 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder140 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder154 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders209.Append(topBorder189);
            tableCellBorders209.Append(leftBorder121);
            tableCellBorders209.Append(rightBorder121);
            tableCellBorders209.Append(insideHorizontalBorder140);
            tableCellBorders209.Append(insideVerticalBorder154);
            Shading shading204 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties299.Append(tableCellBorders209);
            tableStyleConditionalFormattingTableCellProperties299.Append(shading204);

            tableStyleProperties364.Append(runPropertiesBaseStyle214);
            tableStyleProperties364.Append(tableStyleConditionalFormattingTableProperties299);
            tableStyleProperties364.Append(tableStyleConditionalFormattingTableCellProperties299);

            TableStyleProperties tableStyleProperties365 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle215 = new RunPropertiesBaseStyle();
            Bold bold191 = new Bold();
            BoldComplexScript boldComplexScript189 = new BoldComplexScript();

            runPropertiesBaseStyle215.Append(bold191);
            runPropertiesBaseStyle215.Append(boldComplexScript189);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties300 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties300 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders210 = new TableCellBorders();
            LeftBorder leftBorder122 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder182 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder122 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder141 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder155 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders210.Append(leftBorder122);
            tableCellBorders210.Append(bottomBorder182);
            tableCellBorders210.Append(rightBorder122);
            tableCellBorders210.Append(insideHorizontalBorder141);
            tableCellBorders210.Append(insideVerticalBorder155);
            Shading shading205 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties300.Append(tableCellBorders210);
            tableStyleConditionalFormattingTableCellProperties300.Append(shading205);

            tableStyleProperties365.Append(runPropertiesBaseStyle215);
            tableStyleProperties365.Append(tableStyleConditionalFormattingTableProperties300);
            tableStyleProperties365.Append(tableStyleConditionalFormattingTableCellProperties300);

            TableStyleProperties tableStyleProperties366 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties82 = new StyleParagraphProperties();
            Justification justification20 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties82.Append(justification20);

            RunPropertiesBaseStyle runPropertiesBaseStyle216 = new RunPropertiesBaseStyle();
            Italic italic43 = new Italic();
            ItalicComplexScript italicComplexScript41 = new ItalicComplexScript();

            runPropertiesBaseStyle216.Append(italic43);
            runPropertiesBaseStyle216.Append(italicComplexScript41);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties301 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties301 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders211 = new TableCellBorders();
            TopBorder topBorder190 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder123 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder183 = new BottomBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder142 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder156 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders211.Append(topBorder190);
            tableCellBorders211.Append(leftBorder123);
            tableCellBorders211.Append(bottomBorder183);
            tableCellBorders211.Append(insideHorizontalBorder142);
            tableCellBorders211.Append(insideVerticalBorder156);
            Shading shading206 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties301.Append(tableCellBorders211);
            tableStyleConditionalFormattingTableCellProperties301.Append(shading206);

            tableStyleProperties366.Append(styleParagraphProperties82);
            tableStyleProperties366.Append(runPropertiesBaseStyle216);
            tableStyleProperties366.Append(tableStyleConditionalFormattingTableProperties301);
            tableStyleProperties366.Append(tableStyleConditionalFormattingTableCellProperties301);

            TableStyleProperties tableStyleProperties367 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle217 = new RunPropertiesBaseStyle();
            Italic italic44 = new Italic();
            ItalicComplexScript italicComplexScript42 = new ItalicComplexScript();

            runPropertiesBaseStyle217.Append(italic44);
            runPropertiesBaseStyle217.Append(italicComplexScript42);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties302 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties302 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders212 = new TableCellBorders();
            TopBorder topBorder191 = new TopBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder184 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder123 = new RightBorder() { Val = BorderValues.Nil };
            InsideHorizontalBorder insideHorizontalBorder143 = new InsideHorizontalBorder() { Val = BorderValues.Nil };
            InsideVerticalBorder insideVerticalBorder157 = new InsideVerticalBorder() { Val = BorderValues.Nil };

            tableCellBorders212.Append(topBorder191);
            tableCellBorders212.Append(bottomBorder184);
            tableCellBorders212.Append(rightBorder123);
            tableCellBorders212.Append(insideHorizontalBorder143);
            tableCellBorders212.Append(insideVerticalBorder157);
            Shading shading207 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties302.Append(tableCellBorders212);
            tableStyleConditionalFormattingTableCellProperties302.Append(shading207);

            tableStyleProperties367.Append(runPropertiesBaseStyle217);
            tableStyleProperties367.Append(tableStyleConditionalFormattingTableProperties302);
            tableStyleProperties367.Append(tableStyleConditionalFormattingTableCellProperties302);

            TableStyleProperties tableStyleProperties368 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties303 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties303 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading208 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties303.Append(shading208);

            tableStyleProperties368.Append(tableStyleConditionalFormattingTableProperties303);
            tableStyleProperties368.Append(tableStyleConditionalFormattingTableCellProperties303);

            TableStyleProperties tableStyleProperties369 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties304 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties304 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading209 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties304.Append(shading209);

            tableStyleProperties369.Append(tableStyleConditionalFormattingTableProperties304);
            tableStyleProperties369.Append(tableStyleConditionalFormattingTableCellProperties304);

            TableStyleProperties tableStyleProperties370 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties305 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties305 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders213 = new TableCellBorders();
            BottomBorder bottomBorder185 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders213.Append(bottomBorder185);

            tableStyleConditionalFormattingTableCellProperties305.Append(tableCellBorders213);

            tableStyleProperties370.Append(tableStyleConditionalFormattingTableProperties305);
            tableStyleProperties370.Append(tableStyleConditionalFormattingTableCellProperties305);

            TableStyleProperties tableStyleProperties371 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties306 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties306 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders214 = new TableCellBorders();
            BottomBorder bottomBorder186 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders214.Append(bottomBorder186);

            tableStyleConditionalFormattingTableCellProperties306.Append(tableCellBorders214);

            tableStyleProperties371.Append(tableStyleConditionalFormattingTableProperties306);
            tableStyleProperties371.Append(tableStyleConditionalFormattingTableCellProperties306);

            TableStyleProperties tableStyleProperties372 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties307 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties307 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders215 = new TableCellBorders();
            TopBorder topBorder192 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders215.Append(topBorder192);

            tableStyleConditionalFormattingTableCellProperties307.Append(tableCellBorders215);

            tableStyleProperties372.Append(tableStyleConditionalFormattingTableProperties307);
            tableStyleProperties372.Append(tableStyleConditionalFormattingTableCellProperties307);

            TableStyleProperties tableStyleProperties373 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties308 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties308 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders216 = new TableCellBorders();
            TopBorder topBorder193 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders216.Append(topBorder193);

            tableStyleConditionalFormattingTableCellProperties308.Append(tableCellBorders216);

            tableStyleProperties373.Append(tableStyleConditionalFormattingTableProperties308);
            tableStyleProperties373.Append(tableStyleConditionalFormattingTableCellProperties308);

            style87.Append(styleName87);
            style87.Append(basedOn82);
            style87.Append(uIPriority86);
            style87.Append(rsid83);
            style87.Append(styleParagraphProperties81);
            style87.Append(styleRunProperties39);
            style87.Append(styleTableProperties57);
            style87.Append(tableStyleProperties364);
            style87.Append(tableStyleProperties365);
            style87.Append(tableStyleProperties366);
            style87.Append(tableStyleProperties367);
            style87.Append(tableStyleProperties368);
            style87.Append(tableStyleProperties369);
            style87.Append(tableStyleProperties370);
            style87.Append(tableStyleProperties371);
            style87.Append(tableStyleProperties372);
            style87.Append(tableStyleProperties373);

            Style style88 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light" };
            StyleName styleName88 = new StyleName() { Val = "List Table 1 Light" };
            BasedOn basedOn83 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority87 = new UIPriority() { Val = 46 };
            Rsid rsid84 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties83 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines78 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties83.Append(spacingBetweenLines78);

            StyleTableProperties styleTableProperties58 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize55 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize55 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties58.Append(tableStyleRowBandSize55);
            styleTableProperties58.Append(tableStyleColumnBandSize55);

            TableStyleProperties tableStyleProperties374 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle218 = new RunPropertiesBaseStyle();
            Bold bold192 = new Bold();
            BoldComplexScript boldComplexScript190 = new BoldComplexScript();

            runPropertiesBaseStyle218.Append(bold192);
            runPropertiesBaseStyle218.Append(boldComplexScript190);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties309 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties309 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders217 = new TableCellBorders();
            BottomBorder bottomBorder187 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders217.Append(bottomBorder187);

            tableStyleConditionalFormattingTableCellProperties309.Append(tableCellBorders217);

            tableStyleProperties374.Append(runPropertiesBaseStyle218);
            tableStyleProperties374.Append(tableStyleConditionalFormattingTableProperties309);
            tableStyleProperties374.Append(tableStyleConditionalFormattingTableCellProperties309);

            TableStyleProperties tableStyleProperties375 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle219 = new RunPropertiesBaseStyle();
            Bold bold193 = new Bold();
            BoldComplexScript boldComplexScript191 = new BoldComplexScript();

            runPropertiesBaseStyle219.Append(bold193);
            runPropertiesBaseStyle219.Append(boldComplexScript191);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties310 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties310 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders218 = new TableCellBorders();
            TopBorder topBorder194 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders218.Append(topBorder194);

            tableStyleConditionalFormattingTableCellProperties310.Append(tableCellBorders218);

            tableStyleProperties375.Append(runPropertiesBaseStyle219);
            tableStyleProperties375.Append(tableStyleConditionalFormattingTableProperties310);
            tableStyleProperties375.Append(tableStyleConditionalFormattingTableCellProperties310);

            TableStyleProperties tableStyleProperties376 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle220 = new RunPropertiesBaseStyle();
            Bold bold194 = new Bold();
            BoldComplexScript boldComplexScript192 = new BoldComplexScript();

            runPropertiesBaseStyle220.Append(bold194);
            runPropertiesBaseStyle220.Append(boldComplexScript192);

            tableStyleProperties376.Append(runPropertiesBaseStyle220);

            TableStyleProperties tableStyleProperties377 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle221 = new RunPropertiesBaseStyle();
            Bold bold195 = new Bold();
            BoldComplexScript boldComplexScript193 = new BoldComplexScript();

            runPropertiesBaseStyle221.Append(bold195);
            runPropertiesBaseStyle221.Append(boldComplexScript193);

            tableStyleProperties377.Append(runPropertiesBaseStyle221);

            TableStyleProperties tableStyleProperties378 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties311 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties311 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading210 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties311.Append(shading210);

            tableStyleProperties378.Append(tableStyleConditionalFormattingTableProperties311);
            tableStyleProperties378.Append(tableStyleConditionalFormattingTableCellProperties311);

            TableStyleProperties tableStyleProperties379 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties312 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties312 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading211 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties312.Append(shading211);

            tableStyleProperties379.Append(tableStyleConditionalFormattingTableProperties312);
            tableStyleProperties379.Append(tableStyleConditionalFormattingTableCellProperties312);

            style88.Append(styleName88);
            style88.Append(basedOn83);
            style88.Append(uIPriority87);
            style88.Append(rsid84);
            style88.Append(styleParagraphProperties83);
            style88.Append(styleTableProperties58);
            style88.Append(tableStyleProperties374);
            style88.Append(tableStyleProperties375);
            style88.Append(tableStyleProperties376);
            style88.Append(tableStyleProperties377);
            style88.Append(tableStyleProperties378);
            style88.Append(tableStyleProperties379);

            Style style89 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent1" };
            StyleName styleName89 = new StyleName() { Val = "List Table 1 Light Accent 1" };
            BasedOn basedOn84 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority88 = new UIPriority() { Val = 46 };
            Rsid rsid85 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties84 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines79 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties84.Append(spacingBetweenLines79);

            StyleTableProperties styleTableProperties59 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize56 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize56 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties59.Append(tableStyleRowBandSize56);
            styleTableProperties59.Append(tableStyleColumnBandSize56);

            TableStyleProperties tableStyleProperties380 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle222 = new RunPropertiesBaseStyle();
            Bold bold196 = new Bold();
            BoldComplexScript boldComplexScript194 = new BoldComplexScript();

            runPropertiesBaseStyle222.Append(bold196);
            runPropertiesBaseStyle222.Append(boldComplexScript194);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties313 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties313 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders219 = new TableCellBorders();
            BottomBorder bottomBorder188 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders219.Append(bottomBorder188);

            tableStyleConditionalFormattingTableCellProperties313.Append(tableCellBorders219);

            tableStyleProperties380.Append(runPropertiesBaseStyle222);
            tableStyleProperties380.Append(tableStyleConditionalFormattingTableProperties313);
            tableStyleProperties380.Append(tableStyleConditionalFormattingTableCellProperties313);

            TableStyleProperties tableStyleProperties381 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle223 = new RunPropertiesBaseStyle();
            Bold bold197 = new Bold();
            BoldComplexScript boldComplexScript195 = new BoldComplexScript();

            runPropertiesBaseStyle223.Append(bold197);
            runPropertiesBaseStyle223.Append(boldComplexScript195);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties314 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties314 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders220 = new TableCellBorders();
            TopBorder topBorder195 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders220.Append(topBorder195);

            tableStyleConditionalFormattingTableCellProperties314.Append(tableCellBorders220);

            tableStyleProperties381.Append(runPropertiesBaseStyle223);
            tableStyleProperties381.Append(tableStyleConditionalFormattingTableProperties314);
            tableStyleProperties381.Append(tableStyleConditionalFormattingTableCellProperties314);

            TableStyleProperties tableStyleProperties382 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle224 = new RunPropertiesBaseStyle();
            Bold bold198 = new Bold();
            BoldComplexScript boldComplexScript196 = new BoldComplexScript();

            runPropertiesBaseStyle224.Append(bold198);
            runPropertiesBaseStyle224.Append(boldComplexScript196);

            tableStyleProperties382.Append(runPropertiesBaseStyle224);

            TableStyleProperties tableStyleProperties383 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle225 = new RunPropertiesBaseStyle();
            Bold bold199 = new Bold();
            BoldComplexScript boldComplexScript197 = new BoldComplexScript();

            runPropertiesBaseStyle225.Append(bold199);
            runPropertiesBaseStyle225.Append(boldComplexScript197);

            tableStyleProperties383.Append(runPropertiesBaseStyle225);

            TableStyleProperties tableStyleProperties384 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties315 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties315 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading212 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties315.Append(shading212);

            tableStyleProperties384.Append(tableStyleConditionalFormattingTableProperties315);
            tableStyleProperties384.Append(tableStyleConditionalFormattingTableCellProperties315);

            TableStyleProperties tableStyleProperties385 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties316 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties316 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading213 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties316.Append(shading213);

            tableStyleProperties385.Append(tableStyleConditionalFormattingTableProperties316);
            tableStyleProperties385.Append(tableStyleConditionalFormattingTableCellProperties316);

            style89.Append(styleName89);
            style89.Append(basedOn84);
            style89.Append(uIPriority88);
            style89.Append(rsid85);
            style89.Append(styleParagraphProperties84);
            style89.Append(styleTableProperties59);
            style89.Append(tableStyleProperties380);
            style89.Append(tableStyleProperties381);
            style89.Append(tableStyleProperties382);
            style89.Append(tableStyleProperties383);
            style89.Append(tableStyleProperties384);
            style89.Append(tableStyleProperties385);

            Style style90 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent2" };
            StyleName styleName90 = new StyleName() { Val = "List Table 1 Light Accent 2" };
            BasedOn basedOn85 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority89 = new UIPriority() { Val = 46 };
            Rsid rsid86 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties85 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines80 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties85.Append(spacingBetweenLines80);

            StyleTableProperties styleTableProperties60 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize57 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize57 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties60.Append(tableStyleRowBandSize57);
            styleTableProperties60.Append(tableStyleColumnBandSize57);

            TableStyleProperties tableStyleProperties386 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle226 = new RunPropertiesBaseStyle();
            Bold bold200 = new Bold();
            BoldComplexScript boldComplexScript198 = new BoldComplexScript();

            runPropertiesBaseStyle226.Append(bold200);
            runPropertiesBaseStyle226.Append(boldComplexScript198);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties317 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties317 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders221 = new TableCellBorders();
            BottomBorder bottomBorder189 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders221.Append(bottomBorder189);

            tableStyleConditionalFormattingTableCellProperties317.Append(tableCellBorders221);

            tableStyleProperties386.Append(runPropertiesBaseStyle226);
            tableStyleProperties386.Append(tableStyleConditionalFormattingTableProperties317);
            tableStyleProperties386.Append(tableStyleConditionalFormattingTableCellProperties317);

            TableStyleProperties tableStyleProperties387 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle227 = new RunPropertiesBaseStyle();
            Bold bold201 = new Bold();
            BoldComplexScript boldComplexScript199 = new BoldComplexScript();

            runPropertiesBaseStyle227.Append(bold201);
            runPropertiesBaseStyle227.Append(boldComplexScript199);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties318 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties318 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders222 = new TableCellBorders();
            TopBorder topBorder196 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders222.Append(topBorder196);

            tableStyleConditionalFormattingTableCellProperties318.Append(tableCellBorders222);

            tableStyleProperties387.Append(runPropertiesBaseStyle227);
            tableStyleProperties387.Append(tableStyleConditionalFormattingTableProperties318);
            tableStyleProperties387.Append(tableStyleConditionalFormattingTableCellProperties318);

            TableStyleProperties tableStyleProperties388 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle228 = new RunPropertiesBaseStyle();
            Bold bold202 = new Bold();
            BoldComplexScript boldComplexScript200 = new BoldComplexScript();

            runPropertiesBaseStyle228.Append(bold202);
            runPropertiesBaseStyle228.Append(boldComplexScript200);

            tableStyleProperties388.Append(runPropertiesBaseStyle228);

            TableStyleProperties tableStyleProperties389 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle229 = new RunPropertiesBaseStyle();
            Bold bold203 = new Bold();
            BoldComplexScript boldComplexScript201 = new BoldComplexScript();

            runPropertiesBaseStyle229.Append(bold203);
            runPropertiesBaseStyle229.Append(boldComplexScript201);

            tableStyleProperties389.Append(runPropertiesBaseStyle229);

            TableStyleProperties tableStyleProperties390 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties319 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties319 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading214 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties319.Append(shading214);

            tableStyleProperties390.Append(tableStyleConditionalFormattingTableProperties319);
            tableStyleProperties390.Append(tableStyleConditionalFormattingTableCellProperties319);

            TableStyleProperties tableStyleProperties391 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties320 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties320 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading215 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties320.Append(shading215);

            tableStyleProperties391.Append(tableStyleConditionalFormattingTableProperties320);
            tableStyleProperties391.Append(tableStyleConditionalFormattingTableCellProperties320);

            style90.Append(styleName90);
            style90.Append(basedOn85);
            style90.Append(uIPriority89);
            style90.Append(rsid86);
            style90.Append(styleParagraphProperties85);
            style90.Append(styleTableProperties60);
            style90.Append(tableStyleProperties386);
            style90.Append(tableStyleProperties387);
            style90.Append(tableStyleProperties388);
            style90.Append(tableStyleProperties389);
            style90.Append(tableStyleProperties390);
            style90.Append(tableStyleProperties391);

            Style style91 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent3" };
            StyleName styleName91 = new StyleName() { Val = "List Table 1 Light Accent 3" };
            BasedOn basedOn86 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority90 = new UIPriority() { Val = 46 };
            Rsid rsid87 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties86 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines81 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties86.Append(spacingBetweenLines81);

            StyleTableProperties styleTableProperties61 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize58 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize58 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties61.Append(tableStyleRowBandSize58);
            styleTableProperties61.Append(tableStyleColumnBandSize58);

            TableStyleProperties tableStyleProperties392 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle230 = new RunPropertiesBaseStyle();
            Bold bold204 = new Bold();
            BoldComplexScript boldComplexScript202 = new BoldComplexScript();

            runPropertiesBaseStyle230.Append(bold204);
            runPropertiesBaseStyle230.Append(boldComplexScript202);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties321 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties321 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders223 = new TableCellBorders();
            BottomBorder bottomBorder190 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders223.Append(bottomBorder190);

            tableStyleConditionalFormattingTableCellProperties321.Append(tableCellBorders223);

            tableStyleProperties392.Append(runPropertiesBaseStyle230);
            tableStyleProperties392.Append(tableStyleConditionalFormattingTableProperties321);
            tableStyleProperties392.Append(tableStyleConditionalFormattingTableCellProperties321);

            TableStyleProperties tableStyleProperties393 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle231 = new RunPropertiesBaseStyle();
            Bold bold205 = new Bold();
            BoldComplexScript boldComplexScript203 = new BoldComplexScript();

            runPropertiesBaseStyle231.Append(bold205);
            runPropertiesBaseStyle231.Append(boldComplexScript203);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties322 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties322 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders224 = new TableCellBorders();
            TopBorder topBorder197 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders224.Append(topBorder197);

            tableStyleConditionalFormattingTableCellProperties322.Append(tableCellBorders224);

            tableStyleProperties393.Append(runPropertiesBaseStyle231);
            tableStyleProperties393.Append(tableStyleConditionalFormattingTableProperties322);
            tableStyleProperties393.Append(tableStyleConditionalFormattingTableCellProperties322);

            TableStyleProperties tableStyleProperties394 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle232 = new RunPropertiesBaseStyle();
            Bold bold206 = new Bold();
            BoldComplexScript boldComplexScript204 = new BoldComplexScript();

            runPropertiesBaseStyle232.Append(bold206);
            runPropertiesBaseStyle232.Append(boldComplexScript204);

            tableStyleProperties394.Append(runPropertiesBaseStyle232);

            TableStyleProperties tableStyleProperties395 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle233 = new RunPropertiesBaseStyle();
            Bold bold207 = new Bold();
            BoldComplexScript boldComplexScript205 = new BoldComplexScript();

            runPropertiesBaseStyle233.Append(bold207);
            runPropertiesBaseStyle233.Append(boldComplexScript205);

            tableStyleProperties395.Append(runPropertiesBaseStyle233);

            TableStyleProperties tableStyleProperties396 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties323 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties323 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading216 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties323.Append(shading216);

            tableStyleProperties396.Append(tableStyleConditionalFormattingTableProperties323);
            tableStyleProperties396.Append(tableStyleConditionalFormattingTableCellProperties323);

            TableStyleProperties tableStyleProperties397 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties324 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties324 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading217 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties324.Append(shading217);

            tableStyleProperties397.Append(tableStyleConditionalFormattingTableProperties324);
            tableStyleProperties397.Append(tableStyleConditionalFormattingTableCellProperties324);

            style91.Append(styleName91);
            style91.Append(basedOn86);
            style91.Append(uIPriority90);
            style91.Append(rsid87);
            style91.Append(styleParagraphProperties86);
            style91.Append(styleTableProperties61);
            style91.Append(tableStyleProperties392);
            style91.Append(tableStyleProperties393);
            style91.Append(tableStyleProperties394);
            style91.Append(tableStyleProperties395);
            style91.Append(tableStyleProperties396);
            style91.Append(tableStyleProperties397);

            Style style92 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent4" };
            StyleName styleName92 = new StyleName() { Val = "List Table 1 Light Accent 4" };
            BasedOn basedOn87 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority91 = new UIPriority() { Val = 46 };
            Rsid rsid88 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties87 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines82 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties87.Append(spacingBetweenLines82);

            StyleTableProperties styleTableProperties62 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize59 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize59 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties62.Append(tableStyleRowBandSize59);
            styleTableProperties62.Append(tableStyleColumnBandSize59);

            TableStyleProperties tableStyleProperties398 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle234 = new RunPropertiesBaseStyle();
            Bold bold208 = new Bold();
            BoldComplexScript boldComplexScript206 = new BoldComplexScript();

            runPropertiesBaseStyle234.Append(bold208);
            runPropertiesBaseStyle234.Append(boldComplexScript206);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties325 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties325 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders225 = new TableCellBorders();
            BottomBorder bottomBorder191 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders225.Append(bottomBorder191);

            tableStyleConditionalFormattingTableCellProperties325.Append(tableCellBorders225);

            tableStyleProperties398.Append(runPropertiesBaseStyle234);
            tableStyleProperties398.Append(tableStyleConditionalFormattingTableProperties325);
            tableStyleProperties398.Append(tableStyleConditionalFormattingTableCellProperties325);

            TableStyleProperties tableStyleProperties399 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle235 = new RunPropertiesBaseStyle();
            Bold bold209 = new Bold();
            BoldComplexScript boldComplexScript207 = new BoldComplexScript();

            runPropertiesBaseStyle235.Append(bold209);
            runPropertiesBaseStyle235.Append(boldComplexScript207);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties326 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties326 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders226 = new TableCellBorders();
            TopBorder topBorder198 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders226.Append(topBorder198);

            tableStyleConditionalFormattingTableCellProperties326.Append(tableCellBorders226);

            tableStyleProperties399.Append(runPropertiesBaseStyle235);
            tableStyleProperties399.Append(tableStyleConditionalFormattingTableProperties326);
            tableStyleProperties399.Append(tableStyleConditionalFormattingTableCellProperties326);

            TableStyleProperties tableStyleProperties400 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle236 = new RunPropertiesBaseStyle();
            Bold bold210 = new Bold();
            BoldComplexScript boldComplexScript208 = new BoldComplexScript();

            runPropertiesBaseStyle236.Append(bold210);
            runPropertiesBaseStyle236.Append(boldComplexScript208);

            tableStyleProperties400.Append(runPropertiesBaseStyle236);

            TableStyleProperties tableStyleProperties401 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle237 = new RunPropertiesBaseStyle();
            Bold bold211 = new Bold();
            BoldComplexScript boldComplexScript209 = new BoldComplexScript();

            runPropertiesBaseStyle237.Append(bold211);
            runPropertiesBaseStyle237.Append(boldComplexScript209);

            tableStyleProperties401.Append(runPropertiesBaseStyle237);

            TableStyleProperties tableStyleProperties402 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties327 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties327 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading218 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties327.Append(shading218);

            tableStyleProperties402.Append(tableStyleConditionalFormattingTableProperties327);
            tableStyleProperties402.Append(tableStyleConditionalFormattingTableCellProperties327);

            TableStyleProperties tableStyleProperties403 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties328 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties328 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading219 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties328.Append(shading219);

            tableStyleProperties403.Append(tableStyleConditionalFormattingTableProperties328);
            tableStyleProperties403.Append(tableStyleConditionalFormattingTableCellProperties328);

            style92.Append(styleName92);
            style92.Append(basedOn87);
            style92.Append(uIPriority91);
            style92.Append(rsid88);
            style92.Append(styleParagraphProperties87);
            style92.Append(styleTableProperties62);
            style92.Append(tableStyleProperties398);
            style92.Append(tableStyleProperties399);
            style92.Append(tableStyleProperties400);
            style92.Append(tableStyleProperties401);
            style92.Append(tableStyleProperties402);
            style92.Append(tableStyleProperties403);

            Style style93 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent5" };
            StyleName styleName93 = new StyleName() { Val = "List Table 1 Light Accent 5" };
            BasedOn basedOn88 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority92 = new UIPriority() { Val = 46 };
            Rsid rsid89 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties88 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines83 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties88.Append(spacingBetweenLines83);

            StyleTableProperties styleTableProperties63 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize60 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize60 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties63.Append(tableStyleRowBandSize60);
            styleTableProperties63.Append(tableStyleColumnBandSize60);

            TableStyleProperties tableStyleProperties404 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle238 = new RunPropertiesBaseStyle();
            Bold bold212 = new Bold();
            BoldComplexScript boldComplexScript210 = new BoldComplexScript();

            runPropertiesBaseStyle238.Append(bold212);
            runPropertiesBaseStyle238.Append(boldComplexScript210);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties329 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties329 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders227 = new TableCellBorders();
            BottomBorder bottomBorder192 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders227.Append(bottomBorder192);

            tableStyleConditionalFormattingTableCellProperties329.Append(tableCellBorders227);

            tableStyleProperties404.Append(runPropertiesBaseStyle238);
            tableStyleProperties404.Append(tableStyleConditionalFormattingTableProperties329);
            tableStyleProperties404.Append(tableStyleConditionalFormattingTableCellProperties329);

            TableStyleProperties tableStyleProperties405 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle239 = new RunPropertiesBaseStyle();
            Bold bold213 = new Bold();
            BoldComplexScript boldComplexScript211 = new BoldComplexScript();

            runPropertiesBaseStyle239.Append(bold213);
            runPropertiesBaseStyle239.Append(boldComplexScript211);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties330 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties330 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders228 = new TableCellBorders();
            TopBorder topBorder199 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders228.Append(topBorder199);

            tableStyleConditionalFormattingTableCellProperties330.Append(tableCellBorders228);

            tableStyleProperties405.Append(runPropertiesBaseStyle239);
            tableStyleProperties405.Append(tableStyleConditionalFormattingTableProperties330);
            tableStyleProperties405.Append(tableStyleConditionalFormattingTableCellProperties330);

            TableStyleProperties tableStyleProperties406 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle240 = new RunPropertiesBaseStyle();
            Bold bold214 = new Bold();
            BoldComplexScript boldComplexScript212 = new BoldComplexScript();

            runPropertiesBaseStyle240.Append(bold214);
            runPropertiesBaseStyle240.Append(boldComplexScript212);

            tableStyleProperties406.Append(runPropertiesBaseStyle240);

            TableStyleProperties tableStyleProperties407 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle241 = new RunPropertiesBaseStyle();
            Bold bold215 = new Bold();
            BoldComplexScript boldComplexScript213 = new BoldComplexScript();

            runPropertiesBaseStyle241.Append(bold215);
            runPropertiesBaseStyle241.Append(boldComplexScript213);

            tableStyleProperties407.Append(runPropertiesBaseStyle241);

            TableStyleProperties tableStyleProperties408 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties331 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties331 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading220 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties331.Append(shading220);

            tableStyleProperties408.Append(tableStyleConditionalFormattingTableProperties331);
            tableStyleProperties408.Append(tableStyleConditionalFormattingTableCellProperties331);

            TableStyleProperties tableStyleProperties409 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties332 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties332 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading221 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties332.Append(shading221);

            tableStyleProperties409.Append(tableStyleConditionalFormattingTableProperties332);
            tableStyleProperties409.Append(tableStyleConditionalFormattingTableCellProperties332);

            style93.Append(styleName93);
            style93.Append(basedOn88);
            style93.Append(uIPriority92);
            style93.Append(rsid89);
            style93.Append(styleParagraphProperties88);
            style93.Append(styleTableProperties63);
            style93.Append(tableStyleProperties404);
            style93.Append(tableStyleProperties405);
            style93.Append(tableStyleProperties406);
            style93.Append(tableStyleProperties407);
            style93.Append(tableStyleProperties408);
            style93.Append(tableStyleProperties409);

            Style style94 = new Style() { Type = StyleValues.Table, StyleId = "ListTable1Light-Accent6" };
            StyleName styleName94 = new StyleName() { Val = "List Table 1 Light Accent 6" };
            BasedOn basedOn89 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority93 = new UIPriority() { Val = 46 };
            Rsid rsid90 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties89 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines84 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties89.Append(spacingBetweenLines84);

            StyleTableProperties styleTableProperties64 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize61 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize61 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties64.Append(tableStyleRowBandSize61);
            styleTableProperties64.Append(tableStyleColumnBandSize61);

            TableStyleProperties tableStyleProperties410 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle242 = new RunPropertiesBaseStyle();
            Bold bold216 = new Bold();
            BoldComplexScript boldComplexScript214 = new BoldComplexScript();

            runPropertiesBaseStyle242.Append(bold216);
            runPropertiesBaseStyle242.Append(boldComplexScript214);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties333 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties333 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders229 = new TableCellBorders();
            BottomBorder bottomBorder193 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders229.Append(bottomBorder193);

            tableStyleConditionalFormattingTableCellProperties333.Append(tableCellBorders229);

            tableStyleProperties410.Append(runPropertiesBaseStyle242);
            tableStyleProperties410.Append(tableStyleConditionalFormattingTableProperties333);
            tableStyleProperties410.Append(tableStyleConditionalFormattingTableCellProperties333);

            TableStyleProperties tableStyleProperties411 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle243 = new RunPropertiesBaseStyle();
            Bold bold217 = new Bold();
            BoldComplexScript boldComplexScript215 = new BoldComplexScript();

            runPropertiesBaseStyle243.Append(bold217);
            runPropertiesBaseStyle243.Append(boldComplexScript215);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties334 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties334 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders230 = new TableCellBorders();
            TopBorder topBorder200 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders230.Append(topBorder200);

            tableStyleConditionalFormattingTableCellProperties334.Append(tableCellBorders230);

            tableStyleProperties411.Append(runPropertiesBaseStyle243);
            tableStyleProperties411.Append(tableStyleConditionalFormattingTableProperties334);
            tableStyleProperties411.Append(tableStyleConditionalFormattingTableCellProperties334);

            TableStyleProperties tableStyleProperties412 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle244 = new RunPropertiesBaseStyle();
            Bold bold218 = new Bold();
            BoldComplexScript boldComplexScript216 = new BoldComplexScript();

            runPropertiesBaseStyle244.Append(bold218);
            runPropertiesBaseStyle244.Append(boldComplexScript216);

            tableStyleProperties412.Append(runPropertiesBaseStyle244);

            TableStyleProperties tableStyleProperties413 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle245 = new RunPropertiesBaseStyle();
            Bold bold219 = new Bold();
            BoldComplexScript boldComplexScript217 = new BoldComplexScript();

            runPropertiesBaseStyle245.Append(bold219);
            runPropertiesBaseStyle245.Append(boldComplexScript217);

            tableStyleProperties413.Append(runPropertiesBaseStyle245);

            TableStyleProperties tableStyleProperties414 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties335 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties335 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading222 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties335.Append(shading222);

            tableStyleProperties414.Append(tableStyleConditionalFormattingTableProperties335);
            tableStyleProperties414.Append(tableStyleConditionalFormattingTableCellProperties335);

            TableStyleProperties tableStyleProperties415 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties336 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties336 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading223 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties336.Append(shading223);

            tableStyleProperties415.Append(tableStyleConditionalFormattingTableProperties336);
            tableStyleProperties415.Append(tableStyleConditionalFormattingTableCellProperties336);

            style94.Append(styleName94);
            style94.Append(basedOn89);
            style94.Append(uIPriority93);
            style94.Append(rsid90);
            style94.Append(styleParagraphProperties89);
            style94.Append(styleTableProperties64);
            style94.Append(tableStyleProperties410);
            style94.Append(tableStyleProperties411);
            style94.Append(tableStyleProperties412);
            style94.Append(tableStyleProperties413);
            style94.Append(tableStyleProperties414);
            style94.Append(tableStyleProperties415);

            Style style95 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2" };
            StyleName styleName95 = new StyleName() { Val = "List Table 2" };
            BasedOn basedOn90 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority94 = new UIPriority() { Val = 47 };
            Rsid rsid91 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties90 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines85 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties90.Append(spacingBetweenLines85);

            StyleTableProperties styleTableProperties65 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize62 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize62 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders54 = new TableBorders();
            TopBorder topBorder201 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder194 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder144 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders54.Append(topBorder201);
            tableBorders54.Append(bottomBorder194);
            tableBorders54.Append(insideHorizontalBorder144);

            styleTableProperties65.Append(tableStyleRowBandSize62);
            styleTableProperties65.Append(tableStyleColumnBandSize62);
            styleTableProperties65.Append(tableBorders54);

            TableStyleProperties tableStyleProperties416 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle246 = new RunPropertiesBaseStyle();
            Bold bold220 = new Bold();
            BoldComplexScript boldComplexScript218 = new BoldComplexScript();

            runPropertiesBaseStyle246.Append(bold220);
            runPropertiesBaseStyle246.Append(boldComplexScript218);

            tableStyleProperties416.Append(runPropertiesBaseStyle246);

            TableStyleProperties tableStyleProperties417 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle247 = new RunPropertiesBaseStyle();
            Bold bold221 = new Bold();
            BoldComplexScript boldComplexScript219 = new BoldComplexScript();

            runPropertiesBaseStyle247.Append(bold221);
            runPropertiesBaseStyle247.Append(boldComplexScript219);

            tableStyleProperties417.Append(runPropertiesBaseStyle247);

            TableStyleProperties tableStyleProperties418 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle248 = new RunPropertiesBaseStyle();
            Bold bold222 = new Bold();
            BoldComplexScript boldComplexScript220 = new BoldComplexScript();

            runPropertiesBaseStyle248.Append(bold222);
            runPropertiesBaseStyle248.Append(boldComplexScript220);

            tableStyleProperties418.Append(runPropertiesBaseStyle248);

            TableStyleProperties tableStyleProperties419 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle249 = new RunPropertiesBaseStyle();
            Bold bold223 = new Bold();
            BoldComplexScript boldComplexScript221 = new BoldComplexScript();

            runPropertiesBaseStyle249.Append(bold223);
            runPropertiesBaseStyle249.Append(boldComplexScript221);

            tableStyleProperties419.Append(runPropertiesBaseStyle249);

            TableStyleProperties tableStyleProperties420 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties337 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties337 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading224 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties337.Append(shading224);

            tableStyleProperties420.Append(tableStyleConditionalFormattingTableProperties337);
            tableStyleProperties420.Append(tableStyleConditionalFormattingTableCellProperties337);

            TableStyleProperties tableStyleProperties421 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties338 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties338 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading225 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties338.Append(shading225);

            tableStyleProperties421.Append(tableStyleConditionalFormattingTableProperties338);
            tableStyleProperties421.Append(tableStyleConditionalFormattingTableCellProperties338);

            style95.Append(styleName95);
            style95.Append(basedOn90);
            style95.Append(uIPriority94);
            style95.Append(rsid91);
            style95.Append(styleParagraphProperties90);
            style95.Append(styleTableProperties65);
            style95.Append(tableStyleProperties416);
            style95.Append(tableStyleProperties417);
            style95.Append(tableStyleProperties418);
            style95.Append(tableStyleProperties419);
            style95.Append(tableStyleProperties420);
            style95.Append(tableStyleProperties421);

            Style style96 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent1" };
            StyleName styleName96 = new StyleName() { Val = "List Table 2 Accent 1" };
            BasedOn basedOn91 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority95 = new UIPriority() { Val = 47 };
            Rsid rsid92 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties91 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines86 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties91.Append(spacingBetweenLines86);

            StyleTableProperties styleTableProperties66 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize63 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize63 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders55 = new TableBorders();
            TopBorder topBorder202 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder195 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder145 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders55.Append(topBorder202);
            tableBorders55.Append(bottomBorder195);
            tableBorders55.Append(insideHorizontalBorder145);

            styleTableProperties66.Append(tableStyleRowBandSize63);
            styleTableProperties66.Append(tableStyleColumnBandSize63);
            styleTableProperties66.Append(tableBorders55);

            TableStyleProperties tableStyleProperties422 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle250 = new RunPropertiesBaseStyle();
            Bold bold224 = new Bold();
            BoldComplexScript boldComplexScript222 = new BoldComplexScript();

            runPropertiesBaseStyle250.Append(bold224);
            runPropertiesBaseStyle250.Append(boldComplexScript222);

            tableStyleProperties422.Append(runPropertiesBaseStyle250);

            TableStyleProperties tableStyleProperties423 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle251 = new RunPropertiesBaseStyle();
            Bold bold225 = new Bold();
            BoldComplexScript boldComplexScript223 = new BoldComplexScript();

            runPropertiesBaseStyle251.Append(bold225);
            runPropertiesBaseStyle251.Append(boldComplexScript223);

            tableStyleProperties423.Append(runPropertiesBaseStyle251);

            TableStyleProperties tableStyleProperties424 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle252 = new RunPropertiesBaseStyle();
            Bold bold226 = new Bold();
            BoldComplexScript boldComplexScript224 = new BoldComplexScript();

            runPropertiesBaseStyle252.Append(bold226);
            runPropertiesBaseStyle252.Append(boldComplexScript224);

            tableStyleProperties424.Append(runPropertiesBaseStyle252);

            TableStyleProperties tableStyleProperties425 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle253 = new RunPropertiesBaseStyle();
            Bold bold227 = new Bold();
            BoldComplexScript boldComplexScript225 = new BoldComplexScript();

            runPropertiesBaseStyle253.Append(bold227);
            runPropertiesBaseStyle253.Append(boldComplexScript225);

            tableStyleProperties425.Append(runPropertiesBaseStyle253);

            TableStyleProperties tableStyleProperties426 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties339 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties339 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading226 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties339.Append(shading226);

            tableStyleProperties426.Append(tableStyleConditionalFormattingTableProperties339);
            tableStyleProperties426.Append(tableStyleConditionalFormattingTableCellProperties339);

            TableStyleProperties tableStyleProperties427 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties340 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties340 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading227 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties340.Append(shading227);

            tableStyleProperties427.Append(tableStyleConditionalFormattingTableProperties340);
            tableStyleProperties427.Append(tableStyleConditionalFormattingTableCellProperties340);

            style96.Append(styleName96);
            style96.Append(basedOn91);
            style96.Append(uIPriority95);
            style96.Append(rsid92);
            style96.Append(styleParagraphProperties91);
            style96.Append(styleTableProperties66);
            style96.Append(tableStyleProperties422);
            style96.Append(tableStyleProperties423);
            style96.Append(tableStyleProperties424);
            style96.Append(tableStyleProperties425);
            style96.Append(tableStyleProperties426);
            style96.Append(tableStyleProperties427);

            Style style97 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent2" };
            StyleName styleName97 = new StyleName() { Val = "List Table 2 Accent 2" };
            BasedOn basedOn92 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority96 = new UIPriority() { Val = 47 };
            Rsid rsid93 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties92 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines87 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties92.Append(spacingBetweenLines87);

            StyleTableProperties styleTableProperties67 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize64 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize64 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders56 = new TableBorders();
            TopBorder topBorder203 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder196 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder146 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders56.Append(topBorder203);
            tableBorders56.Append(bottomBorder196);
            tableBorders56.Append(insideHorizontalBorder146);

            styleTableProperties67.Append(tableStyleRowBandSize64);
            styleTableProperties67.Append(tableStyleColumnBandSize64);
            styleTableProperties67.Append(tableBorders56);

            TableStyleProperties tableStyleProperties428 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle254 = new RunPropertiesBaseStyle();
            Bold bold228 = new Bold();
            BoldComplexScript boldComplexScript226 = new BoldComplexScript();

            runPropertiesBaseStyle254.Append(bold228);
            runPropertiesBaseStyle254.Append(boldComplexScript226);

            tableStyleProperties428.Append(runPropertiesBaseStyle254);

            TableStyleProperties tableStyleProperties429 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle255 = new RunPropertiesBaseStyle();
            Bold bold229 = new Bold();
            BoldComplexScript boldComplexScript227 = new BoldComplexScript();

            runPropertiesBaseStyle255.Append(bold229);
            runPropertiesBaseStyle255.Append(boldComplexScript227);

            tableStyleProperties429.Append(runPropertiesBaseStyle255);

            TableStyleProperties tableStyleProperties430 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle256 = new RunPropertiesBaseStyle();
            Bold bold230 = new Bold();
            BoldComplexScript boldComplexScript228 = new BoldComplexScript();

            runPropertiesBaseStyle256.Append(bold230);
            runPropertiesBaseStyle256.Append(boldComplexScript228);

            tableStyleProperties430.Append(runPropertiesBaseStyle256);

            TableStyleProperties tableStyleProperties431 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle257 = new RunPropertiesBaseStyle();
            Bold bold231 = new Bold();
            BoldComplexScript boldComplexScript229 = new BoldComplexScript();

            runPropertiesBaseStyle257.Append(bold231);
            runPropertiesBaseStyle257.Append(boldComplexScript229);

            tableStyleProperties431.Append(runPropertiesBaseStyle257);

            TableStyleProperties tableStyleProperties432 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties341 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties341 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading228 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties341.Append(shading228);

            tableStyleProperties432.Append(tableStyleConditionalFormattingTableProperties341);
            tableStyleProperties432.Append(tableStyleConditionalFormattingTableCellProperties341);

            TableStyleProperties tableStyleProperties433 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties342 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties342 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading229 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties342.Append(shading229);

            tableStyleProperties433.Append(tableStyleConditionalFormattingTableProperties342);
            tableStyleProperties433.Append(tableStyleConditionalFormattingTableCellProperties342);

            style97.Append(styleName97);
            style97.Append(basedOn92);
            style97.Append(uIPriority96);
            style97.Append(rsid93);
            style97.Append(styleParagraphProperties92);
            style97.Append(styleTableProperties67);
            style97.Append(tableStyleProperties428);
            style97.Append(tableStyleProperties429);
            style97.Append(tableStyleProperties430);
            style97.Append(tableStyleProperties431);
            style97.Append(tableStyleProperties432);
            style97.Append(tableStyleProperties433);

            Style style98 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent3" };
            StyleName styleName98 = new StyleName() { Val = "List Table 2 Accent 3" };
            BasedOn basedOn93 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority97 = new UIPriority() { Val = 47 };
            Rsid rsid94 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties93 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines88 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties93.Append(spacingBetweenLines88);

            StyleTableProperties styleTableProperties68 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize65 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize65 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders57 = new TableBorders();
            TopBorder topBorder204 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder197 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder147 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders57.Append(topBorder204);
            tableBorders57.Append(bottomBorder197);
            tableBorders57.Append(insideHorizontalBorder147);

            styleTableProperties68.Append(tableStyleRowBandSize65);
            styleTableProperties68.Append(tableStyleColumnBandSize65);
            styleTableProperties68.Append(tableBorders57);

            TableStyleProperties tableStyleProperties434 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle258 = new RunPropertiesBaseStyle();
            Bold bold232 = new Bold();
            BoldComplexScript boldComplexScript230 = new BoldComplexScript();

            runPropertiesBaseStyle258.Append(bold232);
            runPropertiesBaseStyle258.Append(boldComplexScript230);

            tableStyleProperties434.Append(runPropertiesBaseStyle258);

            TableStyleProperties tableStyleProperties435 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle259 = new RunPropertiesBaseStyle();
            Bold bold233 = new Bold();
            BoldComplexScript boldComplexScript231 = new BoldComplexScript();

            runPropertiesBaseStyle259.Append(bold233);
            runPropertiesBaseStyle259.Append(boldComplexScript231);

            tableStyleProperties435.Append(runPropertiesBaseStyle259);

            TableStyleProperties tableStyleProperties436 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle260 = new RunPropertiesBaseStyle();
            Bold bold234 = new Bold();
            BoldComplexScript boldComplexScript232 = new BoldComplexScript();

            runPropertiesBaseStyle260.Append(bold234);
            runPropertiesBaseStyle260.Append(boldComplexScript232);

            tableStyleProperties436.Append(runPropertiesBaseStyle260);

            TableStyleProperties tableStyleProperties437 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle261 = new RunPropertiesBaseStyle();
            Bold bold235 = new Bold();
            BoldComplexScript boldComplexScript233 = new BoldComplexScript();

            runPropertiesBaseStyle261.Append(bold235);
            runPropertiesBaseStyle261.Append(boldComplexScript233);

            tableStyleProperties437.Append(runPropertiesBaseStyle261);

            TableStyleProperties tableStyleProperties438 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties343 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties343 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading230 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties343.Append(shading230);

            tableStyleProperties438.Append(tableStyleConditionalFormattingTableProperties343);
            tableStyleProperties438.Append(tableStyleConditionalFormattingTableCellProperties343);

            TableStyleProperties tableStyleProperties439 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties344 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties344 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading231 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties344.Append(shading231);

            tableStyleProperties439.Append(tableStyleConditionalFormattingTableProperties344);
            tableStyleProperties439.Append(tableStyleConditionalFormattingTableCellProperties344);

            style98.Append(styleName98);
            style98.Append(basedOn93);
            style98.Append(uIPriority97);
            style98.Append(rsid94);
            style98.Append(styleParagraphProperties93);
            style98.Append(styleTableProperties68);
            style98.Append(tableStyleProperties434);
            style98.Append(tableStyleProperties435);
            style98.Append(tableStyleProperties436);
            style98.Append(tableStyleProperties437);
            style98.Append(tableStyleProperties438);
            style98.Append(tableStyleProperties439);

            Style style99 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent4" };
            StyleName styleName99 = new StyleName() { Val = "List Table 2 Accent 4" };
            BasedOn basedOn94 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority98 = new UIPriority() { Val = 47 };
            Rsid rsid95 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties94 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines89 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties94.Append(spacingBetweenLines89);

            StyleTableProperties styleTableProperties69 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize66 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize66 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders58 = new TableBorders();
            TopBorder topBorder205 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder198 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder148 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders58.Append(topBorder205);
            tableBorders58.Append(bottomBorder198);
            tableBorders58.Append(insideHorizontalBorder148);

            styleTableProperties69.Append(tableStyleRowBandSize66);
            styleTableProperties69.Append(tableStyleColumnBandSize66);
            styleTableProperties69.Append(tableBorders58);

            TableStyleProperties tableStyleProperties440 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle262 = new RunPropertiesBaseStyle();
            Bold bold236 = new Bold();
            BoldComplexScript boldComplexScript234 = new BoldComplexScript();

            runPropertiesBaseStyle262.Append(bold236);
            runPropertiesBaseStyle262.Append(boldComplexScript234);

            tableStyleProperties440.Append(runPropertiesBaseStyle262);

            TableStyleProperties tableStyleProperties441 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle263 = new RunPropertiesBaseStyle();
            Bold bold237 = new Bold();
            BoldComplexScript boldComplexScript235 = new BoldComplexScript();

            runPropertiesBaseStyle263.Append(bold237);
            runPropertiesBaseStyle263.Append(boldComplexScript235);

            tableStyleProperties441.Append(runPropertiesBaseStyle263);

            TableStyleProperties tableStyleProperties442 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle264 = new RunPropertiesBaseStyle();
            Bold bold238 = new Bold();
            BoldComplexScript boldComplexScript236 = new BoldComplexScript();

            runPropertiesBaseStyle264.Append(bold238);
            runPropertiesBaseStyle264.Append(boldComplexScript236);

            tableStyleProperties442.Append(runPropertiesBaseStyle264);

            TableStyleProperties tableStyleProperties443 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle265 = new RunPropertiesBaseStyle();
            Bold bold239 = new Bold();
            BoldComplexScript boldComplexScript237 = new BoldComplexScript();

            runPropertiesBaseStyle265.Append(bold239);
            runPropertiesBaseStyle265.Append(boldComplexScript237);

            tableStyleProperties443.Append(runPropertiesBaseStyle265);

            TableStyleProperties tableStyleProperties444 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties345 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties345 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading232 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties345.Append(shading232);

            tableStyleProperties444.Append(tableStyleConditionalFormattingTableProperties345);
            tableStyleProperties444.Append(tableStyleConditionalFormattingTableCellProperties345);

            TableStyleProperties tableStyleProperties445 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties346 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties346 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading233 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties346.Append(shading233);

            tableStyleProperties445.Append(tableStyleConditionalFormattingTableProperties346);
            tableStyleProperties445.Append(tableStyleConditionalFormattingTableCellProperties346);

            style99.Append(styleName99);
            style99.Append(basedOn94);
            style99.Append(uIPriority98);
            style99.Append(rsid95);
            style99.Append(styleParagraphProperties94);
            style99.Append(styleTableProperties69);
            style99.Append(tableStyleProperties440);
            style99.Append(tableStyleProperties441);
            style99.Append(tableStyleProperties442);
            style99.Append(tableStyleProperties443);
            style99.Append(tableStyleProperties444);
            style99.Append(tableStyleProperties445);

            Style style100 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent5" };
            StyleName styleName100 = new StyleName() { Val = "List Table 2 Accent 5" };
            BasedOn basedOn95 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority99 = new UIPriority() { Val = 47 };
            Rsid rsid96 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties95 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines90 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties95.Append(spacingBetweenLines90);

            StyleTableProperties styleTableProperties70 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize67 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize67 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders59 = new TableBorders();
            TopBorder topBorder206 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder199 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder149 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders59.Append(topBorder206);
            tableBorders59.Append(bottomBorder199);
            tableBorders59.Append(insideHorizontalBorder149);

            styleTableProperties70.Append(tableStyleRowBandSize67);
            styleTableProperties70.Append(tableStyleColumnBandSize67);
            styleTableProperties70.Append(tableBorders59);

            TableStyleProperties tableStyleProperties446 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle266 = new RunPropertiesBaseStyle();
            Bold bold240 = new Bold();
            BoldComplexScript boldComplexScript238 = new BoldComplexScript();

            runPropertiesBaseStyle266.Append(bold240);
            runPropertiesBaseStyle266.Append(boldComplexScript238);

            tableStyleProperties446.Append(runPropertiesBaseStyle266);

            TableStyleProperties tableStyleProperties447 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle267 = new RunPropertiesBaseStyle();
            Bold bold241 = new Bold();
            BoldComplexScript boldComplexScript239 = new BoldComplexScript();

            runPropertiesBaseStyle267.Append(bold241);
            runPropertiesBaseStyle267.Append(boldComplexScript239);

            tableStyleProperties447.Append(runPropertiesBaseStyle267);

            TableStyleProperties tableStyleProperties448 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle268 = new RunPropertiesBaseStyle();
            Bold bold242 = new Bold();
            BoldComplexScript boldComplexScript240 = new BoldComplexScript();

            runPropertiesBaseStyle268.Append(bold242);
            runPropertiesBaseStyle268.Append(boldComplexScript240);

            tableStyleProperties448.Append(runPropertiesBaseStyle268);

            TableStyleProperties tableStyleProperties449 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle269 = new RunPropertiesBaseStyle();
            Bold bold243 = new Bold();
            BoldComplexScript boldComplexScript241 = new BoldComplexScript();

            runPropertiesBaseStyle269.Append(bold243);
            runPropertiesBaseStyle269.Append(boldComplexScript241);

            tableStyleProperties449.Append(runPropertiesBaseStyle269);

            TableStyleProperties tableStyleProperties450 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties347 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties347 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading234 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties347.Append(shading234);

            tableStyleProperties450.Append(tableStyleConditionalFormattingTableProperties347);
            tableStyleProperties450.Append(tableStyleConditionalFormattingTableCellProperties347);

            TableStyleProperties tableStyleProperties451 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties348 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties348 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading235 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties348.Append(shading235);

            tableStyleProperties451.Append(tableStyleConditionalFormattingTableProperties348);
            tableStyleProperties451.Append(tableStyleConditionalFormattingTableCellProperties348);

            style100.Append(styleName100);
            style100.Append(basedOn95);
            style100.Append(uIPriority99);
            style100.Append(rsid96);
            style100.Append(styleParagraphProperties95);
            style100.Append(styleTableProperties70);
            style100.Append(tableStyleProperties446);
            style100.Append(tableStyleProperties447);
            style100.Append(tableStyleProperties448);
            style100.Append(tableStyleProperties449);
            style100.Append(tableStyleProperties450);
            style100.Append(tableStyleProperties451);

            Style style101 = new Style() { Type = StyleValues.Table, StyleId = "ListTable2-Accent6" };
            StyleName styleName101 = new StyleName() { Val = "List Table 2 Accent 6" };
            BasedOn basedOn96 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority100 = new UIPriority() { Val = 47 };
            Rsid rsid97 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties96 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines91 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties96.Append(spacingBetweenLines91);

            StyleTableProperties styleTableProperties71 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize68 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize68 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders60 = new TableBorders();
            TopBorder topBorder207 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder200 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder150 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders60.Append(topBorder207);
            tableBorders60.Append(bottomBorder200);
            tableBorders60.Append(insideHorizontalBorder150);

            styleTableProperties71.Append(tableStyleRowBandSize68);
            styleTableProperties71.Append(tableStyleColumnBandSize68);
            styleTableProperties71.Append(tableBorders60);

            TableStyleProperties tableStyleProperties452 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle270 = new RunPropertiesBaseStyle();
            Bold bold244 = new Bold();
            BoldComplexScript boldComplexScript242 = new BoldComplexScript();

            runPropertiesBaseStyle270.Append(bold244);
            runPropertiesBaseStyle270.Append(boldComplexScript242);

            tableStyleProperties452.Append(runPropertiesBaseStyle270);

            TableStyleProperties tableStyleProperties453 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle271 = new RunPropertiesBaseStyle();
            Bold bold245 = new Bold();
            BoldComplexScript boldComplexScript243 = new BoldComplexScript();

            runPropertiesBaseStyle271.Append(bold245);
            runPropertiesBaseStyle271.Append(boldComplexScript243);

            tableStyleProperties453.Append(runPropertiesBaseStyle271);

            TableStyleProperties tableStyleProperties454 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle272 = new RunPropertiesBaseStyle();
            Bold bold246 = new Bold();
            BoldComplexScript boldComplexScript244 = new BoldComplexScript();

            runPropertiesBaseStyle272.Append(bold246);
            runPropertiesBaseStyle272.Append(boldComplexScript244);

            tableStyleProperties454.Append(runPropertiesBaseStyle272);

            TableStyleProperties tableStyleProperties455 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle273 = new RunPropertiesBaseStyle();
            Bold bold247 = new Bold();
            BoldComplexScript boldComplexScript245 = new BoldComplexScript();

            runPropertiesBaseStyle273.Append(bold247);
            runPropertiesBaseStyle273.Append(boldComplexScript245);

            tableStyleProperties455.Append(runPropertiesBaseStyle273);

            TableStyleProperties tableStyleProperties456 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties349 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties349 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading236 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties349.Append(shading236);

            tableStyleProperties456.Append(tableStyleConditionalFormattingTableProperties349);
            tableStyleProperties456.Append(tableStyleConditionalFormattingTableCellProperties349);

            TableStyleProperties tableStyleProperties457 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties350 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties350 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading237 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties350.Append(shading237);

            tableStyleProperties457.Append(tableStyleConditionalFormattingTableProperties350);
            tableStyleProperties457.Append(tableStyleConditionalFormattingTableCellProperties350);

            style101.Append(styleName101);
            style101.Append(basedOn96);
            style101.Append(uIPriority100);
            style101.Append(rsid97);
            style101.Append(styleParagraphProperties96);
            style101.Append(styleTableProperties71);
            style101.Append(tableStyleProperties452);
            style101.Append(tableStyleProperties453);
            style101.Append(tableStyleProperties454);
            style101.Append(tableStyleProperties455);
            style101.Append(tableStyleProperties456);
            style101.Append(tableStyleProperties457);

            Style style102 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3" };
            StyleName styleName102 = new StyleName() { Val = "List Table 3" };
            BasedOn basedOn97 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority101 = new UIPriority() { Val = 48 };
            Rsid rsid98 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties97 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines92 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties97.Append(spacingBetweenLines92);

            StyleTableProperties styleTableProperties72 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize69 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize69 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders61 = new TableBorders();
            TopBorder topBorder208 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder124 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder201 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder124 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders61.Append(topBorder208);
            tableBorders61.Append(leftBorder124);
            tableBorders61.Append(bottomBorder201);
            tableBorders61.Append(rightBorder124);

            styleTableProperties72.Append(tableStyleRowBandSize69);
            styleTableProperties72.Append(tableStyleColumnBandSize69);
            styleTableProperties72.Append(tableBorders61);

            TableStyleProperties tableStyleProperties458 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle274 = new RunPropertiesBaseStyle();
            Bold bold248 = new Bold();
            BoldComplexScript boldComplexScript246 = new BoldComplexScript();
            Color color79 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle274.Append(bold248);
            runPropertiesBaseStyle274.Append(boldComplexScript246);
            runPropertiesBaseStyle274.Append(color79);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties351 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties351 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading238 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties351.Append(shading238);

            tableStyleProperties458.Append(runPropertiesBaseStyle274);
            tableStyleProperties458.Append(tableStyleConditionalFormattingTableProperties351);
            tableStyleProperties458.Append(tableStyleConditionalFormattingTableCellProperties351);

            TableStyleProperties tableStyleProperties459 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle275 = new RunPropertiesBaseStyle();
            Bold bold249 = new Bold();
            BoldComplexScript boldComplexScript247 = new BoldComplexScript();

            runPropertiesBaseStyle275.Append(bold249);
            runPropertiesBaseStyle275.Append(boldComplexScript247);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties352 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties352 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders231 = new TableCellBorders();
            TopBorder topBorder209 = new TopBorder() { Val = BorderValues.Double, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders231.Append(topBorder209);
            Shading shading239 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties352.Append(tableCellBorders231);
            tableStyleConditionalFormattingTableCellProperties352.Append(shading239);

            tableStyleProperties459.Append(runPropertiesBaseStyle275);
            tableStyleProperties459.Append(tableStyleConditionalFormattingTableProperties352);
            tableStyleProperties459.Append(tableStyleConditionalFormattingTableCellProperties352);

            TableStyleProperties tableStyleProperties460 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle276 = new RunPropertiesBaseStyle();
            Bold bold250 = new Bold();
            BoldComplexScript boldComplexScript248 = new BoldComplexScript();

            runPropertiesBaseStyle276.Append(bold250);
            runPropertiesBaseStyle276.Append(boldComplexScript248);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties353 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties353 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders232 = new TableCellBorders();
            RightBorder rightBorder125 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders232.Append(rightBorder125);
            Shading shading240 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties353.Append(tableCellBorders232);
            tableStyleConditionalFormattingTableCellProperties353.Append(shading240);

            tableStyleProperties460.Append(runPropertiesBaseStyle276);
            tableStyleProperties460.Append(tableStyleConditionalFormattingTableProperties353);
            tableStyleProperties460.Append(tableStyleConditionalFormattingTableCellProperties353);

            TableStyleProperties tableStyleProperties461 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle277 = new RunPropertiesBaseStyle();
            Bold bold251 = new Bold();
            BoldComplexScript boldComplexScript249 = new BoldComplexScript();

            runPropertiesBaseStyle277.Append(bold251);
            runPropertiesBaseStyle277.Append(boldComplexScript249);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties354 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties354 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders233 = new TableCellBorders();
            LeftBorder leftBorder125 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders233.Append(leftBorder125);
            Shading shading241 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties354.Append(tableCellBorders233);
            tableStyleConditionalFormattingTableCellProperties354.Append(shading241);

            tableStyleProperties461.Append(runPropertiesBaseStyle277);
            tableStyleProperties461.Append(tableStyleConditionalFormattingTableProperties354);
            tableStyleProperties461.Append(tableStyleConditionalFormattingTableCellProperties354);

            TableStyleProperties tableStyleProperties462 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties355 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties355 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders234 = new TableCellBorders();
            LeftBorder leftBorder126 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder126 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders234.Append(leftBorder126);
            tableCellBorders234.Append(rightBorder126);

            tableStyleConditionalFormattingTableCellProperties355.Append(tableCellBorders234);

            tableStyleProperties462.Append(tableStyleConditionalFormattingTableProperties355);
            tableStyleProperties462.Append(tableStyleConditionalFormattingTableCellProperties355);

            TableStyleProperties tableStyleProperties463 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties356 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties356 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders235 = new TableCellBorders();
            TopBorder topBorder210 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder202 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder151 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders235.Append(topBorder210);
            tableCellBorders235.Append(bottomBorder202);
            tableCellBorders235.Append(insideHorizontalBorder151);

            tableStyleConditionalFormattingTableCellProperties356.Append(tableCellBorders235);

            tableStyleProperties463.Append(tableStyleConditionalFormattingTableProperties356);
            tableStyleProperties463.Append(tableStyleConditionalFormattingTableCellProperties356);

            TableStyleProperties tableStyleProperties464 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties357 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties357 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders236 = new TableCellBorders();
            LeftBorder leftBorder127 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder203 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders236.Append(leftBorder127);
            tableCellBorders236.Append(bottomBorder203);

            tableStyleConditionalFormattingTableCellProperties357.Append(tableCellBorders236);

            tableStyleProperties464.Append(tableStyleConditionalFormattingTableProperties357);
            tableStyleProperties464.Append(tableStyleConditionalFormattingTableCellProperties357);

            TableStyleProperties tableStyleProperties465 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties358 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties358 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders237 = new TableCellBorders();
            BottomBorder bottomBorder204 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder127 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders237.Append(bottomBorder204);
            tableCellBorders237.Append(rightBorder127);

            tableStyleConditionalFormattingTableCellProperties358.Append(tableCellBorders237);

            tableStyleProperties465.Append(tableStyleConditionalFormattingTableProperties358);
            tableStyleProperties465.Append(tableStyleConditionalFormattingTableCellProperties358);

            TableStyleProperties tableStyleProperties466 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties359 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties359 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders238 = new TableCellBorders();
            TopBorder topBorder211 = new TopBorder() { Val = BorderValues.Double, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder128 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders238.Append(topBorder211);
            tableCellBorders238.Append(leftBorder128);

            tableStyleConditionalFormattingTableCellProperties359.Append(tableCellBorders238);

            tableStyleProperties466.Append(tableStyleConditionalFormattingTableProperties359);
            tableStyleProperties466.Append(tableStyleConditionalFormattingTableCellProperties359);

            TableStyleProperties tableStyleProperties467 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties360 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties360 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders239 = new TableCellBorders();
            TopBorder topBorder212 = new TopBorder() { Val = BorderValues.Double, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder128 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders239.Append(topBorder212);
            tableCellBorders239.Append(rightBorder128);

            tableStyleConditionalFormattingTableCellProperties360.Append(tableCellBorders239);

            tableStyleProperties467.Append(tableStyleConditionalFormattingTableProperties360);
            tableStyleProperties467.Append(tableStyleConditionalFormattingTableCellProperties360);

            style102.Append(styleName102);
            style102.Append(basedOn97);
            style102.Append(uIPriority101);
            style102.Append(rsid98);
            style102.Append(styleParagraphProperties97);
            style102.Append(styleTableProperties72);
            style102.Append(tableStyleProperties458);
            style102.Append(tableStyleProperties459);
            style102.Append(tableStyleProperties460);
            style102.Append(tableStyleProperties461);
            style102.Append(tableStyleProperties462);
            style102.Append(tableStyleProperties463);
            style102.Append(tableStyleProperties464);
            style102.Append(tableStyleProperties465);
            style102.Append(tableStyleProperties466);
            style102.Append(tableStyleProperties467);

            Style style103 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent1" };
            StyleName styleName103 = new StyleName() { Val = "List Table 3 Accent 1" };
            BasedOn basedOn98 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority102 = new UIPriority() { Val = 48 };
            Rsid rsid99 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties98 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines93 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties98.Append(spacingBetweenLines93);

            StyleTableProperties styleTableProperties73 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize70 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize70 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders62 = new TableBorders();
            TopBorder topBorder213 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder129 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder205 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder129 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders62.Append(topBorder213);
            tableBorders62.Append(leftBorder129);
            tableBorders62.Append(bottomBorder205);
            tableBorders62.Append(rightBorder129);

            styleTableProperties73.Append(tableStyleRowBandSize70);
            styleTableProperties73.Append(tableStyleColumnBandSize70);
            styleTableProperties73.Append(tableBorders62);

            TableStyleProperties tableStyleProperties468 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle278 = new RunPropertiesBaseStyle();
            Bold bold252 = new Bold();
            BoldComplexScript boldComplexScript250 = new BoldComplexScript();
            Color color80 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle278.Append(bold252);
            runPropertiesBaseStyle278.Append(boldComplexScript250);
            runPropertiesBaseStyle278.Append(color80);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties361 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties361 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading242 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties361.Append(shading242);

            tableStyleProperties468.Append(runPropertiesBaseStyle278);
            tableStyleProperties468.Append(tableStyleConditionalFormattingTableProperties361);
            tableStyleProperties468.Append(tableStyleConditionalFormattingTableCellProperties361);

            TableStyleProperties tableStyleProperties469 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle279 = new RunPropertiesBaseStyle();
            Bold bold253 = new Bold();
            BoldComplexScript boldComplexScript251 = new BoldComplexScript();

            runPropertiesBaseStyle279.Append(bold253);
            runPropertiesBaseStyle279.Append(boldComplexScript251);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties362 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties362 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders240 = new TableCellBorders();
            TopBorder topBorder214 = new TopBorder() { Val = BorderValues.Double, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders240.Append(topBorder214);
            Shading shading243 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties362.Append(tableCellBorders240);
            tableStyleConditionalFormattingTableCellProperties362.Append(shading243);

            tableStyleProperties469.Append(runPropertiesBaseStyle279);
            tableStyleProperties469.Append(tableStyleConditionalFormattingTableProperties362);
            tableStyleProperties469.Append(tableStyleConditionalFormattingTableCellProperties362);

            TableStyleProperties tableStyleProperties470 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle280 = new RunPropertiesBaseStyle();
            Bold bold254 = new Bold();
            BoldComplexScript boldComplexScript252 = new BoldComplexScript();

            runPropertiesBaseStyle280.Append(bold254);
            runPropertiesBaseStyle280.Append(boldComplexScript252);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties363 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties363 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders241 = new TableCellBorders();
            RightBorder rightBorder130 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders241.Append(rightBorder130);
            Shading shading244 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties363.Append(tableCellBorders241);
            tableStyleConditionalFormattingTableCellProperties363.Append(shading244);

            tableStyleProperties470.Append(runPropertiesBaseStyle280);
            tableStyleProperties470.Append(tableStyleConditionalFormattingTableProperties363);
            tableStyleProperties470.Append(tableStyleConditionalFormattingTableCellProperties363);

            TableStyleProperties tableStyleProperties471 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle281 = new RunPropertiesBaseStyle();
            Bold bold255 = new Bold();
            BoldComplexScript boldComplexScript253 = new BoldComplexScript();

            runPropertiesBaseStyle281.Append(bold255);
            runPropertiesBaseStyle281.Append(boldComplexScript253);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties364 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties364 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders242 = new TableCellBorders();
            LeftBorder leftBorder130 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders242.Append(leftBorder130);
            Shading shading245 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties364.Append(tableCellBorders242);
            tableStyleConditionalFormattingTableCellProperties364.Append(shading245);

            tableStyleProperties471.Append(runPropertiesBaseStyle281);
            tableStyleProperties471.Append(tableStyleConditionalFormattingTableProperties364);
            tableStyleProperties471.Append(tableStyleConditionalFormattingTableCellProperties364);

            TableStyleProperties tableStyleProperties472 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties365 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties365 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders243 = new TableCellBorders();
            LeftBorder leftBorder131 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder131 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders243.Append(leftBorder131);
            tableCellBorders243.Append(rightBorder131);

            tableStyleConditionalFormattingTableCellProperties365.Append(tableCellBorders243);

            tableStyleProperties472.Append(tableStyleConditionalFormattingTableProperties365);
            tableStyleProperties472.Append(tableStyleConditionalFormattingTableCellProperties365);

            TableStyleProperties tableStyleProperties473 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties366 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties366 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders244 = new TableCellBorders();
            TopBorder topBorder215 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder206 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder152 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders244.Append(topBorder215);
            tableCellBorders244.Append(bottomBorder206);
            tableCellBorders244.Append(insideHorizontalBorder152);

            tableStyleConditionalFormattingTableCellProperties366.Append(tableCellBorders244);

            tableStyleProperties473.Append(tableStyleConditionalFormattingTableProperties366);
            tableStyleProperties473.Append(tableStyleConditionalFormattingTableCellProperties366);

            TableStyleProperties tableStyleProperties474 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties367 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties367 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders245 = new TableCellBorders();
            LeftBorder leftBorder132 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder207 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders245.Append(leftBorder132);
            tableCellBorders245.Append(bottomBorder207);

            tableStyleConditionalFormattingTableCellProperties367.Append(tableCellBorders245);

            tableStyleProperties474.Append(tableStyleConditionalFormattingTableProperties367);
            tableStyleProperties474.Append(tableStyleConditionalFormattingTableCellProperties367);

            TableStyleProperties tableStyleProperties475 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties368 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties368 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders246 = new TableCellBorders();
            BottomBorder bottomBorder208 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder132 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders246.Append(bottomBorder208);
            tableCellBorders246.Append(rightBorder132);

            tableStyleConditionalFormattingTableCellProperties368.Append(tableCellBorders246);

            tableStyleProperties475.Append(tableStyleConditionalFormattingTableProperties368);
            tableStyleProperties475.Append(tableStyleConditionalFormattingTableCellProperties368);

            TableStyleProperties tableStyleProperties476 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties369 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties369 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders247 = new TableCellBorders();
            TopBorder topBorder216 = new TopBorder() { Val = BorderValues.Double, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder133 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders247.Append(topBorder216);
            tableCellBorders247.Append(leftBorder133);

            tableStyleConditionalFormattingTableCellProperties369.Append(tableCellBorders247);

            tableStyleProperties476.Append(tableStyleConditionalFormattingTableProperties369);
            tableStyleProperties476.Append(tableStyleConditionalFormattingTableCellProperties369);

            TableStyleProperties tableStyleProperties477 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties370 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties370 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders248 = new TableCellBorders();
            TopBorder topBorder217 = new TopBorder() { Val = BorderValues.Double, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder133 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders248.Append(topBorder217);
            tableCellBorders248.Append(rightBorder133);

            tableStyleConditionalFormattingTableCellProperties370.Append(tableCellBorders248);

            tableStyleProperties477.Append(tableStyleConditionalFormattingTableProperties370);
            tableStyleProperties477.Append(tableStyleConditionalFormattingTableCellProperties370);

            style103.Append(styleName103);
            style103.Append(basedOn98);
            style103.Append(uIPriority102);
            style103.Append(rsid99);
            style103.Append(styleParagraphProperties98);
            style103.Append(styleTableProperties73);
            style103.Append(tableStyleProperties468);
            style103.Append(tableStyleProperties469);
            style103.Append(tableStyleProperties470);
            style103.Append(tableStyleProperties471);
            style103.Append(tableStyleProperties472);
            style103.Append(tableStyleProperties473);
            style103.Append(tableStyleProperties474);
            style103.Append(tableStyleProperties475);
            style103.Append(tableStyleProperties476);
            style103.Append(tableStyleProperties477);

            Style style104 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent2" };
            StyleName styleName104 = new StyleName() { Val = "List Table 3 Accent 2" };
            BasedOn basedOn99 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority103 = new UIPriority() { Val = 48 };
            Rsid rsid100 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties99 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines94 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties99.Append(spacingBetweenLines94);

            StyleTableProperties styleTableProperties74 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize71 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize71 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders63 = new TableBorders();
            TopBorder topBorder218 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder134 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder209 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder134 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders63.Append(topBorder218);
            tableBorders63.Append(leftBorder134);
            tableBorders63.Append(bottomBorder209);
            tableBorders63.Append(rightBorder134);

            styleTableProperties74.Append(tableStyleRowBandSize71);
            styleTableProperties74.Append(tableStyleColumnBandSize71);
            styleTableProperties74.Append(tableBorders63);

            TableStyleProperties tableStyleProperties478 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle282 = new RunPropertiesBaseStyle();
            Bold bold256 = new Bold();
            BoldComplexScript boldComplexScript254 = new BoldComplexScript();
            Color color81 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle282.Append(bold256);
            runPropertiesBaseStyle282.Append(boldComplexScript254);
            runPropertiesBaseStyle282.Append(color81);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties371 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties371 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading246 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties371.Append(shading246);

            tableStyleProperties478.Append(runPropertiesBaseStyle282);
            tableStyleProperties478.Append(tableStyleConditionalFormattingTableProperties371);
            tableStyleProperties478.Append(tableStyleConditionalFormattingTableCellProperties371);

            TableStyleProperties tableStyleProperties479 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle283 = new RunPropertiesBaseStyle();
            Bold bold257 = new Bold();
            BoldComplexScript boldComplexScript255 = new BoldComplexScript();

            runPropertiesBaseStyle283.Append(bold257);
            runPropertiesBaseStyle283.Append(boldComplexScript255);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties372 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties372 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders249 = new TableCellBorders();
            TopBorder topBorder219 = new TopBorder() { Val = BorderValues.Double, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders249.Append(topBorder219);
            Shading shading247 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties372.Append(tableCellBorders249);
            tableStyleConditionalFormattingTableCellProperties372.Append(shading247);

            tableStyleProperties479.Append(runPropertiesBaseStyle283);
            tableStyleProperties479.Append(tableStyleConditionalFormattingTableProperties372);
            tableStyleProperties479.Append(tableStyleConditionalFormattingTableCellProperties372);

            TableStyleProperties tableStyleProperties480 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle284 = new RunPropertiesBaseStyle();
            Bold bold258 = new Bold();
            BoldComplexScript boldComplexScript256 = new BoldComplexScript();

            runPropertiesBaseStyle284.Append(bold258);
            runPropertiesBaseStyle284.Append(boldComplexScript256);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties373 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties373 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders250 = new TableCellBorders();
            RightBorder rightBorder135 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders250.Append(rightBorder135);
            Shading shading248 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties373.Append(tableCellBorders250);
            tableStyleConditionalFormattingTableCellProperties373.Append(shading248);

            tableStyleProperties480.Append(runPropertiesBaseStyle284);
            tableStyleProperties480.Append(tableStyleConditionalFormattingTableProperties373);
            tableStyleProperties480.Append(tableStyleConditionalFormattingTableCellProperties373);

            TableStyleProperties tableStyleProperties481 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle285 = new RunPropertiesBaseStyle();
            Bold bold259 = new Bold();
            BoldComplexScript boldComplexScript257 = new BoldComplexScript();

            runPropertiesBaseStyle285.Append(bold259);
            runPropertiesBaseStyle285.Append(boldComplexScript257);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties374 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties374 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders251 = new TableCellBorders();
            LeftBorder leftBorder135 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders251.Append(leftBorder135);
            Shading shading249 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties374.Append(tableCellBorders251);
            tableStyleConditionalFormattingTableCellProperties374.Append(shading249);

            tableStyleProperties481.Append(runPropertiesBaseStyle285);
            tableStyleProperties481.Append(tableStyleConditionalFormattingTableProperties374);
            tableStyleProperties481.Append(tableStyleConditionalFormattingTableCellProperties374);

            TableStyleProperties tableStyleProperties482 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties375 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties375 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders252 = new TableCellBorders();
            LeftBorder leftBorder136 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder136 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders252.Append(leftBorder136);
            tableCellBorders252.Append(rightBorder136);

            tableStyleConditionalFormattingTableCellProperties375.Append(tableCellBorders252);

            tableStyleProperties482.Append(tableStyleConditionalFormattingTableProperties375);
            tableStyleProperties482.Append(tableStyleConditionalFormattingTableCellProperties375);

            TableStyleProperties tableStyleProperties483 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties376 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties376 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders253 = new TableCellBorders();
            TopBorder topBorder220 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder210 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder153 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders253.Append(topBorder220);
            tableCellBorders253.Append(bottomBorder210);
            tableCellBorders253.Append(insideHorizontalBorder153);

            tableStyleConditionalFormattingTableCellProperties376.Append(tableCellBorders253);

            tableStyleProperties483.Append(tableStyleConditionalFormattingTableProperties376);
            tableStyleProperties483.Append(tableStyleConditionalFormattingTableCellProperties376);

            TableStyleProperties tableStyleProperties484 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties377 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties377 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders254 = new TableCellBorders();
            LeftBorder leftBorder137 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder211 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders254.Append(leftBorder137);
            tableCellBorders254.Append(bottomBorder211);

            tableStyleConditionalFormattingTableCellProperties377.Append(tableCellBorders254);

            tableStyleProperties484.Append(tableStyleConditionalFormattingTableProperties377);
            tableStyleProperties484.Append(tableStyleConditionalFormattingTableCellProperties377);

            TableStyleProperties tableStyleProperties485 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties378 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties378 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders255 = new TableCellBorders();
            BottomBorder bottomBorder212 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder137 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders255.Append(bottomBorder212);
            tableCellBorders255.Append(rightBorder137);

            tableStyleConditionalFormattingTableCellProperties378.Append(tableCellBorders255);

            tableStyleProperties485.Append(tableStyleConditionalFormattingTableProperties378);
            tableStyleProperties485.Append(tableStyleConditionalFormattingTableCellProperties378);

            TableStyleProperties tableStyleProperties486 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties379 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties379 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders256 = new TableCellBorders();
            TopBorder topBorder221 = new TopBorder() { Val = BorderValues.Double, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder138 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders256.Append(topBorder221);
            tableCellBorders256.Append(leftBorder138);

            tableStyleConditionalFormattingTableCellProperties379.Append(tableCellBorders256);

            tableStyleProperties486.Append(tableStyleConditionalFormattingTableProperties379);
            tableStyleProperties486.Append(tableStyleConditionalFormattingTableCellProperties379);

            TableStyleProperties tableStyleProperties487 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties380 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties380 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders257 = new TableCellBorders();
            TopBorder topBorder222 = new TopBorder() { Val = BorderValues.Double, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder138 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders257.Append(topBorder222);
            tableCellBorders257.Append(rightBorder138);

            tableStyleConditionalFormattingTableCellProperties380.Append(tableCellBorders257);

            tableStyleProperties487.Append(tableStyleConditionalFormattingTableProperties380);
            tableStyleProperties487.Append(tableStyleConditionalFormattingTableCellProperties380);

            style104.Append(styleName104);
            style104.Append(basedOn99);
            style104.Append(uIPriority103);
            style104.Append(rsid100);
            style104.Append(styleParagraphProperties99);
            style104.Append(styleTableProperties74);
            style104.Append(tableStyleProperties478);
            style104.Append(tableStyleProperties479);
            style104.Append(tableStyleProperties480);
            style104.Append(tableStyleProperties481);
            style104.Append(tableStyleProperties482);
            style104.Append(tableStyleProperties483);
            style104.Append(tableStyleProperties484);
            style104.Append(tableStyleProperties485);
            style104.Append(tableStyleProperties486);
            style104.Append(tableStyleProperties487);

            Style style105 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent3" };
            StyleName styleName105 = new StyleName() { Val = "List Table 3 Accent 3" };
            BasedOn basedOn100 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority104 = new UIPriority() { Val = 48 };
            Rsid rsid101 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties100 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines95 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties100.Append(spacingBetweenLines95);

            StyleTableProperties styleTableProperties75 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize72 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize72 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders64 = new TableBorders();
            TopBorder topBorder223 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder139 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder213 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder139 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders64.Append(topBorder223);
            tableBorders64.Append(leftBorder139);
            tableBorders64.Append(bottomBorder213);
            tableBorders64.Append(rightBorder139);

            styleTableProperties75.Append(tableStyleRowBandSize72);
            styleTableProperties75.Append(tableStyleColumnBandSize72);
            styleTableProperties75.Append(tableBorders64);

            TableStyleProperties tableStyleProperties488 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle286 = new RunPropertiesBaseStyle();
            Bold bold260 = new Bold();
            BoldComplexScript boldComplexScript258 = new BoldComplexScript();
            Color color82 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle286.Append(bold260);
            runPropertiesBaseStyle286.Append(boldComplexScript258);
            runPropertiesBaseStyle286.Append(color82);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties381 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties381 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading250 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties381.Append(shading250);

            tableStyleProperties488.Append(runPropertiesBaseStyle286);
            tableStyleProperties488.Append(tableStyleConditionalFormattingTableProperties381);
            tableStyleProperties488.Append(tableStyleConditionalFormattingTableCellProperties381);

            TableStyleProperties tableStyleProperties489 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle287 = new RunPropertiesBaseStyle();
            Bold bold261 = new Bold();
            BoldComplexScript boldComplexScript259 = new BoldComplexScript();

            runPropertiesBaseStyle287.Append(bold261);
            runPropertiesBaseStyle287.Append(boldComplexScript259);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties382 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties382 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders258 = new TableCellBorders();
            TopBorder topBorder224 = new TopBorder() { Val = BorderValues.Double, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders258.Append(topBorder224);
            Shading shading251 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties382.Append(tableCellBorders258);
            tableStyleConditionalFormattingTableCellProperties382.Append(shading251);

            tableStyleProperties489.Append(runPropertiesBaseStyle287);
            tableStyleProperties489.Append(tableStyleConditionalFormattingTableProperties382);
            tableStyleProperties489.Append(tableStyleConditionalFormattingTableCellProperties382);

            TableStyleProperties tableStyleProperties490 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle288 = new RunPropertiesBaseStyle();
            Bold bold262 = new Bold();
            BoldComplexScript boldComplexScript260 = new BoldComplexScript();

            runPropertiesBaseStyle288.Append(bold262);
            runPropertiesBaseStyle288.Append(boldComplexScript260);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties383 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties383 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders259 = new TableCellBorders();
            RightBorder rightBorder140 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders259.Append(rightBorder140);
            Shading shading252 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties383.Append(tableCellBorders259);
            tableStyleConditionalFormattingTableCellProperties383.Append(shading252);

            tableStyleProperties490.Append(runPropertiesBaseStyle288);
            tableStyleProperties490.Append(tableStyleConditionalFormattingTableProperties383);
            tableStyleProperties490.Append(tableStyleConditionalFormattingTableCellProperties383);

            TableStyleProperties tableStyleProperties491 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle289 = new RunPropertiesBaseStyle();
            Bold bold263 = new Bold();
            BoldComplexScript boldComplexScript261 = new BoldComplexScript();

            runPropertiesBaseStyle289.Append(bold263);
            runPropertiesBaseStyle289.Append(boldComplexScript261);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties384 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties384 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders260 = new TableCellBorders();
            LeftBorder leftBorder140 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders260.Append(leftBorder140);
            Shading shading253 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties384.Append(tableCellBorders260);
            tableStyleConditionalFormattingTableCellProperties384.Append(shading253);

            tableStyleProperties491.Append(runPropertiesBaseStyle289);
            tableStyleProperties491.Append(tableStyleConditionalFormattingTableProperties384);
            tableStyleProperties491.Append(tableStyleConditionalFormattingTableCellProperties384);

            TableStyleProperties tableStyleProperties492 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties385 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties385 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders261 = new TableCellBorders();
            LeftBorder leftBorder141 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder141 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders261.Append(leftBorder141);
            tableCellBorders261.Append(rightBorder141);

            tableStyleConditionalFormattingTableCellProperties385.Append(tableCellBorders261);

            tableStyleProperties492.Append(tableStyleConditionalFormattingTableProperties385);
            tableStyleProperties492.Append(tableStyleConditionalFormattingTableCellProperties385);

            TableStyleProperties tableStyleProperties493 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties386 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties386 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders262 = new TableCellBorders();
            TopBorder topBorder225 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder214 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder154 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders262.Append(topBorder225);
            tableCellBorders262.Append(bottomBorder214);
            tableCellBorders262.Append(insideHorizontalBorder154);

            tableStyleConditionalFormattingTableCellProperties386.Append(tableCellBorders262);

            tableStyleProperties493.Append(tableStyleConditionalFormattingTableProperties386);
            tableStyleProperties493.Append(tableStyleConditionalFormattingTableCellProperties386);

            TableStyleProperties tableStyleProperties494 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties387 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties387 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders263 = new TableCellBorders();
            LeftBorder leftBorder142 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder215 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders263.Append(leftBorder142);
            tableCellBorders263.Append(bottomBorder215);

            tableStyleConditionalFormattingTableCellProperties387.Append(tableCellBorders263);

            tableStyleProperties494.Append(tableStyleConditionalFormattingTableProperties387);
            tableStyleProperties494.Append(tableStyleConditionalFormattingTableCellProperties387);

            TableStyleProperties tableStyleProperties495 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties388 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties388 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders264 = new TableCellBorders();
            BottomBorder bottomBorder216 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder142 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders264.Append(bottomBorder216);
            tableCellBorders264.Append(rightBorder142);

            tableStyleConditionalFormattingTableCellProperties388.Append(tableCellBorders264);

            tableStyleProperties495.Append(tableStyleConditionalFormattingTableProperties388);
            tableStyleProperties495.Append(tableStyleConditionalFormattingTableCellProperties388);

            TableStyleProperties tableStyleProperties496 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties389 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties389 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders265 = new TableCellBorders();
            TopBorder topBorder226 = new TopBorder() { Val = BorderValues.Double, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder143 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders265.Append(topBorder226);
            tableCellBorders265.Append(leftBorder143);

            tableStyleConditionalFormattingTableCellProperties389.Append(tableCellBorders265);

            tableStyleProperties496.Append(tableStyleConditionalFormattingTableProperties389);
            tableStyleProperties496.Append(tableStyleConditionalFormattingTableCellProperties389);

            TableStyleProperties tableStyleProperties497 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties390 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties390 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders266 = new TableCellBorders();
            TopBorder topBorder227 = new TopBorder() { Val = BorderValues.Double, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder143 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders266.Append(topBorder227);
            tableCellBorders266.Append(rightBorder143);

            tableStyleConditionalFormattingTableCellProperties390.Append(tableCellBorders266);

            tableStyleProperties497.Append(tableStyleConditionalFormattingTableProperties390);
            tableStyleProperties497.Append(tableStyleConditionalFormattingTableCellProperties390);

            style105.Append(styleName105);
            style105.Append(basedOn100);
            style105.Append(uIPriority104);
            style105.Append(rsid101);
            style105.Append(styleParagraphProperties100);
            style105.Append(styleTableProperties75);
            style105.Append(tableStyleProperties488);
            style105.Append(tableStyleProperties489);
            style105.Append(tableStyleProperties490);
            style105.Append(tableStyleProperties491);
            style105.Append(tableStyleProperties492);
            style105.Append(tableStyleProperties493);
            style105.Append(tableStyleProperties494);
            style105.Append(tableStyleProperties495);
            style105.Append(tableStyleProperties496);
            style105.Append(tableStyleProperties497);

            Style style106 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent4" };
            StyleName styleName106 = new StyleName() { Val = "List Table 3 Accent 4" };
            BasedOn basedOn101 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority105 = new UIPriority() { Val = 48 };
            Rsid rsid102 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties101 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines96 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties101.Append(spacingBetweenLines96);

            StyleTableProperties styleTableProperties76 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize73 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize73 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders65 = new TableBorders();
            TopBorder topBorder228 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder144 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder217 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder144 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders65.Append(topBorder228);
            tableBorders65.Append(leftBorder144);
            tableBorders65.Append(bottomBorder217);
            tableBorders65.Append(rightBorder144);

            styleTableProperties76.Append(tableStyleRowBandSize73);
            styleTableProperties76.Append(tableStyleColumnBandSize73);
            styleTableProperties76.Append(tableBorders65);

            TableStyleProperties tableStyleProperties498 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle290 = new RunPropertiesBaseStyle();
            Bold bold264 = new Bold();
            BoldComplexScript boldComplexScript262 = new BoldComplexScript();
            Color color83 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle290.Append(bold264);
            runPropertiesBaseStyle290.Append(boldComplexScript262);
            runPropertiesBaseStyle290.Append(color83);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties391 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties391 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading254 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties391.Append(shading254);

            tableStyleProperties498.Append(runPropertiesBaseStyle290);
            tableStyleProperties498.Append(tableStyleConditionalFormattingTableProperties391);
            tableStyleProperties498.Append(tableStyleConditionalFormattingTableCellProperties391);

            TableStyleProperties tableStyleProperties499 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle291 = new RunPropertiesBaseStyle();
            Bold bold265 = new Bold();
            BoldComplexScript boldComplexScript263 = new BoldComplexScript();

            runPropertiesBaseStyle291.Append(bold265);
            runPropertiesBaseStyle291.Append(boldComplexScript263);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties392 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties392 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders267 = new TableCellBorders();
            TopBorder topBorder229 = new TopBorder() { Val = BorderValues.Double, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders267.Append(topBorder229);
            Shading shading255 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties392.Append(tableCellBorders267);
            tableStyleConditionalFormattingTableCellProperties392.Append(shading255);

            tableStyleProperties499.Append(runPropertiesBaseStyle291);
            tableStyleProperties499.Append(tableStyleConditionalFormattingTableProperties392);
            tableStyleProperties499.Append(tableStyleConditionalFormattingTableCellProperties392);

            TableStyleProperties tableStyleProperties500 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle292 = new RunPropertiesBaseStyle();
            Bold bold266 = new Bold();
            BoldComplexScript boldComplexScript264 = new BoldComplexScript();

            runPropertiesBaseStyle292.Append(bold266);
            runPropertiesBaseStyle292.Append(boldComplexScript264);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties393 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties393 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders268 = new TableCellBorders();
            RightBorder rightBorder145 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders268.Append(rightBorder145);
            Shading shading256 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties393.Append(tableCellBorders268);
            tableStyleConditionalFormattingTableCellProperties393.Append(shading256);

            tableStyleProperties500.Append(runPropertiesBaseStyle292);
            tableStyleProperties500.Append(tableStyleConditionalFormattingTableProperties393);
            tableStyleProperties500.Append(tableStyleConditionalFormattingTableCellProperties393);

            TableStyleProperties tableStyleProperties501 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle293 = new RunPropertiesBaseStyle();
            Bold bold267 = new Bold();
            BoldComplexScript boldComplexScript265 = new BoldComplexScript();

            runPropertiesBaseStyle293.Append(bold267);
            runPropertiesBaseStyle293.Append(boldComplexScript265);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties394 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties394 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders269 = new TableCellBorders();
            LeftBorder leftBorder145 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders269.Append(leftBorder145);
            Shading shading257 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties394.Append(tableCellBorders269);
            tableStyleConditionalFormattingTableCellProperties394.Append(shading257);

            tableStyleProperties501.Append(runPropertiesBaseStyle293);
            tableStyleProperties501.Append(tableStyleConditionalFormattingTableProperties394);
            tableStyleProperties501.Append(tableStyleConditionalFormattingTableCellProperties394);

            TableStyleProperties tableStyleProperties502 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties395 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties395 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders270 = new TableCellBorders();
            LeftBorder leftBorder146 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder146 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders270.Append(leftBorder146);
            tableCellBorders270.Append(rightBorder146);

            tableStyleConditionalFormattingTableCellProperties395.Append(tableCellBorders270);

            tableStyleProperties502.Append(tableStyleConditionalFormattingTableProperties395);
            tableStyleProperties502.Append(tableStyleConditionalFormattingTableCellProperties395);

            TableStyleProperties tableStyleProperties503 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties396 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties396 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders271 = new TableCellBorders();
            TopBorder topBorder230 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder218 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder155 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders271.Append(topBorder230);
            tableCellBorders271.Append(bottomBorder218);
            tableCellBorders271.Append(insideHorizontalBorder155);

            tableStyleConditionalFormattingTableCellProperties396.Append(tableCellBorders271);

            tableStyleProperties503.Append(tableStyleConditionalFormattingTableProperties396);
            tableStyleProperties503.Append(tableStyleConditionalFormattingTableCellProperties396);

            TableStyleProperties tableStyleProperties504 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties397 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties397 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders272 = new TableCellBorders();
            LeftBorder leftBorder147 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder219 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders272.Append(leftBorder147);
            tableCellBorders272.Append(bottomBorder219);

            tableStyleConditionalFormattingTableCellProperties397.Append(tableCellBorders272);

            tableStyleProperties504.Append(tableStyleConditionalFormattingTableProperties397);
            tableStyleProperties504.Append(tableStyleConditionalFormattingTableCellProperties397);

            TableStyleProperties tableStyleProperties505 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties398 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties398 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders273 = new TableCellBorders();
            BottomBorder bottomBorder220 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder147 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders273.Append(bottomBorder220);
            tableCellBorders273.Append(rightBorder147);

            tableStyleConditionalFormattingTableCellProperties398.Append(tableCellBorders273);

            tableStyleProperties505.Append(tableStyleConditionalFormattingTableProperties398);
            tableStyleProperties505.Append(tableStyleConditionalFormattingTableCellProperties398);

            TableStyleProperties tableStyleProperties506 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties399 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties399 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders274 = new TableCellBorders();
            TopBorder topBorder231 = new TopBorder() { Val = BorderValues.Double, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder148 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders274.Append(topBorder231);
            tableCellBorders274.Append(leftBorder148);

            tableStyleConditionalFormattingTableCellProperties399.Append(tableCellBorders274);

            tableStyleProperties506.Append(tableStyleConditionalFormattingTableProperties399);
            tableStyleProperties506.Append(tableStyleConditionalFormattingTableCellProperties399);

            TableStyleProperties tableStyleProperties507 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties400 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties400 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders275 = new TableCellBorders();
            TopBorder topBorder232 = new TopBorder() { Val = BorderValues.Double, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder148 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders275.Append(topBorder232);
            tableCellBorders275.Append(rightBorder148);

            tableStyleConditionalFormattingTableCellProperties400.Append(tableCellBorders275);

            tableStyleProperties507.Append(tableStyleConditionalFormattingTableProperties400);
            tableStyleProperties507.Append(tableStyleConditionalFormattingTableCellProperties400);

            style106.Append(styleName106);
            style106.Append(basedOn101);
            style106.Append(uIPriority105);
            style106.Append(rsid102);
            style106.Append(styleParagraphProperties101);
            style106.Append(styleTableProperties76);
            style106.Append(tableStyleProperties498);
            style106.Append(tableStyleProperties499);
            style106.Append(tableStyleProperties500);
            style106.Append(tableStyleProperties501);
            style106.Append(tableStyleProperties502);
            style106.Append(tableStyleProperties503);
            style106.Append(tableStyleProperties504);
            style106.Append(tableStyleProperties505);
            style106.Append(tableStyleProperties506);
            style106.Append(tableStyleProperties507);

            Style style107 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent5" };
            StyleName styleName107 = new StyleName() { Val = "List Table 3 Accent 5" };
            BasedOn basedOn102 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority106 = new UIPriority() { Val = 48 };
            Rsid rsid103 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties102 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines97 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties102.Append(spacingBetweenLines97);

            StyleTableProperties styleTableProperties77 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize74 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize74 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders66 = new TableBorders();
            TopBorder topBorder233 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder149 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder221 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder149 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders66.Append(topBorder233);
            tableBorders66.Append(leftBorder149);
            tableBorders66.Append(bottomBorder221);
            tableBorders66.Append(rightBorder149);

            styleTableProperties77.Append(tableStyleRowBandSize74);
            styleTableProperties77.Append(tableStyleColumnBandSize74);
            styleTableProperties77.Append(tableBorders66);

            TableStyleProperties tableStyleProperties508 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle294 = new RunPropertiesBaseStyle();
            Bold bold268 = new Bold();
            BoldComplexScript boldComplexScript266 = new BoldComplexScript();
            Color color84 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle294.Append(bold268);
            runPropertiesBaseStyle294.Append(boldComplexScript266);
            runPropertiesBaseStyle294.Append(color84);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties401 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties401 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading258 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties401.Append(shading258);

            tableStyleProperties508.Append(runPropertiesBaseStyle294);
            tableStyleProperties508.Append(tableStyleConditionalFormattingTableProperties401);
            tableStyleProperties508.Append(tableStyleConditionalFormattingTableCellProperties401);

            TableStyleProperties tableStyleProperties509 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle295 = new RunPropertiesBaseStyle();
            Bold bold269 = new Bold();
            BoldComplexScript boldComplexScript267 = new BoldComplexScript();

            runPropertiesBaseStyle295.Append(bold269);
            runPropertiesBaseStyle295.Append(boldComplexScript267);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties402 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties402 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders276 = new TableCellBorders();
            TopBorder topBorder234 = new TopBorder() { Val = BorderValues.Double, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders276.Append(topBorder234);
            Shading shading259 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties402.Append(tableCellBorders276);
            tableStyleConditionalFormattingTableCellProperties402.Append(shading259);

            tableStyleProperties509.Append(runPropertiesBaseStyle295);
            tableStyleProperties509.Append(tableStyleConditionalFormattingTableProperties402);
            tableStyleProperties509.Append(tableStyleConditionalFormattingTableCellProperties402);

            TableStyleProperties tableStyleProperties510 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle296 = new RunPropertiesBaseStyle();
            Bold bold270 = new Bold();
            BoldComplexScript boldComplexScript268 = new BoldComplexScript();

            runPropertiesBaseStyle296.Append(bold270);
            runPropertiesBaseStyle296.Append(boldComplexScript268);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties403 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties403 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders277 = new TableCellBorders();
            RightBorder rightBorder150 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders277.Append(rightBorder150);
            Shading shading260 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties403.Append(tableCellBorders277);
            tableStyleConditionalFormattingTableCellProperties403.Append(shading260);

            tableStyleProperties510.Append(runPropertiesBaseStyle296);
            tableStyleProperties510.Append(tableStyleConditionalFormattingTableProperties403);
            tableStyleProperties510.Append(tableStyleConditionalFormattingTableCellProperties403);

            TableStyleProperties tableStyleProperties511 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle297 = new RunPropertiesBaseStyle();
            Bold bold271 = new Bold();
            BoldComplexScript boldComplexScript269 = new BoldComplexScript();

            runPropertiesBaseStyle297.Append(bold271);
            runPropertiesBaseStyle297.Append(boldComplexScript269);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties404 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties404 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders278 = new TableCellBorders();
            LeftBorder leftBorder150 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders278.Append(leftBorder150);
            Shading shading261 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties404.Append(tableCellBorders278);
            tableStyleConditionalFormattingTableCellProperties404.Append(shading261);

            tableStyleProperties511.Append(runPropertiesBaseStyle297);
            tableStyleProperties511.Append(tableStyleConditionalFormattingTableProperties404);
            tableStyleProperties511.Append(tableStyleConditionalFormattingTableCellProperties404);

            TableStyleProperties tableStyleProperties512 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties405 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties405 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders279 = new TableCellBorders();
            LeftBorder leftBorder151 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder151 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders279.Append(leftBorder151);
            tableCellBorders279.Append(rightBorder151);

            tableStyleConditionalFormattingTableCellProperties405.Append(tableCellBorders279);

            tableStyleProperties512.Append(tableStyleConditionalFormattingTableProperties405);
            tableStyleProperties512.Append(tableStyleConditionalFormattingTableCellProperties405);

            TableStyleProperties tableStyleProperties513 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties406 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties406 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders280 = new TableCellBorders();
            TopBorder topBorder235 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder222 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder156 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders280.Append(topBorder235);
            tableCellBorders280.Append(bottomBorder222);
            tableCellBorders280.Append(insideHorizontalBorder156);

            tableStyleConditionalFormattingTableCellProperties406.Append(tableCellBorders280);

            tableStyleProperties513.Append(tableStyleConditionalFormattingTableProperties406);
            tableStyleProperties513.Append(tableStyleConditionalFormattingTableCellProperties406);

            TableStyleProperties tableStyleProperties514 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties407 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties407 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders281 = new TableCellBorders();
            LeftBorder leftBorder152 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder223 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders281.Append(leftBorder152);
            tableCellBorders281.Append(bottomBorder223);

            tableStyleConditionalFormattingTableCellProperties407.Append(tableCellBorders281);

            tableStyleProperties514.Append(tableStyleConditionalFormattingTableProperties407);
            tableStyleProperties514.Append(tableStyleConditionalFormattingTableCellProperties407);

            TableStyleProperties tableStyleProperties515 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties408 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties408 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders282 = new TableCellBorders();
            BottomBorder bottomBorder224 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder152 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders282.Append(bottomBorder224);
            tableCellBorders282.Append(rightBorder152);

            tableStyleConditionalFormattingTableCellProperties408.Append(tableCellBorders282);

            tableStyleProperties515.Append(tableStyleConditionalFormattingTableProperties408);
            tableStyleProperties515.Append(tableStyleConditionalFormattingTableCellProperties408);

            TableStyleProperties tableStyleProperties516 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties409 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties409 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders283 = new TableCellBorders();
            TopBorder topBorder236 = new TopBorder() { Val = BorderValues.Double, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder153 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders283.Append(topBorder236);
            tableCellBorders283.Append(leftBorder153);

            tableStyleConditionalFormattingTableCellProperties409.Append(tableCellBorders283);

            tableStyleProperties516.Append(tableStyleConditionalFormattingTableProperties409);
            tableStyleProperties516.Append(tableStyleConditionalFormattingTableCellProperties409);

            TableStyleProperties tableStyleProperties517 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties410 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties410 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders284 = new TableCellBorders();
            TopBorder topBorder237 = new TopBorder() { Val = BorderValues.Double, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder153 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders284.Append(topBorder237);
            tableCellBorders284.Append(rightBorder153);

            tableStyleConditionalFormattingTableCellProperties410.Append(tableCellBorders284);

            tableStyleProperties517.Append(tableStyleConditionalFormattingTableProperties410);
            tableStyleProperties517.Append(tableStyleConditionalFormattingTableCellProperties410);

            style107.Append(styleName107);
            style107.Append(basedOn102);
            style107.Append(uIPriority106);
            style107.Append(rsid103);
            style107.Append(styleParagraphProperties102);
            style107.Append(styleTableProperties77);
            style107.Append(tableStyleProperties508);
            style107.Append(tableStyleProperties509);
            style107.Append(tableStyleProperties510);
            style107.Append(tableStyleProperties511);
            style107.Append(tableStyleProperties512);
            style107.Append(tableStyleProperties513);
            style107.Append(tableStyleProperties514);
            style107.Append(tableStyleProperties515);
            style107.Append(tableStyleProperties516);
            style107.Append(tableStyleProperties517);

            Style style108 = new Style() { Type = StyleValues.Table, StyleId = "ListTable3-Accent6" };
            StyleName styleName108 = new StyleName() { Val = "List Table 3 Accent 6" };
            BasedOn basedOn103 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority107 = new UIPriority() { Val = 48 };
            Rsid rsid104 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties103 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines98 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties103.Append(spacingBetweenLines98);

            StyleTableProperties styleTableProperties78 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize75 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize75 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders67 = new TableBorders();
            TopBorder topBorder238 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder154 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder225 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder154 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders67.Append(topBorder238);
            tableBorders67.Append(leftBorder154);
            tableBorders67.Append(bottomBorder225);
            tableBorders67.Append(rightBorder154);

            styleTableProperties78.Append(tableStyleRowBandSize75);
            styleTableProperties78.Append(tableStyleColumnBandSize75);
            styleTableProperties78.Append(tableBorders67);

            TableStyleProperties tableStyleProperties518 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle298 = new RunPropertiesBaseStyle();
            Bold bold272 = new Bold();
            BoldComplexScript boldComplexScript270 = new BoldComplexScript();
            Color color85 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle298.Append(bold272);
            runPropertiesBaseStyle298.Append(boldComplexScript270);
            runPropertiesBaseStyle298.Append(color85);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties411 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties411 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading262 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties411.Append(shading262);

            tableStyleProperties518.Append(runPropertiesBaseStyle298);
            tableStyleProperties518.Append(tableStyleConditionalFormattingTableProperties411);
            tableStyleProperties518.Append(tableStyleConditionalFormattingTableCellProperties411);

            TableStyleProperties tableStyleProperties519 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle299 = new RunPropertiesBaseStyle();
            Bold bold273 = new Bold();
            BoldComplexScript boldComplexScript271 = new BoldComplexScript();

            runPropertiesBaseStyle299.Append(bold273);
            runPropertiesBaseStyle299.Append(boldComplexScript271);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties412 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties412 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders285 = new TableCellBorders();
            TopBorder topBorder239 = new TopBorder() { Val = BorderValues.Double, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders285.Append(topBorder239);
            Shading shading263 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties412.Append(tableCellBorders285);
            tableStyleConditionalFormattingTableCellProperties412.Append(shading263);

            tableStyleProperties519.Append(runPropertiesBaseStyle299);
            tableStyleProperties519.Append(tableStyleConditionalFormattingTableProperties412);
            tableStyleProperties519.Append(tableStyleConditionalFormattingTableCellProperties412);

            TableStyleProperties tableStyleProperties520 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle300 = new RunPropertiesBaseStyle();
            Bold bold274 = new Bold();
            BoldComplexScript boldComplexScript272 = new BoldComplexScript();

            runPropertiesBaseStyle300.Append(bold274);
            runPropertiesBaseStyle300.Append(boldComplexScript272);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties413 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties413 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders286 = new TableCellBorders();
            RightBorder rightBorder155 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders286.Append(rightBorder155);
            Shading shading264 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties413.Append(tableCellBorders286);
            tableStyleConditionalFormattingTableCellProperties413.Append(shading264);

            tableStyleProperties520.Append(runPropertiesBaseStyle300);
            tableStyleProperties520.Append(tableStyleConditionalFormattingTableProperties413);
            tableStyleProperties520.Append(tableStyleConditionalFormattingTableCellProperties413);

            TableStyleProperties tableStyleProperties521 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle301 = new RunPropertiesBaseStyle();
            Bold bold275 = new Bold();
            BoldComplexScript boldComplexScript273 = new BoldComplexScript();

            runPropertiesBaseStyle301.Append(bold275);
            runPropertiesBaseStyle301.Append(boldComplexScript273);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties414 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties414 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders287 = new TableCellBorders();
            LeftBorder leftBorder155 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders287.Append(leftBorder155);
            Shading shading265 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties414.Append(tableCellBorders287);
            tableStyleConditionalFormattingTableCellProperties414.Append(shading265);

            tableStyleProperties521.Append(runPropertiesBaseStyle301);
            tableStyleProperties521.Append(tableStyleConditionalFormattingTableProperties414);
            tableStyleProperties521.Append(tableStyleConditionalFormattingTableCellProperties414);

            TableStyleProperties tableStyleProperties522 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties415 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties415 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders288 = new TableCellBorders();
            LeftBorder leftBorder156 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder156 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders288.Append(leftBorder156);
            tableCellBorders288.Append(rightBorder156);

            tableStyleConditionalFormattingTableCellProperties415.Append(tableCellBorders288);

            tableStyleProperties522.Append(tableStyleConditionalFormattingTableProperties415);
            tableStyleProperties522.Append(tableStyleConditionalFormattingTableCellProperties415);

            TableStyleProperties tableStyleProperties523 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties416 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties416 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders289 = new TableCellBorders();
            TopBorder topBorder240 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder226 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder157 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders289.Append(topBorder240);
            tableCellBorders289.Append(bottomBorder226);
            tableCellBorders289.Append(insideHorizontalBorder157);

            tableStyleConditionalFormattingTableCellProperties416.Append(tableCellBorders289);

            tableStyleProperties523.Append(tableStyleConditionalFormattingTableProperties416);
            tableStyleProperties523.Append(tableStyleConditionalFormattingTableCellProperties416);

            TableStyleProperties tableStyleProperties524 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties417 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties417 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders290 = new TableCellBorders();
            LeftBorder leftBorder157 = new LeftBorder() { Val = BorderValues.Nil };
            BottomBorder bottomBorder227 = new BottomBorder() { Val = BorderValues.Nil };

            tableCellBorders290.Append(leftBorder157);
            tableCellBorders290.Append(bottomBorder227);

            tableStyleConditionalFormattingTableCellProperties417.Append(tableCellBorders290);

            tableStyleProperties524.Append(tableStyleConditionalFormattingTableProperties417);
            tableStyleProperties524.Append(tableStyleConditionalFormattingTableCellProperties417);

            TableStyleProperties tableStyleProperties525 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties418 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties418 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders291 = new TableCellBorders();
            BottomBorder bottomBorder228 = new BottomBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder157 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders291.Append(bottomBorder228);
            tableCellBorders291.Append(rightBorder157);

            tableStyleConditionalFormattingTableCellProperties418.Append(tableCellBorders291);

            tableStyleProperties525.Append(tableStyleConditionalFormattingTableProperties418);
            tableStyleProperties525.Append(tableStyleConditionalFormattingTableCellProperties418);

            TableStyleProperties tableStyleProperties526 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties419 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties419 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders292 = new TableCellBorders();
            TopBorder topBorder241 = new TopBorder() { Val = BorderValues.Double, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder158 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders292.Append(topBorder241);
            tableCellBorders292.Append(leftBorder158);

            tableStyleConditionalFormattingTableCellProperties419.Append(tableCellBorders292);

            tableStyleProperties526.Append(tableStyleConditionalFormattingTableProperties419);
            tableStyleProperties526.Append(tableStyleConditionalFormattingTableCellProperties419);

            TableStyleProperties tableStyleProperties527 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties420 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties420 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders293 = new TableCellBorders();
            TopBorder topBorder242 = new TopBorder() { Val = BorderValues.Double, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder158 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders293.Append(topBorder242);
            tableCellBorders293.Append(rightBorder158);

            tableStyleConditionalFormattingTableCellProperties420.Append(tableCellBorders293);

            tableStyleProperties527.Append(tableStyleConditionalFormattingTableProperties420);
            tableStyleProperties527.Append(tableStyleConditionalFormattingTableCellProperties420);

            style108.Append(styleName108);
            style108.Append(basedOn103);
            style108.Append(uIPriority107);
            style108.Append(rsid104);
            style108.Append(styleParagraphProperties103);
            style108.Append(styleTableProperties78);
            style108.Append(tableStyleProperties518);
            style108.Append(tableStyleProperties519);
            style108.Append(tableStyleProperties520);
            style108.Append(tableStyleProperties521);
            style108.Append(tableStyleProperties522);
            style108.Append(tableStyleProperties523);
            style108.Append(tableStyleProperties524);
            style108.Append(tableStyleProperties525);
            style108.Append(tableStyleProperties526);
            style108.Append(tableStyleProperties527);

            Style style109 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4" };
            StyleName styleName109 = new StyleName() { Val = "List Table 4" };
            BasedOn basedOn104 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority108 = new UIPriority() { Val = 49 };
            Rsid rsid105 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties104 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines99 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties104.Append(spacingBetweenLines99);

            StyleTableProperties styleTableProperties79 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize76 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize76 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders68 = new TableBorders();
            TopBorder topBorder243 = new TopBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder159 = new LeftBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder229 = new BottomBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder159 = new RightBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder158 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders68.Append(topBorder243);
            tableBorders68.Append(leftBorder159);
            tableBorders68.Append(bottomBorder229);
            tableBorders68.Append(rightBorder159);
            tableBorders68.Append(insideHorizontalBorder158);

            styleTableProperties79.Append(tableStyleRowBandSize76);
            styleTableProperties79.Append(tableStyleColumnBandSize76);
            styleTableProperties79.Append(tableBorders68);

            TableStyleProperties tableStyleProperties528 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle302 = new RunPropertiesBaseStyle();
            Bold bold276 = new Bold();
            BoldComplexScript boldComplexScript274 = new BoldComplexScript();
            Color color86 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle302.Append(bold276);
            runPropertiesBaseStyle302.Append(boldComplexScript274);
            runPropertiesBaseStyle302.Append(color86);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties421 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties421 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders294 = new TableCellBorders();
            TopBorder topBorder244 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder160 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder230 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder160 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder159 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders294.Append(topBorder244);
            tableCellBorders294.Append(leftBorder160);
            tableCellBorders294.Append(bottomBorder230);
            tableCellBorders294.Append(rightBorder160);
            tableCellBorders294.Append(insideHorizontalBorder159);
            Shading shading266 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            tableStyleConditionalFormattingTableCellProperties421.Append(tableCellBorders294);
            tableStyleConditionalFormattingTableCellProperties421.Append(shading266);

            tableStyleProperties528.Append(runPropertiesBaseStyle302);
            tableStyleProperties528.Append(tableStyleConditionalFormattingTableProperties421);
            tableStyleProperties528.Append(tableStyleConditionalFormattingTableCellProperties421);

            TableStyleProperties tableStyleProperties529 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle303 = new RunPropertiesBaseStyle();
            Bold bold277 = new Bold();
            BoldComplexScript boldComplexScript275 = new BoldComplexScript();

            runPropertiesBaseStyle303.Append(bold277);
            runPropertiesBaseStyle303.Append(boldComplexScript275);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties422 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties422 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders295 = new TableCellBorders();
            TopBorder topBorder245 = new TopBorder() { Val = BorderValues.Double, Color = "666666", ThemeColor = ThemeColorValues.Text1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders295.Append(topBorder245);

            tableStyleConditionalFormattingTableCellProperties422.Append(tableCellBorders295);

            tableStyleProperties529.Append(runPropertiesBaseStyle303);
            tableStyleProperties529.Append(tableStyleConditionalFormattingTableProperties422);
            tableStyleProperties529.Append(tableStyleConditionalFormattingTableCellProperties422);

            TableStyleProperties tableStyleProperties530 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle304 = new RunPropertiesBaseStyle();
            Bold bold278 = new Bold();
            BoldComplexScript boldComplexScript276 = new BoldComplexScript();

            runPropertiesBaseStyle304.Append(bold278);
            runPropertiesBaseStyle304.Append(boldComplexScript276);

            tableStyleProperties530.Append(runPropertiesBaseStyle304);

            TableStyleProperties tableStyleProperties531 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle305 = new RunPropertiesBaseStyle();
            Bold bold279 = new Bold();
            BoldComplexScript boldComplexScript277 = new BoldComplexScript();

            runPropertiesBaseStyle305.Append(bold279);
            runPropertiesBaseStyle305.Append(boldComplexScript277);

            tableStyleProperties531.Append(runPropertiesBaseStyle305);

            TableStyleProperties tableStyleProperties532 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties423 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties423 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading267 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties423.Append(shading267);

            tableStyleProperties532.Append(tableStyleConditionalFormattingTableProperties423);
            tableStyleProperties532.Append(tableStyleConditionalFormattingTableCellProperties423);

            TableStyleProperties tableStyleProperties533 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties424 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties424 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading268 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties424.Append(shading268);

            tableStyleProperties533.Append(tableStyleConditionalFormattingTableProperties424);
            tableStyleProperties533.Append(tableStyleConditionalFormattingTableCellProperties424);

            style109.Append(styleName109);
            style109.Append(basedOn104);
            style109.Append(uIPriority108);
            style109.Append(rsid105);
            style109.Append(styleParagraphProperties104);
            style109.Append(styleTableProperties79);
            style109.Append(tableStyleProperties528);
            style109.Append(tableStyleProperties529);
            style109.Append(tableStyleProperties530);
            style109.Append(tableStyleProperties531);
            style109.Append(tableStyleProperties532);
            style109.Append(tableStyleProperties533);

            Style style110 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent1" };
            StyleName styleName110 = new StyleName() { Val = "List Table 4 Accent 1" };
            BasedOn basedOn105 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority109 = new UIPriority() { Val = 49 };
            Rsid rsid106 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties105 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines100 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties105.Append(spacingBetweenLines100);

            StyleTableProperties styleTableProperties80 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize77 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize77 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders69 = new TableBorders();
            TopBorder topBorder246 = new TopBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder161 = new LeftBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder231 = new BottomBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder161 = new RightBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder160 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders69.Append(topBorder246);
            tableBorders69.Append(leftBorder161);
            tableBorders69.Append(bottomBorder231);
            tableBorders69.Append(rightBorder161);
            tableBorders69.Append(insideHorizontalBorder160);

            styleTableProperties80.Append(tableStyleRowBandSize77);
            styleTableProperties80.Append(tableStyleColumnBandSize77);
            styleTableProperties80.Append(tableBorders69);

            TableStyleProperties tableStyleProperties534 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle306 = new RunPropertiesBaseStyle();
            Bold bold280 = new Bold();
            BoldComplexScript boldComplexScript278 = new BoldComplexScript();
            Color color87 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle306.Append(bold280);
            runPropertiesBaseStyle306.Append(boldComplexScript278);
            runPropertiesBaseStyle306.Append(color87);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties425 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties425 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders296 = new TableCellBorders();
            TopBorder topBorder247 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder162 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder232 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder162 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder161 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders296.Append(topBorder247);
            tableCellBorders296.Append(leftBorder162);
            tableCellBorders296.Append(bottomBorder232);
            tableCellBorders296.Append(rightBorder162);
            tableCellBorders296.Append(insideHorizontalBorder161);
            Shading shading269 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            tableStyleConditionalFormattingTableCellProperties425.Append(tableCellBorders296);
            tableStyleConditionalFormattingTableCellProperties425.Append(shading269);

            tableStyleProperties534.Append(runPropertiesBaseStyle306);
            tableStyleProperties534.Append(tableStyleConditionalFormattingTableProperties425);
            tableStyleProperties534.Append(tableStyleConditionalFormattingTableCellProperties425);

            TableStyleProperties tableStyleProperties535 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle307 = new RunPropertiesBaseStyle();
            Bold bold281 = new Bold();
            BoldComplexScript boldComplexScript279 = new BoldComplexScript();

            runPropertiesBaseStyle307.Append(bold281);
            runPropertiesBaseStyle307.Append(boldComplexScript279);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties426 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties426 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders297 = new TableCellBorders();
            TopBorder topBorder248 = new TopBorder() { Val = BorderValues.Double, Color = "9CC2E5", ThemeColor = ThemeColorValues.Accent1, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders297.Append(topBorder248);

            tableStyleConditionalFormattingTableCellProperties426.Append(tableCellBorders297);

            tableStyleProperties535.Append(runPropertiesBaseStyle307);
            tableStyleProperties535.Append(tableStyleConditionalFormattingTableProperties426);
            tableStyleProperties535.Append(tableStyleConditionalFormattingTableCellProperties426);

            TableStyleProperties tableStyleProperties536 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle308 = new RunPropertiesBaseStyle();
            Bold bold282 = new Bold();
            BoldComplexScript boldComplexScript280 = new BoldComplexScript();

            runPropertiesBaseStyle308.Append(bold282);
            runPropertiesBaseStyle308.Append(boldComplexScript280);

            tableStyleProperties536.Append(runPropertiesBaseStyle308);

            TableStyleProperties tableStyleProperties537 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle309 = new RunPropertiesBaseStyle();
            Bold bold283 = new Bold();
            BoldComplexScript boldComplexScript281 = new BoldComplexScript();

            runPropertiesBaseStyle309.Append(bold283);
            runPropertiesBaseStyle309.Append(boldComplexScript281);

            tableStyleProperties537.Append(runPropertiesBaseStyle309);

            TableStyleProperties tableStyleProperties538 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties427 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties427 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading270 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties427.Append(shading270);

            tableStyleProperties538.Append(tableStyleConditionalFormattingTableProperties427);
            tableStyleProperties538.Append(tableStyleConditionalFormattingTableCellProperties427);

            TableStyleProperties tableStyleProperties539 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties428 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties428 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading271 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties428.Append(shading271);

            tableStyleProperties539.Append(tableStyleConditionalFormattingTableProperties428);
            tableStyleProperties539.Append(tableStyleConditionalFormattingTableCellProperties428);

            style110.Append(styleName110);
            style110.Append(basedOn105);
            style110.Append(uIPriority109);
            style110.Append(rsid106);
            style110.Append(styleParagraphProperties105);
            style110.Append(styleTableProperties80);
            style110.Append(tableStyleProperties534);
            style110.Append(tableStyleProperties535);
            style110.Append(tableStyleProperties536);
            style110.Append(tableStyleProperties537);
            style110.Append(tableStyleProperties538);
            style110.Append(tableStyleProperties539);

            Style style111 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent2" };
            StyleName styleName111 = new StyleName() { Val = "List Table 4 Accent 2" };
            BasedOn basedOn106 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority110 = new UIPriority() { Val = 49 };
            Rsid rsid107 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties106 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines101 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties106.Append(spacingBetweenLines101);

            StyleTableProperties styleTableProperties81 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize78 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize78 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders70 = new TableBorders();
            TopBorder topBorder249 = new TopBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder163 = new LeftBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder233 = new BottomBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder163 = new RightBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder162 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders70.Append(topBorder249);
            tableBorders70.Append(leftBorder163);
            tableBorders70.Append(bottomBorder233);
            tableBorders70.Append(rightBorder163);
            tableBorders70.Append(insideHorizontalBorder162);

            styleTableProperties81.Append(tableStyleRowBandSize78);
            styleTableProperties81.Append(tableStyleColumnBandSize78);
            styleTableProperties81.Append(tableBorders70);

            TableStyleProperties tableStyleProperties540 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle310 = new RunPropertiesBaseStyle();
            Bold bold284 = new Bold();
            BoldComplexScript boldComplexScript282 = new BoldComplexScript();
            Color color88 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle310.Append(bold284);
            runPropertiesBaseStyle310.Append(boldComplexScript282);
            runPropertiesBaseStyle310.Append(color88);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties429 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties429 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders298 = new TableCellBorders();
            TopBorder topBorder250 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder164 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder234 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder164 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder163 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders298.Append(topBorder250);
            tableCellBorders298.Append(leftBorder164);
            tableCellBorders298.Append(bottomBorder234);
            tableCellBorders298.Append(rightBorder164);
            tableCellBorders298.Append(insideHorizontalBorder163);
            Shading shading272 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            tableStyleConditionalFormattingTableCellProperties429.Append(tableCellBorders298);
            tableStyleConditionalFormattingTableCellProperties429.Append(shading272);

            tableStyleProperties540.Append(runPropertiesBaseStyle310);
            tableStyleProperties540.Append(tableStyleConditionalFormattingTableProperties429);
            tableStyleProperties540.Append(tableStyleConditionalFormattingTableCellProperties429);

            TableStyleProperties tableStyleProperties541 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle311 = new RunPropertiesBaseStyle();
            Bold bold285 = new Bold();
            BoldComplexScript boldComplexScript283 = new BoldComplexScript();

            runPropertiesBaseStyle311.Append(bold285);
            runPropertiesBaseStyle311.Append(boldComplexScript283);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties430 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties430 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders299 = new TableCellBorders();
            TopBorder topBorder251 = new TopBorder() { Val = BorderValues.Double, Color = "F4B083", ThemeColor = ThemeColorValues.Accent2, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders299.Append(topBorder251);

            tableStyleConditionalFormattingTableCellProperties430.Append(tableCellBorders299);

            tableStyleProperties541.Append(runPropertiesBaseStyle311);
            tableStyleProperties541.Append(tableStyleConditionalFormattingTableProperties430);
            tableStyleProperties541.Append(tableStyleConditionalFormattingTableCellProperties430);

            TableStyleProperties tableStyleProperties542 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle312 = new RunPropertiesBaseStyle();
            Bold bold286 = new Bold();
            BoldComplexScript boldComplexScript284 = new BoldComplexScript();

            runPropertiesBaseStyle312.Append(bold286);
            runPropertiesBaseStyle312.Append(boldComplexScript284);

            tableStyleProperties542.Append(runPropertiesBaseStyle312);

            TableStyleProperties tableStyleProperties543 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle313 = new RunPropertiesBaseStyle();
            Bold bold287 = new Bold();
            BoldComplexScript boldComplexScript285 = new BoldComplexScript();

            runPropertiesBaseStyle313.Append(bold287);
            runPropertiesBaseStyle313.Append(boldComplexScript285);

            tableStyleProperties543.Append(runPropertiesBaseStyle313);

            TableStyleProperties tableStyleProperties544 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties431 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties431 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading273 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties431.Append(shading273);

            tableStyleProperties544.Append(tableStyleConditionalFormattingTableProperties431);
            tableStyleProperties544.Append(tableStyleConditionalFormattingTableCellProperties431);

            TableStyleProperties tableStyleProperties545 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties432 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties432 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading274 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties432.Append(shading274);

            tableStyleProperties545.Append(tableStyleConditionalFormattingTableProperties432);
            tableStyleProperties545.Append(tableStyleConditionalFormattingTableCellProperties432);

            style111.Append(styleName111);
            style111.Append(basedOn106);
            style111.Append(uIPriority110);
            style111.Append(rsid107);
            style111.Append(styleParagraphProperties106);
            style111.Append(styleTableProperties81);
            style111.Append(tableStyleProperties540);
            style111.Append(tableStyleProperties541);
            style111.Append(tableStyleProperties542);
            style111.Append(tableStyleProperties543);
            style111.Append(tableStyleProperties544);
            style111.Append(tableStyleProperties545);

            Style style112 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent3" };
            StyleName styleName112 = new StyleName() { Val = "List Table 4 Accent 3" };
            BasedOn basedOn107 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority111 = new UIPriority() { Val = 49 };
            Rsid rsid108 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties107 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines102 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties107.Append(spacingBetweenLines102);

            StyleTableProperties styleTableProperties82 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize79 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize79 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders71 = new TableBorders();
            TopBorder topBorder252 = new TopBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder165 = new LeftBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder235 = new BottomBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder165 = new RightBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder164 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders71.Append(topBorder252);
            tableBorders71.Append(leftBorder165);
            tableBorders71.Append(bottomBorder235);
            tableBorders71.Append(rightBorder165);
            tableBorders71.Append(insideHorizontalBorder164);

            styleTableProperties82.Append(tableStyleRowBandSize79);
            styleTableProperties82.Append(tableStyleColumnBandSize79);
            styleTableProperties82.Append(tableBorders71);

            TableStyleProperties tableStyleProperties546 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle314 = new RunPropertiesBaseStyle();
            Bold bold288 = new Bold();
            BoldComplexScript boldComplexScript286 = new BoldComplexScript();
            Color color89 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle314.Append(bold288);
            runPropertiesBaseStyle314.Append(boldComplexScript286);
            runPropertiesBaseStyle314.Append(color89);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties433 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties433 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders300 = new TableCellBorders();
            TopBorder topBorder253 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder166 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder236 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder166 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder165 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders300.Append(topBorder253);
            tableCellBorders300.Append(leftBorder166);
            tableCellBorders300.Append(bottomBorder236);
            tableCellBorders300.Append(rightBorder166);
            tableCellBorders300.Append(insideHorizontalBorder165);
            Shading shading275 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            tableStyleConditionalFormattingTableCellProperties433.Append(tableCellBorders300);
            tableStyleConditionalFormattingTableCellProperties433.Append(shading275);

            tableStyleProperties546.Append(runPropertiesBaseStyle314);
            tableStyleProperties546.Append(tableStyleConditionalFormattingTableProperties433);
            tableStyleProperties546.Append(tableStyleConditionalFormattingTableCellProperties433);

            TableStyleProperties tableStyleProperties547 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle315 = new RunPropertiesBaseStyle();
            Bold bold289 = new Bold();
            BoldComplexScript boldComplexScript287 = new BoldComplexScript();

            runPropertiesBaseStyle315.Append(bold289);
            runPropertiesBaseStyle315.Append(boldComplexScript287);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties434 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties434 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders301 = new TableCellBorders();
            TopBorder topBorder254 = new TopBorder() { Val = BorderValues.Double, Color = "C9C9C9", ThemeColor = ThemeColorValues.Accent3, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders301.Append(topBorder254);

            tableStyleConditionalFormattingTableCellProperties434.Append(tableCellBorders301);

            tableStyleProperties547.Append(runPropertiesBaseStyle315);
            tableStyleProperties547.Append(tableStyleConditionalFormattingTableProperties434);
            tableStyleProperties547.Append(tableStyleConditionalFormattingTableCellProperties434);

            TableStyleProperties tableStyleProperties548 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle316 = new RunPropertiesBaseStyle();
            Bold bold290 = new Bold();
            BoldComplexScript boldComplexScript288 = new BoldComplexScript();

            runPropertiesBaseStyle316.Append(bold290);
            runPropertiesBaseStyle316.Append(boldComplexScript288);

            tableStyleProperties548.Append(runPropertiesBaseStyle316);

            TableStyleProperties tableStyleProperties549 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle317 = new RunPropertiesBaseStyle();
            Bold bold291 = new Bold();
            BoldComplexScript boldComplexScript289 = new BoldComplexScript();

            runPropertiesBaseStyle317.Append(bold291);
            runPropertiesBaseStyle317.Append(boldComplexScript289);

            tableStyleProperties549.Append(runPropertiesBaseStyle317);

            TableStyleProperties tableStyleProperties550 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties435 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties435 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading276 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties435.Append(shading276);

            tableStyleProperties550.Append(tableStyleConditionalFormattingTableProperties435);
            tableStyleProperties550.Append(tableStyleConditionalFormattingTableCellProperties435);

            TableStyleProperties tableStyleProperties551 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties436 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties436 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading277 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties436.Append(shading277);

            tableStyleProperties551.Append(tableStyleConditionalFormattingTableProperties436);
            tableStyleProperties551.Append(tableStyleConditionalFormattingTableCellProperties436);

            style112.Append(styleName112);
            style112.Append(basedOn107);
            style112.Append(uIPriority111);
            style112.Append(rsid108);
            style112.Append(styleParagraphProperties107);
            style112.Append(styleTableProperties82);
            style112.Append(tableStyleProperties546);
            style112.Append(tableStyleProperties547);
            style112.Append(tableStyleProperties548);
            style112.Append(tableStyleProperties549);
            style112.Append(tableStyleProperties550);
            style112.Append(tableStyleProperties551);

            Style style113 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent4" };
            StyleName styleName113 = new StyleName() { Val = "List Table 4 Accent 4" };
            BasedOn basedOn108 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority112 = new UIPriority() { Val = 49 };
            Rsid rsid109 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties108 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines103 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties108.Append(spacingBetweenLines103);

            StyleTableProperties styleTableProperties83 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize80 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize80 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders72 = new TableBorders();
            TopBorder topBorder255 = new TopBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder167 = new LeftBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder237 = new BottomBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder167 = new RightBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder166 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders72.Append(topBorder255);
            tableBorders72.Append(leftBorder167);
            tableBorders72.Append(bottomBorder237);
            tableBorders72.Append(rightBorder167);
            tableBorders72.Append(insideHorizontalBorder166);

            styleTableProperties83.Append(tableStyleRowBandSize80);
            styleTableProperties83.Append(tableStyleColumnBandSize80);
            styleTableProperties83.Append(tableBorders72);

            TableStyleProperties tableStyleProperties552 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle318 = new RunPropertiesBaseStyle();
            Bold bold292 = new Bold();
            BoldComplexScript boldComplexScript290 = new BoldComplexScript();
            Color color90 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle318.Append(bold292);
            runPropertiesBaseStyle318.Append(boldComplexScript290);
            runPropertiesBaseStyle318.Append(color90);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties437 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties437 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders302 = new TableCellBorders();
            TopBorder topBorder256 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder168 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder238 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder168 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder167 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders302.Append(topBorder256);
            tableCellBorders302.Append(leftBorder168);
            tableCellBorders302.Append(bottomBorder238);
            tableCellBorders302.Append(rightBorder168);
            tableCellBorders302.Append(insideHorizontalBorder167);
            Shading shading278 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            tableStyleConditionalFormattingTableCellProperties437.Append(tableCellBorders302);
            tableStyleConditionalFormattingTableCellProperties437.Append(shading278);

            tableStyleProperties552.Append(runPropertiesBaseStyle318);
            tableStyleProperties552.Append(tableStyleConditionalFormattingTableProperties437);
            tableStyleProperties552.Append(tableStyleConditionalFormattingTableCellProperties437);

            TableStyleProperties tableStyleProperties553 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle319 = new RunPropertiesBaseStyle();
            Bold bold293 = new Bold();
            BoldComplexScript boldComplexScript291 = new BoldComplexScript();

            runPropertiesBaseStyle319.Append(bold293);
            runPropertiesBaseStyle319.Append(boldComplexScript291);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties438 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties438 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders303 = new TableCellBorders();
            TopBorder topBorder257 = new TopBorder() { Val = BorderValues.Double, Color = "FFD966", ThemeColor = ThemeColorValues.Accent4, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders303.Append(topBorder257);

            tableStyleConditionalFormattingTableCellProperties438.Append(tableCellBorders303);

            tableStyleProperties553.Append(runPropertiesBaseStyle319);
            tableStyleProperties553.Append(tableStyleConditionalFormattingTableProperties438);
            tableStyleProperties553.Append(tableStyleConditionalFormattingTableCellProperties438);

            TableStyleProperties tableStyleProperties554 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle320 = new RunPropertiesBaseStyle();
            Bold bold294 = new Bold();
            BoldComplexScript boldComplexScript292 = new BoldComplexScript();

            runPropertiesBaseStyle320.Append(bold294);
            runPropertiesBaseStyle320.Append(boldComplexScript292);

            tableStyleProperties554.Append(runPropertiesBaseStyle320);

            TableStyleProperties tableStyleProperties555 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle321 = new RunPropertiesBaseStyle();
            Bold bold295 = new Bold();
            BoldComplexScript boldComplexScript293 = new BoldComplexScript();

            runPropertiesBaseStyle321.Append(bold295);
            runPropertiesBaseStyle321.Append(boldComplexScript293);

            tableStyleProperties555.Append(runPropertiesBaseStyle321);

            TableStyleProperties tableStyleProperties556 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties439 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties439 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading279 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties439.Append(shading279);

            tableStyleProperties556.Append(tableStyleConditionalFormattingTableProperties439);
            tableStyleProperties556.Append(tableStyleConditionalFormattingTableCellProperties439);

            TableStyleProperties tableStyleProperties557 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties440 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties440 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading280 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties440.Append(shading280);

            tableStyleProperties557.Append(tableStyleConditionalFormattingTableProperties440);
            tableStyleProperties557.Append(tableStyleConditionalFormattingTableCellProperties440);

            style113.Append(styleName113);
            style113.Append(basedOn108);
            style113.Append(uIPriority112);
            style113.Append(rsid109);
            style113.Append(styleParagraphProperties108);
            style113.Append(styleTableProperties83);
            style113.Append(tableStyleProperties552);
            style113.Append(tableStyleProperties553);
            style113.Append(tableStyleProperties554);
            style113.Append(tableStyleProperties555);
            style113.Append(tableStyleProperties556);
            style113.Append(tableStyleProperties557);

            Style style114 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent5" };
            StyleName styleName114 = new StyleName() { Val = "List Table 4 Accent 5" };
            BasedOn basedOn109 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority113 = new UIPriority() { Val = 49 };
            Rsid rsid110 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties109 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines104 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties109.Append(spacingBetweenLines104);

            StyleTableProperties styleTableProperties84 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize81 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize81 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders73 = new TableBorders();
            TopBorder topBorder258 = new TopBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder169 = new LeftBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder239 = new BottomBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder169 = new RightBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder168 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders73.Append(topBorder258);
            tableBorders73.Append(leftBorder169);
            tableBorders73.Append(bottomBorder239);
            tableBorders73.Append(rightBorder169);
            tableBorders73.Append(insideHorizontalBorder168);

            styleTableProperties84.Append(tableStyleRowBandSize81);
            styleTableProperties84.Append(tableStyleColumnBandSize81);
            styleTableProperties84.Append(tableBorders73);

            TableStyleProperties tableStyleProperties558 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle322 = new RunPropertiesBaseStyle();
            Bold bold296 = new Bold();
            BoldComplexScript boldComplexScript294 = new BoldComplexScript();
            Color color91 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle322.Append(bold296);
            runPropertiesBaseStyle322.Append(boldComplexScript294);
            runPropertiesBaseStyle322.Append(color91);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties441 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties441 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders304 = new TableCellBorders();
            TopBorder topBorder259 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder170 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder240 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder170 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder169 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders304.Append(topBorder259);
            tableCellBorders304.Append(leftBorder170);
            tableCellBorders304.Append(bottomBorder240);
            tableCellBorders304.Append(rightBorder170);
            tableCellBorders304.Append(insideHorizontalBorder169);
            Shading shading281 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            tableStyleConditionalFormattingTableCellProperties441.Append(tableCellBorders304);
            tableStyleConditionalFormattingTableCellProperties441.Append(shading281);

            tableStyleProperties558.Append(runPropertiesBaseStyle322);
            tableStyleProperties558.Append(tableStyleConditionalFormattingTableProperties441);
            tableStyleProperties558.Append(tableStyleConditionalFormattingTableCellProperties441);

            TableStyleProperties tableStyleProperties559 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle323 = new RunPropertiesBaseStyle();
            Bold bold297 = new Bold();
            BoldComplexScript boldComplexScript295 = new BoldComplexScript();

            runPropertiesBaseStyle323.Append(bold297);
            runPropertiesBaseStyle323.Append(boldComplexScript295);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties442 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties442 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders305 = new TableCellBorders();
            TopBorder topBorder260 = new TopBorder() { Val = BorderValues.Double, Color = "8EAADB", ThemeColor = ThemeColorValues.Accent5, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders305.Append(topBorder260);

            tableStyleConditionalFormattingTableCellProperties442.Append(tableCellBorders305);

            tableStyleProperties559.Append(runPropertiesBaseStyle323);
            tableStyleProperties559.Append(tableStyleConditionalFormattingTableProperties442);
            tableStyleProperties559.Append(tableStyleConditionalFormattingTableCellProperties442);

            TableStyleProperties tableStyleProperties560 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle324 = new RunPropertiesBaseStyle();
            Bold bold298 = new Bold();
            BoldComplexScript boldComplexScript296 = new BoldComplexScript();

            runPropertiesBaseStyle324.Append(bold298);
            runPropertiesBaseStyle324.Append(boldComplexScript296);

            tableStyleProperties560.Append(runPropertiesBaseStyle324);

            TableStyleProperties tableStyleProperties561 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle325 = new RunPropertiesBaseStyle();
            Bold bold299 = new Bold();
            BoldComplexScript boldComplexScript297 = new BoldComplexScript();

            runPropertiesBaseStyle325.Append(bold299);
            runPropertiesBaseStyle325.Append(boldComplexScript297);

            tableStyleProperties561.Append(runPropertiesBaseStyle325);

            TableStyleProperties tableStyleProperties562 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties443 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties443 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading282 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties443.Append(shading282);

            tableStyleProperties562.Append(tableStyleConditionalFormattingTableProperties443);
            tableStyleProperties562.Append(tableStyleConditionalFormattingTableCellProperties443);

            TableStyleProperties tableStyleProperties563 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties444 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties444 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading283 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties444.Append(shading283);

            tableStyleProperties563.Append(tableStyleConditionalFormattingTableProperties444);
            tableStyleProperties563.Append(tableStyleConditionalFormattingTableCellProperties444);

            style114.Append(styleName114);
            style114.Append(basedOn109);
            style114.Append(uIPriority113);
            style114.Append(rsid110);
            style114.Append(styleParagraphProperties109);
            style114.Append(styleTableProperties84);
            style114.Append(tableStyleProperties558);
            style114.Append(tableStyleProperties559);
            style114.Append(tableStyleProperties560);
            style114.Append(tableStyleProperties561);
            style114.Append(tableStyleProperties562);
            style114.Append(tableStyleProperties563);

            Style style115 = new Style() { Type = StyleValues.Table, StyleId = "ListTable4-Accent6" };
            StyleName styleName115 = new StyleName() { Val = "List Table 4 Accent 6" };
            BasedOn basedOn110 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority114 = new UIPriority() { Val = 49 };
            Rsid rsid111 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties110 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines105 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties110.Append(spacingBetweenLines105);

            StyleTableProperties styleTableProperties85 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize82 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize82 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders74 = new TableBorders();
            TopBorder topBorder261 = new TopBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder171 = new LeftBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder241 = new BottomBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder171 = new RightBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder170 = new InsideHorizontalBorder() { Val = BorderValues.Single, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders74.Append(topBorder261);
            tableBorders74.Append(leftBorder171);
            tableBorders74.Append(bottomBorder241);
            tableBorders74.Append(rightBorder171);
            tableBorders74.Append(insideHorizontalBorder170);

            styleTableProperties85.Append(tableStyleRowBandSize82);
            styleTableProperties85.Append(tableStyleColumnBandSize82);
            styleTableProperties85.Append(tableBorders74);

            TableStyleProperties tableStyleProperties564 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle326 = new RunPropertiesBaseStyle();
            Bold bold300 = new Bold();
            BoldComplexScript boldComplexScript298 = new BoldComplexScript();
            Color color92 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            runPropertiesBaseStyle326.Append(bold300);
            runPropertiesBaseStyle326.Append(boldComplexScript298);
            runPropertiesBaseStyle326.Append(color92);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties445 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties445 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders306 = new TableCellBorders();
            TopBorder topBorder262 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            LeftBorder leftBorder172 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder242 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder172 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            InsideHorizontalBorder insideHorizontalBorder171 = new InsideHorizontalBorder() { Val = BorderValues.Nil };

            tableCellBorders306.Append(topBorder262);
            tableCellBorders306.Append(leftBorder172);
            tableCellBorders306.Append(bottomBorder242);
            tableCellBorders306.Append(rightBorder172);
            tableCellBorders306.Append(insideHorizontalBorder171);
            Shading shading284 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            tableStyleConditionalFormattingTableCellProperties445.Append(tableCellBorders306);
            tableStyleConditionalFormattingTableCellProperties445.Append(shading284);

            tableStyleProperties564.Append(runPropertiesBaseStyle326);
            tableStyleProperties564.Append(tableStyleConditionalFormattingTableProperties445);
            tableStyleProperties564.Append(tableStyleConditionalFormattingTableCellProperties445);

            TableStyleProperties tableStyleProperties565 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle327 = new RunPropertiesBaseStyle();
            Bold bold301 = new Bold();
            BoldComplexScript boldComplexScript299 = new BoldComplexScript();

            runPropertiesBaseStyle327.Append(bold301);
            runPropertiesBaseStyle327.Append(boldComplexScript299);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties446 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties446 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders307 = new TableCellBorders();
            TopBorder topBorder263 = new TopBorder() { Val = BorderValues.Double, Color = "A8D08D", ThemeColor = ThemeColorValues.Accent6, ThemeTint = "99", Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders307.Append(topBorder263);

            tableStyleConditionalFormattingTableCellProperties446.Append(tableCellBorders307);

            tableStyleProperties565.Append(runPropertiesBaseStyle327);
            tableStyleProperties565.Append(tableStyleConditionalFormattingTableProperties446);
            tableStyleProperties565.Append(tableStyleConditionalFormattingTableCellProperties446);

            TableStyleProperties tableStyleProperties566 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle328 = new RunPropertiesBaseStyle();
            Bold bold302 = new Bold();
            BoldComplexScript boldComplexScript300 = new BoldComplexScript();

            runPropertiesBaseStyle328.Append(bold302);
            runPropertiesBaseStyle328.Append(boldComplexScript300);

            tableStyleProperties566.Append(runPropertiesBaseStyle328);

            TableStyleProperties tableStyleProperties567 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle329 = new RunPropertiesBaseStyle();
            Bold bold303 = new Bold();
            BoldComplexScript boldComplexScript301 = new BoldComplexScript();

            runPropertiesBaseStyle329.Append(bold303);
            runPropertiesBaseStyle329.Append(boldComplexScript301);

            tableStyleProperties567.Append(runPropertiesBaseStyle329);

            TableStyleProperties tableStyleProperties568 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties447 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties447 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading285 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties447.Append(shading285);

            tableStyleProperties568.Append(tableStyleConditionalFormattingTableProperties447);
            tableStyleProperties568.Append(tableStyleConditionalFormattingTableCellProperties447);

            TableStyleProperties tableStyleProperties569 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties448 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties448 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading286 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties448.Append(shading286);

            tableStyleProperties569.Append(tableStyleConditionalFormattingTableProperties448);
            tableStyleProperties569.Append(tableStyleConditionalFormattingTableCellProperties448);

            style115.Append(styleName115);
            style115.Append(basedOn110);
            style115.Append(uIPriority114);
            style115.Append(rsid111);
            style115.Append(styleParagraphProperties110);
            style115.Append(styleTableProperties85);
            style115.Append(tableStyleProperties564);
            style115.Append(tableStyleProperties565);
            style115.Append(tableStyleProperties566);
            style115.Append(tableStyleProperties567);
            style115.Append(tableStyleProperties568);
            style115.Append(tableStyleProperties569);

            Style style116 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark" };
            StyleName styleName116 = new StyleName() { Val = "List Table 5 Dark" };
            BasedOn basedOn111 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority115 = new UIPriority() { Val = 50 };
            Rsid rsid112 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties111 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines106 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties111.Append(spacingBetweenLines106);

            StyleRunProperties styleRunProperties40 = new StyleRunProperties();
            Color color93 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties40.Append(color93);

            StyleTableProperties styleTableProperties86 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize83 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize83 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders75 = new TableBorders();
            TopBorder topBorder264 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder173 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder243 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder173 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders75.Append(topBorder264);
            tableBorders75.Append(leftBorder173);
            tableBorders75.Append(bottomBorder243);
            tableBorders75.Append(rightBorder173);

            styleTableProperties86.Append(tableStyleRowBandSize83);
            styleTableProperties86.Append(tableStyleColumnBandSize83);
            styleTableProperties86.Append(tableBorders75);

            StyleTableCellProperties styleTableCellProperties8 = new StyleTableCellProperties();
            Shading shading287 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "000000", ThemeFill = ThemeColorValues.Text1 };

            styleTableCellProperties8.Append(shading287);

            TableStyleProperties tableStyleProperties570 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle330 = new RunPropertiesBaseStyle();
            Bold bold304 = new Bold();
            BoldComplexScript boldComplexScript302 = new BoldComplexScript();

            runPropertiesBaseStyle330.Append(bold304);
            runPropertiesBaseStyle330.Append(boldComplexScript302);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties449 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties449 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders308 = new TableCellBorders();
            BottomBorder bottomBorder244 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders308.Append(bottomBorder244);

            tableStyleConditionalFormattingTableCellProperties449.Append(tableCellBorders308);

            tableStyleProperties570.Append(runPropertiesBaseStyle330);
            tableStyleProperties570.Append(tableStyleConditionalFormattingTableProperties449);
            tableStyleProperties570.Append(tableStyleConditionalFormattingTableCellProperties449);

            TableStyleProperties tableStyleProperties571 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle331 = new RunPropertiesBaseStyle();
            Bold bold305 = new Bold();
            BoldComplexScript boldComplexScript303 = new BoldComplexScript();

            runPropertiesBaseStyle331.Append(bold305);
            runPropertiesBaseStyle331.Append(boldComplexScript303);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties450 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties450 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders309 = new TableCellBorders();
            TopBorder topBorder265 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders309.Append(topBorder265);

            tableStyleConditionalFormattingTableCellProperties450.Append(tableCellBorders309);

            tableStyleProperties571.Append(runPropertiesBaseStyle331);
            tableStyleProperties571.Append(tableStyleConditionalFormattingTableProperties450);
            tableStyleProperties571.Append(tableStyleConditionalFormattingTableCellProperties450);

            TableStyleProperties tableStyleProperties572 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle332 = new RunPropertiesBaseStyle();
            Bold bold306 = new Bold();
            BoldComplexScript boldComplexScript304 = new BoldComplexScript();

            runPropertiesBaseStyle332.Append(bold306);
            runPropertiesBaseStyle332.Append(boldComplexScript304);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties451 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties451 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders310 = new TableCellBorders();
            RightBorder rightBorder174 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders310.Append(rightBorder174);

            tableStyleConditionalFormattingTableCellProperties451.Append(tableCellBorders310);

            tableStyleProperties572.Append(runPropertiesBaseStyle332);
            tableStyleProperties572.Append(tableStyleConditionalFormattingTableProperties451);
            tableStyleProperties572.Append(tableStyleConditionalFormattingTableCellProperties451);

            TableStyleProperties tableStyleProperties573 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle333 = new RunPropertiesBaseStyle();
            Bold bold307 = new Bold();
            BoldComplexScript boldComplexScript305 = new BoldComplexScript();

            runPropertiesBaseStyle333.Append(bold307);
            runPropertiesBaseStyle333.Append(boldComplexScript305);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties452 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties452 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders311 = new TableCellBorders();
            LeftBorder leftBorder174 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders311.Append(leftBorder174);

            tableStyleConditionalFormattingTableCellProperties452.Append(tableCellBorders311);

            tableStyleProperties573.Append(runPropertiesBaseStyle333);
            tableStyleProperties573.Append(tableStyleConditionalFormattingTableProperties452);
            tableStyleProperties573.Append(tableStyleConditionalFormattingTableCellProperties452);

            TableStyleProperties tableStyleProperties574 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties453 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties453 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders312 = new TableCellBorders();
            LeftBorder leftBorder175 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder175 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders312.Append(leftBorder175);
            tableCellBorders312.Append(rightBorder175);

            tableStyleConditionalFormattingTableCellProperties453.Append(tableCellBorders312);

            tableStyleProperties574.Append(tableStyleConditionalFormattingTableProperties453);
            tableStyleProperties574.Append(tableStyleConditionalFormattingTableCellProperties453);

            TableStyleProperties tableStyleProperties575 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties454 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties454 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders313 = new TableCellBorders();
            LeftBorder leftBorder176 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder176 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders313.Append(leftBorder176);
            tableCellBorders313.Append(rightBorder176);

            tableStyleConditionalFormattingTableCellProperties454.Append(tableCellBorders313);

            tableStyleProperties575.Append(tableStyleConditionalFormattingTableProperties454);
            tableStyleProperties575.Append(tableStyleConditionalFormattingTableCellProperties454);

            TableStyleProperties tableStyleProperties576 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties455 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties455 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders314 = new TableCellBorders();
            TopBorder topBorder266 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder245 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders314.Append(topBorder266);
            tableCellBorders314.Append(bottomBorder245);

            tableStyleConditionalFormattingTableCellProperties455.Append(tableCellBorders314);

            tableStyleProperties576.Append(tableStyleConditionalFormattingTableProperties455);
            tableStyleProperties576.Append(tableStyleConditionalFormattingTableCellProperties455);

            TableStyleProperties tableStyleProperties577 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties456 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties456 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders315 = new TableCellBorders();
            LeftBorder leftBorder177 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders315.Append(leftBorder177);

            tableStyleConditionalFormattingTableCellProperties456.Append(tableCellBorders315);

            tableStyleProperties577.Append(tableStyleConditionalFormattingTableProperties456);
            tableStyleProperties577.Append(tableStyleConditionalFormattingTableCellProperties456);

            TableStyleProperties tableStyleProperties578 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties457 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties457 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders316 = new TableCellBorders();
            RightBorder rightBorder177 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders316.Append(rightBorder177);

            tableStyleConditionalFormattingTableCellProperties457.Append(tableCellBorders316);

            tableStyleProperties578.Append(tableStyleConditionalFormattingTableProperties457);
            tableStyleProperties578.Append(tableStyleConditionalFormattingTableCellProperties457);

            TableStyleProperties tableStyleProperties579 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties458 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties458 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders317 = new TableCellBorders();
            TopBorder topBorder267 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder178 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders317.Append(topBorder267);
            tableCellBorders317.Append(leftBorder178);

            tableStyleConditionalFormattingTableCellProperties458.Append(tableCellBorders317);

            tableStyleProperties579.Append(tableStyleConditionalFormattingTableProperties458);
            tableStyleProperties579.Append(tableStyleConditionalFormattingTableCellProperties458);

            TableStyleProperties tableStyleProperties580 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties459 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties459 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders318 = new TableCellBorders();
            TopBorder topBorder268 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder178 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders318.Append(topBorder268);
            tableCellBorders318.Append(rightBorder178);

            tableStyleConditionalFormattingTableCellProperties459.Append(tableCellBorders318);

            tableStyleProperties580.Append(tableStyleConditionalFormattingTableProperties459);
            tableStyleProperties580.Append(tableStyleConditionalFormattingTableCellProperties459);

            style116.Append(styleName116);
            style116.Append(basedOn111);
            style116.Append(uIPriority115);
            style116.Append(rsid112);
            style116.Append(styleParagraphProperties111);
            style116.Append(styleRunProperties40);
            style116.Append(styleTableProperties86);
            style116.Append(styleTableCellProperties8);
            style116.Append(tableStyleProperties570);
            style116.Append(tableStyleProperties571);
            style116.Append(tableStyleProperties572);
            style116.Append(tableStyleProperties573);
            style116.Append(tableStyleProperties574);
            style116.Append(tableStyleProperties575);
            style116.Append(tableStyleProperties576);
            style116.Append(tableStyleProperties577);
            style116.Append(tableStyleProperties578);
            style116.Append(tableStyleProperties579);
            style116.Append(tableStyleProperties580);

            Style style117 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent1" };
            StyleName styleName117 = new StyleName() { Val = "List Table 5 Dark Accent 1" };
            BasedOn basedOn112 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority116 = new UIPriority() { Val = 50 };
            Rsid rsid113 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties112 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines107 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties112.Append(spacingBetweenLines107);

            StyleRunProperties styleRunProperties41 = new StyleRunProperties();
            Color color94 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties41.Append(color94);

            StyleTableProperties styleTableProperties87 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize84 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize84 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders76 = new TableBorders();
            TopBorder topBorder269 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder179 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder246 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder179 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders76.Append(topBorder269);
            tableBorders76.Append(leftBorder179);
            tableBorders76.Append(bottomBorder246);
            tableBorders76.Append(rightBorder179);

            styleTableProperties87.Append(tableStyleRowBandSize84);
            styleTableProperties87.Append(tableStyleColumnBandSize84);
            styleTableProperties87.Append(tableBorders76);

            StyleTableCellProperties styleTableCellProperties9 = new StyleTableCellProperties();
            Shading shading288 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "5B9BD5", ThemeFill = ThemeColorValues.Accent1 };

            styleTableCellProperties9.Append(shading288);

            TableStyleProperties tableStyleProperties581 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle334 = new RunPropertiesBaseStyle();
            Bold bold308 = new Bold();
            BoldComplexScript boldComplexScript306 = new BoldComplexScript();

            runPropertiesBaseStyle334.Append(bold308);
            runPropertiesBaseStyle334.Append(boldComplexScript306);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties460 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties460 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders319 = new TableCellBorders();
            BottomBorder bottomBorder247 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders319.Append(bottomBorder247);

            tableStyleConditionalFormattingTableCellProperties460.Append(tableCellBorders319);

            tableStyleProperties581.Append(runPropertiesBaseStyle334);
            tableStyleProperties581.Append(tableStyleConditionalFormattingTableProperties460);
            tableStyleProperties581.Append(tableStyleConditionalFormattingTableCellProperties460);

            TableStyleProperties tableStyleProperties582 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle335 = new RunPropertiesBaseStyle();
            Bold bold309 = new Bold();
            BoldComplexScript boldComplexScript307 = new BoldComplexScript();

            runPropertiesBaseStyle335.Append(bold309);
            runPropertiesBaseStyle335.Append(boldComplexScript307);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties461 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties461 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders320 = new TableCellBorders();
            TopBorder topBorder270 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders320.Append(topBorder270);

            tableStyleConditionalFormattingTableCellProperties461.Append(tableCellBorders320);

            tableStyleProperties582.Append(runPropertiesBaseStyle335);
            tableStyleProperties582.Append(tableStyleConditionalFormattingTableProperties461);
            tableStyleProperties582.Append(tableStyleConditionalFormattingTableCellProperties461);

            TableStyleProperties tableStyleProperties583 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle336 = new RunPropertiesBaseStyle();
            Bold bold310 = new Bold();
            BoldComplexScript boldComplexScript308 = new BoldComplexScript();

            runPropertiesBaseStyle336.Append(bold310);
            runPropertiesBaseStyle336.Append(boldComplexScript308);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties462 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties462 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders321 = new TableCellBorders();
            RightBorder rightBorder180 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders321.Append(rightBorder180);

            tableStyleConditionalFormattingTableCellProperties462.Append(tableCellBorders321);

            tableStyleProperties583.Append(runPropertiesBaseStyle336);
            tableStyleProperties583.Append(tableStyleConditionalFormattingTableProperties462);
            tableStyleProperties583.Append(tableStyleConditionalFormattingTableCellProperties462);

            TableStyleProperties tableStyleProperties584 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle337 = new RunPropertiesBaseStyle();
            Bold bold311 = new Bold();
            BoldComplexScript boldComplexScript309 = new BoldComplexScript();

            runPropertiesBaseStyle337.Append(bold311);
            runPropertiesBaseStyle337.Append(boldComplexScript309);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties463 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties463 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders322 = new TableCellBorders();
            LeftBorder leftBorder180 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders322.Append(leftBorder180);

            tableStyleConditionalFormattingTableCellProperties463.Append(tableCellBorders322);

            tableStyleProperties584.Append(runPropertiesBaseStyle337);
            tableStyleProperties584.Append(tableStyleConditionalFormattingTableProperties463);
            tableStyleProperties584.Append(tableStyleConditionalFormattingTableCellProperties463);

            TableStyleProperties tableStyleProperties585 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties464 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties464 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders323 = new TableCellBorders();
            LeftBorder leftBorder181 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder181 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders323.Append(leftBorder181);
            tableCellBorders323.Append(rightBorder181);

            tableStyleConditionalFormattingTableCellProperties464.Append(tableCellBorders323);

            tableStyleProperties585.Append(tableStyleConditionalFormattingTableProperties464);
            tableStyleProperties585.Append(tableStyleConditionalFormattingTableCellProperties464);

            TableStyleProperties tableStyleProperties586 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties465 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties465 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders324 = new TableCellBorders();
            LeftBorder leftBorder182 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder182 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders324.Append(leftBorder182);
            tableCellBorders324.Append(rightBorder182);

            tableStyleConditionalFormattingTableCellProperties465.Append(tableCellBorders324);

            tableStyleProperties586.Append(tableStyleConditionalFormattingTableProperties465);
            tableStyleProperties586.Append(tableStyleConditionalFormattingTableCellProperties465);

            TableStyleProperties tableStyleProperties587 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties466 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties466 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders325 = new TableCellBorders();
            TopBorder topBorder271 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder248 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders325.Append(topBorder271);
            tableCellBorders325.Append(bottomBorder248);

            tableStyleConditionalFormattingTableCellProperties466.Append(tableCellBorders325);

            tableStyleProperties587.Append(tableStyleConditionalFormattingTableProperties466);
            tableStyleProperties587.Append(tableStyleConditionalFormattingTableCellProperties466);

            TableStyleProperties tableStyleProperties588 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties467 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties467 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders326 = new TableCellBorders();
            LeftBorder leftBorder183 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders326.Append(leftBorder183);

            tableStyleConditionalFormattingTableCellProperties467.Append(tableCellBorders326);

            tableStyleProperties588.Append(tableStyleConditionalFormattingTableProperties467);
            tableStyleProperties588.Append(tableStyleConditionalFormattingTableCellProperties467);

            TableStyleProperties tableStyleProperties589 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties468 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties468 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders327 = new TableCellBorders();
            RightBorder rightBorder183 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders327.Append(rightBorder183);

            tableStyleConditionalFormattingTableCellProperties468.Append(tableCellBorders327);

            tableStyleProperties589.Append(tableStyleConditionalFormattingTableProperties468);
            tableStyleProperties589.Append(tableStyleConditionalFormattingTableCellProperties468);

            TableStyleProperties tableStyleProperties590 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties469 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties469 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders328 = new TableCellBorders();
            TopBorder topBorder272 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder184 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders328.Append(topBorder272);
            tableCellBorders328.Append(leftBorder184);

            tableStyleConditionalFormattingTableCellProperties469.Append(tableCellBorders328);

            tableStyleProperties590.Append(tableStyleConditionalFormattingTableProperties469);
            tableStyleProperties590.Append(tableStyleConditionalFormattingTableCellProperties469);

            TableStyleProperties tableStyleProperties591 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties470 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties470 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders329 = new TableCellBorders();
            TopBorder topBorder273 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder184 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders329.Append(topBorder273);
            tableCellBorders329.Append(rightBorder184);

            tableStyleConditionalFormattingTableCellProperties470.Append(tableCellBorders329);

            tableStyleProperties591.Append(tableStyleConditionalFormattingTableProperties470);
            tableStyleProperties591.Append(tableStyleConditionalFormattingTableCellProperties470);

            style117.Append(styleName117);
            style117.Append(basedOn112);
            style117.Append(uIPriority116);
            style117.Append(rsid113);
            style117.Append(styleParagraphProperties112);
            style117.Append(styleRunProperties41);
            style117.Append(styleTableProperties87);
            style117.Append(styleTableCellProperties9);
            style117.Append(tableStyleProperties581);
            style117.Append(tableStyleProperties582);
            style117.Append(tableStyleProperties583);
            style117.Append(tableStyleProperties584);
            style117.Append(tableStyleProperties585);
            style117.Append(tableStyleProperties586);
            style117.Append(tableStyleProperties587);
            style117.Append(tableStyleProperties588);
            style117.Append(tableStyleProperties589);
            style117.Append(tableStyleProperties590);
            style117.Append(tableStyleProperties591);

            Style style118 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent2" };
            StyleName styleName118 = new StyleName() { Val = "List Table 5 Dark Accent 2" };
            BasedOn basedOn113 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority117 = new UIPriority() { Val = 50 };
            Rsid rsid114 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties113 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines108 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties113.Append(spacingBetweenLines108);

            StyleRunProperties styleRunProperties42 = new StyleRunProperties();
            Color color95 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties42.Append(color95);

            StyleTableProperties styleTableProperties88 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize85 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize85 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders77 = new TableBorders();
            TopBorder topBorder274 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder185 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder249 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder185 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders77.Append(topBorder274);
            tableBorders77.Append(leftBorder185);
            tableBorders77.Append(bottomBorder249);
            tableBorders77.Append(rightBorder185);

            styleTableProperties88.Append(tableStyleRowBandSize85);
            styleTableProperties88.Append(tableStyleColumnBandSize85);
            styleTableProperties88.Append(tableBorders77);

            StyleTableCellProperties styleTableCellProperties10 = new StyleTableCellProperties();
            Shading shading289 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "ED7D31", ThemeFill = ThemeColorValues.Accent2 };

            styleTableCellProperties10.Append(shading289);

            TableStyleProperties tableStyleProperties592 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle338 = new RunPropertiesBaseStyle();
            Bold bold312 = new Bold();
            BoldComplexScript boldComplexScript310 = new BoldComplexScript();

            runPropertiesBaseStyle338.Append(bold312);
            runPropertiesBaseStyle338.Append(boldComplexScript310);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties471 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties471 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders330 = new TableCellBorders();
            BottomBorder bottomBorder250 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders330.Append(bottomBorder250);

            tableStyleConditionalFormattingTableCellProperties471.Append(tableCellBorders330);

            tableStyleProperties592.Append(runPropertiesBaseStyle338);
            tableStyleProperties592.Append(tableStyleConditionalFormattingTableProperties471);
            tableStyleProperties592.Append(tableStyleConditionalFormattingTableCellProperties471);

            TableStyleProperties tableStyleProperties593 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle339 = new RunPropertiesBaseStyle();
            Bold bold313 = new Bold();
            BoldComplexScript boldComplexScript311 = new BoldComplexScript();

            runPropertiesBaseStyle339.Append(bold313);
            runPropertiesBaseStyle339.Append(boldComplexScript311);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties472 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties472 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders331 = new TableCellBorders();
            TopBorder topBorder275 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders331.Append(topBorder275);

            tableStyleConditionalFormattingTableCellProperties472.Append(tableCellBorders331);

            tableStyleProperties593.Append(runPropertiesBaseStyle339);
            tableStyleProperties593.Append(tableStyleConditionalFormattingTableProperties472);
            tableStyleProperties593.Append(tableStyleConditionalFormattingTableCellProperties472);

            TableStyleProperties tableStyleProperties594 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle340 = new RunPropertiesBaseStyle();
            Bold bold314 = new Bold();
            BoldComplexScript boldComplexScript312 = new BoldComplexScript();

            runPropertiesBaseStyle340.Append(bold314);
            runPropertiesBaseStyle340.Append(boldComplexScript312);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties473 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties473 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders332 = new TableCellBorders();
            RightBorder rightBorder186 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders332.Append(rightBorder186);

            tableStyleConditionalFormattingTableCellProperties473.Append(tableCellBorders332);

            tableStyleProperties594.Append(runPropertiesBaseStyle340);
            tableStyleProperties594.Append(tableStyleConditionalFormattingTableProperties473);
            tableStyleProperties594.Append(tableStyleConditionalFormattingTableCellProperties473);

            TableStyleProperties tableStyleProperties595 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle341 = new RunPropertiesBaseStyle();
            Bold bold315 = new Bold();
            BoldComplexScript boldComplexScript313 = new BoldComplexScript();

            runPropertiesBaseStyle341.Append(bold315);
            runPropertiesBaseStyle341.Append(boldComplexScript313);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties474 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties474 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders333 = new TableCellBorders();
            LeftBorder leftBorder186 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders333.Append(leftBorder186);

            tableStyleConditionalFormattingTableCellProperties474.Append(tableCellBorders333);

            tableStyleProperties595.Append(runPropertiesBaseStyle341);
            tableStyleProperties595.Append(tableStyleConditionalFormattingTableProperties474);
            tableStyleProperties595.Append(tableStyleConditionalFormattingTableCellProperties474);

            TableStyleProperties tableStyleProperties596 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties475 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties475 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders334 = new TableCellBorders();
            LeftBorder leftBorder187 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder187 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders334.Append(leftBorder187);
            tableCellBorders334.Append(rightBorder187);

            tableStyleConditionalFormattingTableCellProperties475.Append(tableCellBorders334);

            tableStyleProperties596.Append(tableStyleConditionalFormattingTableProperties475);
            tableStyleProperties596.Append(tableStyleConditionalFormattingTableCellProperties475);

            TableStyleProperties tableStyleProperties597 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties476 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties476 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders335 = new TableCellBorders();
            LeftBorder leftBorder188 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder188 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders335.Append(leftBorder188);
            tableCellBorders335.Append(rightBorder188);

            tableStyleConditionalFormattingTableCellProperties476.Append(tableCellBorders335);

            tableStyleProperties597.Append(tableStyleConditionalFormattingTableProperties476);
            tableStyleProperties597.Append(tableStyleConditionalFormattingTableCellProperties476);

            TableStyleProperties tableStyleProperties598 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties477 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties477 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders336 = new TableCellBorders();
            TopBorder topBorder276 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder251 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders336.Append(topBorder276);
            tableCellBorders336.Append(bottomBorder251);

            tableStyleConditionalFormattingTableCellProperties477.Append(tableCellBorders336);

            tableStyleProperties598.Append(tableStyleConditionalFormattingTableProperties477);
            tableStyleProperties598.Append(tableStyleConditionalFormattingTableCellProperties477);

            TableStyleProperties tableStyleProperties599 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties478 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties478 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders337 = new TableCellBorders();
            LeftBorder leftBorder189 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders337.Append(leftBorder189);

            tableStyleConditionalFormattingTableCellProperties478.Append(tableCellBorders337);

            tableStyleProperties599.Append(tableStyleConditionalFormattingTableProperties478);
            tableStyleProperties599.Append(tableStyleConditionalFormattingTableCellProperties478);

            TableStyleProperties tableStyleProperties600 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties479 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties479 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders338 = new TableCellBorders();
            RightBorder rightBorder189 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders338.Append(rightBorder189);

            tableStyleConditionalFormattingTableCellProperties479.Append(tableCellBorders338);

            tableStyleProperties600.Append(tableStyleConditionalFormattingTableProperties479);
            tableStyleProperties600.Append(tableStyleConditionalFormattingTableCellProperties479);

            TableStyleProperties tableStyleProperties601 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties480 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties480 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders339 = new TableCellBorders();
            TopBorder topBorder277 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder190 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders339.Append(topBorder277);
            tableCellBorders339.Append(leftBorder190);

            tableStyleConditionalFormattingTableCellProperties480.Append(tableCellBorders339);

            tableStyleProperties601.Append(tableStyleConditionalFormattingTableProperties480);
            tableStyleProperties601.Append(tableStyleConditionalFormattingTableCellProperties480);

            TableStyleProperties tableStyleProperties602 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties481 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties481 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders340 = new TableCellBorders();
            TopBorder topBorder278 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder190 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders340.Append(topBorder278);
            tableCellBorders340.Append(rightBorder190);

            tableStyleConditionalFormattingTableCellProperties481.Append(tableCellBorders340);

            tableStyleProperties602.Append(tableStyleConditionalFormattingTableProperties481);
            tableStyleProperties602.Append(tableStyleConditionalFormattingTableCellProperties481);

            style118.Append(styleName118);
            style118.Append(basedOn113);
            style118.Append(uIPriority117);
            style118.Append(rsid114);
            style118.Append(styleParagraphProperties113);
            style118.Append(styleRunProperties42);
            style118.Append(styleTableProperties88);
            style118.Append(styleTableCellProperties10);
            style118.Append(tableStyleProperties592);
            style118.Append(tableStyleProperties593);
            style118.Append(tableStyleProperties594);
            style118.Append(tableStyleProperties595);
            style118.Append(tableStyleProperties596);
            style118.Append(tableStyleProperties597);
            style118.Append(tableStyleProperties598);
            style118.Append(tableStyleProperties599);
            style118.Append(tableStyleProperties600);
            style118.Append(tableStyleProperties601);
            style118.Append(tableStyleProperties602);

            Style style119 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent3" };
            StyleName styleName119 = new StyleName() { Val = "List Table 5 Dark Accent 3" };
            BasedOn basedOn114 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority118 = new UIPriority() { Val = 50 };
            Rsid rsid115 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties114 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines109 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties114.Append(spacingBetweenLines109);

            StyleRunProperties styleRunProperties43 = new StyleRunProperties();
            Color color96 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties43.Append(color96);

            StyleTableProperties styleTableProperties89 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize86 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize86 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders78 = new TableBorders();
            TopBorder topBorder279 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder191 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder252 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder191 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders78.Append(topBorder279);
            tableBorders78.Append(leftBorder191);
            tableBorders78.Append(bottomBorder252);
            tableBorders78.Append(rightBorder191);

            styleTableProperties89.Append(tableStyleRowBandSize86);
            styleTableProperties89.Append(tableStyleColumnBandSize86);
            styleTableProperties89.Append(tableBorders78);

            StyleTableCellProperties styleTableCellProperties11 = new StyleTableCellProperties();
            Shading shading290 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "A5A5A5", ThemeFill = ThemeColorValues.Accent3 };

            styleTableCellProperties11.Append(shading290);

            TableStyleProperties tableStyleProperties603 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle342 = new RunPropertiesBaseStyle();
            Bold bold316 = new Bold();
            BoldComplexScript boldComplexScript314 = new BoldComplexScript();

            runPropertiesBaseStyle342.Append(bold316);
            runPropertiesBaseStyle342.Append(boldComplexScript314);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties482 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties482 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders341 = new TableCellBorders();
            BottomBorder bottomBorder253 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders341.Append(bottomBorder253);

            tableStyleConditionalFormattingTableCellProperties482.Append(tableCellBorders341);

            tableStyleProperties603.Append(runPropertiesBaseStyle342);
            tableStyleProperties603.Append(tableStyleConditionalFormattingTableProperties482);
            tableStyleProperties603.Append(tableStyleConditionalFormattingTableCellProperties482);

            TableStyleProperties tableStyleProperties604 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle343 = new RunPropertiesBaseStyle();
            Bold bold317 = new Bold();
            BoldComplexScript boldComplexScript315 = new BoldComplexScript();

            runPropertiesBaseStyle343.Append(bold317);
            runPropertiesBaseStyle343.Append(boldComplexScript315);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties483 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties483 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders342 = new TableCellBorders();
            TopBorder topBorder280 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders342.Append(topBorder280);

            tableStyleConditionalFormattingTableCellProperties483.Append(tableCellBorders342);

            tableStyleProperties604.Append(runPropertiesBaseStyle343);
            tableStyleProperties604.Append(tableStyleConditionalFormattingTableProperties483);
            tableStyleProperties604.Append(tableStyleConditionalFormattingTableCellProperties483);

            TableStyleProperties tableStyleProperties605 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle344 = new RunPropertiesBaseStyle();
            Bold bold318 = new Bold();
            BoldComplexScript boldComplexScript316 = new BoldComplexScript();

            runPropertiesBaseStyle344.Append(bold318);
            runPropertiesBaseStyle344.Append(boldComplexScript316);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties484 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties484 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders343 = new TableCellBorders();
            RightBorder rightBorder192 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders343.Append(rightBorder192);

            tableStyleConditionalFormattingTableCellProperties484.Append(tableCellBorders343);

            tableStyleProperties605.Append(runPropertiesBaseStyle344);
            tableStyleProperties605.Append(tableStyleConditionalFormattingTableProperties484);
            tableStyleProperties605.Append(tableStyleConditionalFormattingTableCellProperties484);

            TableStyleProperties tableStyleProperties606 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle345 = new RunPropertiesBaseStyle();
            Bold bold319 = new Bold();
            BoldComplexScript boldComplexScript317 = new BoldComplexScript();

            runPropertiesBaseStyle345.Append(bold319);
            runPropertiesBaseStyle345.Append(boldComplexScript317);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties485 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties485 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders344 = new TableCellBorders();
            LeftBorder leftBorder192 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders344.Append(leftBorder192);

            tableStyleConditionalFormattingTableCellProperties485.Append(tableCellBorders344);

            tableStyleProperties606.Append(runPropertiesBaseStyle345);
            tableStyleProperties606.Append(tableStyleConditionalFormattingTableProperties485);
            tableStyleProperties606.Append(tableStyleConditionalFormattingTableCellProperties485);

            TableStyleProperties tableStyleProperties607 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties486 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties486 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders345 = new TableCellBorders();
            LeftBorder leftBorder193 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder193 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders345.Append(leftBorder193);
            tableCellBorders345.Append(rightBorder193);

            tableStyleConditionalFormattingTableCellProperties486.Append(tableCellBorders345);

            tableStyleProperties607.Append(tableStyleConditionalFormattingTableProperties486);
            tableStyleProperties607.Append(tableStyleConditionalFormattingTableCellProperties486);

            TableStyleProperties tableStyleProperties608 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties487 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties487 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders346 = new TableCellBorders();
            LeftBorder leftBorder194 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder194 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders346.Append(leftBorder194);
            tableCellBorders346.Append(rightBorder194);

            tableStyleConditionalFormattingTableCellProperties487.Append(tableCellBorders346);

            tableStyleProperties608.Append(tableStyleConditionalFormattingTableProperties487);
            tableStyleProperties608.Append(tableStyleConditionalFormattingTableCellProperties487);

            TableStyleProperties tableStyleProperties609 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties488 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties488 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders347 = new TableCellBorders();
            TopBorder topBorder281 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder254 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders347.Append(topBorder281);
            tableCellBorders347.Append(bottomBorder254);

            tableStyleConditionalFormattingTableCellProperties488.Append(tableCellBorders347);

            tableStyleProperties609.Append(tableStyleConditionalFormattingTableProperties488);
            tableStyleProperties609.Append(tableStyleConditionalFormattingTableCellProperties488);

            TableStyleProperties tableStyleProperties610 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties489 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties489 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders348 = new TableCellBorders();
            LeftBorder leftBorder195 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders348.Append(leftBorder195);

            tableStyleConditionalFormattingTableCellProperties489.Append(tableCellBorders348);

            tableStyleProperties610.Append(tableStyleConditionalFormattingTableProperties489);
            tableStyleProperties610.Append(tableStyleConditionalFormattingTableCellProperties489);

            TableStyleProperties tableStyleProperties611 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties490 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties490 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders349 = new TableCellBorders();
            RightBorder rightBorder195 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders349.Append(rightBorder195);

            tableStyleConditionalFormattingTableCellProperties490.Append(tableCellBorders349);

            tableStyleProperties611.Append(tableStyleConditionalFormattingTableProperties490);
            tableStyleProperties611.Append(tableStyleConditionalFormattingTableCellProperties490);

            TableStyleProperties tableStyleProperties612 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties491 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties491 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders350 = new TableCellBorders();
            TopBorder topBorder282 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder196 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders350.Append(topBorder282);
            tableCellBorders350.Append(leftBorder196);

            tableStyleConditionalFormattingTableCellProperties491.Append(tableCellBorders350);

            tableStyleProperties612.Append(tableStyleConditionalFormattingTableProperties491);
            tableStyleProperties612.Append(tableStyleConditionalFormattingTableCellProperties491);

            TableStyleProperties tableStyleProperties613 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties492 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties492 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders351 = new TableCellBorders();
            TopBorder topBorder283 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder196 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders351.Append(topBorder283);
            tableCellBorders351.Append(rightBorder196);

            tableStyleConditionalFormattingTableCellProperties492.Append(tableCellBorders351);

            tableStyleProperties613.Append(tableStyleConditionalFormattingTableProperties492);
            tableStyleProperties613.Append(tableStyleConditionalFormattingTableCellProperties492);

            style119.Append(styleName119);
            style119.Append(basedOn114);
            style119.Append(uIPriority118);
            style119.Append(rsid115);
            style119.Append(styleParagraphProperties114);
            style119.Append(styleRunProperties43);
            style119.Append(styleTableProperties89);
            style119.Append(styleTableCellProperties11);
            style119.Append(tableStyleProperties603);
            style119.Append(tableStyleProperties604);
            style119.Append(tableStyleProperties605);
            style119.Append(tableStyleProperties606);
            style119.Append(tableStyleProperties607);
            style119.Append(tableStyleProperties608);
            style119.Append(tableStyleProperties609);
            style119.Append(tableStyleProperties610);
            style119.Append(tableStyleProperties611);
            style119.Append(tableStyleProperties612);
            style119.Append(tableStyleProperties613);

            Style style120 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent4" };
            StyleName styleName120 = new StyleName() { Val = "List Table 5 Dark Accent 4" };
            BasedOn basedOn115 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority119 = new UIPriority() { Val = 50 };
            Rsid rsid116 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties115 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines110 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties115.Append(spacingBetweenLines110);

            StyleRunProperties styleRunProperties44 = new StyleRunProperties();
            Color color97 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties44.Append(color97);

            StyleTableProperties styleTableProperties90 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize87 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize87 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders79 = new TableBorders();
            TopBorder topBorder284 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder197 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder255 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder197 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders79.Append(topBorder284);
            tableBorders79.Append(leftBorder197);
            tableBorders79.Append(bottomBorder255);
            tableBorders79.Append(rightBorder197);

            styleTableProperties90.Append(tableStyleRowBandSize87);
            styleTableProperties90.Append(tableStyleColumnBandSize87);
            styleTableProperties90.Append(tableBorders79);

            StyleTableCellProperties styleTableCellProperties12 = new StyleTableCellProperties();
            Shading shading291 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFC000", ThemeFill = ThemeColorValues.Accent4 };

            styleTableCellProperties12.Append(shading291);

            TableStyleProperties tableStyleProperties614 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle346 = new RunPropertiesBaseStyle();
            Bold bold320 = new Bold();
            BoldComplexScript boldComplexScript318 = new BoldComplexScript();

            runPropertiesBaseStyle346.Append(bold320);
            runPropertiesBaseStyle346.Append(boldComplexScript318);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties493 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties493 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders352 = new TableCellBorders();
            BottomBorder bottomBorder256 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders352.Append(bottomBorder256);

            tableStyleConditionalFormattingTableCellProperties493.Append(tableCellBorders352);

            tableStyleProperties614.Append(runPropertiesBaseStyle346);
            tableStyleProperties614.Append(tableStyleConditionalFormattingTableProperties493);
            tableStyleProperties614.Append(tableStyleConditionalFormattingTableCellProperties493);

            TableStyleProperties tableStyleProperties615 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle347 = new RunPropertiesBaseStyle();
            Bold bold321 = new Bold();
            BoldComplexScript boldComplexScript319 = new BoldComplexScript();

            runPropertiesBaseStyle347.Append(bold321);
            runPropertiesBaseStyle347.Append(boldComplexScript319);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties494 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties494 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders353 = new TableCellBorders();
            TopBorder topBorder285 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders353.Append(topBorder285);

            tableStyleConditionalFormattingTableCellProperties494.Append(tableCellBorders353);

            tableStyleProperties615.Append(runPropertiesBaseStyle347);
            tableStyleProperties615.Append(tableStyleConditionalFormattingTableProperties494);
            tableStyleProperties615.Append(tableStyleConditionalFormattingTableCellProperties494);

            TableStyleProperties tableStyleProperties616 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle348 = new RunPropertiesBaseStyle();
            Bold bold322 = new Bold();
            BoldComplexScript boldComplexScript320 = new BoldComplexScript();

            runPropertiesBaseStyle348.Append(bold322);
            runPropertiesBaseStyle348.Append(boldComplexScript320);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties495 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties495 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders354 = new TableCellBorders();
            RightBorder rightBorder198 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders354.Append(rightBorder198);

            tableStyleConditionalFormattingTableCellProperties495.Append(tableCellBorders354);

            tableStyleProperties616.Append(runPropertiesBaseStyle348);
            tableStyleProperties616.Append(tableStyleConditionalFormattingTableProperties495);
            tableStyleProperties616.Append(tableStyleConditionalFormattingTableCellProperties495);

            TableStyleProperties tableStyleProperties617 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle349 = new RunPropertiesBaseStyle();
            Bold bold323 = new Bold();
            BoldComplexScript boldComplexScript321 = new BoldComplexScript();

            runPropertiesBaseStyle349.Append(bold323);
            runPropertiesBaseStyle349.Append(boldComplexScript321);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties496 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties496 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders355 = new TableCellBorders();
            LeftBorder leftBorder198 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders355.Append(leftBorder198);

            tableStyleConditionalFormattingTableCellProperties496.Append(tableCellBorders355);

            tableStyleProperties617.Append(runPropertiesBaseStyle349);
            tableStyleProperties617.Append(tableStyleConditionalFormattingTableProperties496);
            tableStyleProperties617.Append(tableStyleConditionalFormattingTableCellProperties496);

            TableStyleProperties tableStyleProperties618 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties497 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties497 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders356 = new TableCellBorders();
            LeftBorder leftBorder199 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder199 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders356.Append(leftBorder199);
            tableCellBorders356.Append(rightBorder199);

            tableStyleConditionalFormattingTableCellProperties497.Append(tableCellBorders356);

            tableStyleProperties618.Append(tableStyleConditionalFormattingTableProperties497);
            tableStyleProperties618.Append(tableStyleConditionalFormattingTableCellProperties497);

            TableStyleProperties tableStyleProperties619 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties498 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties498 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders357 = new TableCellBorders();
            LeftBorder leftBorder200 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder200 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders357.Append(leftBorder200);
            tableCellBorders357.Append(rightBorder200);

            tableStyleConditionalFormattingTableCellProperties498.Append(tableCellBorders357);

            tableStyleProperties619.Append(tableStyleConditionalFormattingTableProperties498);
            tableStyleProperties619.Append(tableStyleConditionalFormattingTableCellProperties498);

            TableStyleProperties tableStyleProperties620 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties499 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties499 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders358 = new TableCellBorders();
            TopBorder topBorder286 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder257 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders358.Append(topBorder286);
            tableCellBorders358.Append(bottomBorder257);

            tableStyleConditionalFormattingTableCellProperties499.Append(tableCellBorders358);

            tableStyleProperties620.Append(tableStyleConditionalFormattingTableProperties499);
            tableStyleProperties620.Append(tableStyleConditionalFormattingTableCellProperties499);

            TableStyleProperties tableStyleProperties621 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties500 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties500 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders359 = new TableCellBorders();
            LeftBorder leftBorder201 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders359.Append(leftBorder201);

            tableStyleConditionalFormattingTableCellProperties500.Append(tableCellBorders359);

            tableStyleProperties621.Append(tableStyleConditionalFormattingTableProperties500);
            tableStyleProperties621.Append(tableStyleConditionalFormattingTableCellProperties500);

            TableStyleProperties tableStyleProperties622 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties501 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties501 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders360 = new TableCellBorders();
            RightBorder rightBorder201 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders360.Append(rightBorder201);

            tableStyleConditionalFormattingTableCellProperties501.Append(tableCellBorders360);

            tableStyleProperties622.Append(tableStyleConditionalFormattingTableProperties501);
            tableStyleProperties622.Append(tableStyleConditionalFormattingTableCellProperties501);

            TableStyleProperties tableStyleProperties623 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties502 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties502 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders361 = new TableCellBorders();
            TopBorder topBorder287 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder202 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders361.Append(topBorder287);
            tableCellBorders361.Append(leftBorder202);

            tableStyleConditionalFormattingTableCellProperties502.Append(tableCellBorders361);

            tableStyleProperties623.Append(tableStyleConditionalFormattingTableProperties502);
            tableStyleProperties623.Append(tableStyleConditionalFormattingTableCellProperties502);

            TableStyleProperties tableStyleProperties624 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties503 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties503 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders362 = new TableCellBorders();
            TopBorder topBorder288 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder202 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders362.Append(topBorder288);
            tableCellBorders362.Append(rightBorder202);

            tableStyleConditionalFormattingTableCellProperties503.Append(tableCellBorders362);

            tableStyleProperties624.Append(tableStyleConditionalFormattingTableProperties503);
            tableStyleProperties624.Append(tableStyleConditionalFormattingTableCellProperties503);

            style120.Append(styleName120);
            style120.Append(basedOn115);
            style120.Append(uIPriority119);
            style120.Append(rsid116);
            style120.Append(styleParagraphProperties115);
            style120.Append(styleRunProperties44);
            style120.Append(styleTableProperties90);
            style120.Append(styleTableCellProperties12);
            style120.Append(tableStyleProperties614);
            style120.Append(tableStyleProperties615);
            style120.Append(tableStyleProperties616);
            style120.Append(tableStyleProperties617);
            style120.Append(tableStyleProperties618);
            style120.Append(tableStyleProperties619);
            style120.Append(tableStyleProperties620);
            style120.Append(tableStyleProperties621);
            style120.Append(tableStyleProperties622);
            style120.Append(tableStyleProperties623);
            style120.Append(tableStyleProperties624);

            Style style121 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent5" };
            StyleName styleName121 = new StyleName() { Val = "List Table 5 Dark Accent 5" };
            BasedOn basedOn116 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority120 = new UIPriority() { Val = 50 };
            Rsid rsid117 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties116 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines111 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties116.Append(spacingBetweenLines111);

            StyleRunProperties styleRunProperties45 = new StyleRunProperties();
            Color color98 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties45.Append(color98);

            StyleTableProperties styleTableProperties91 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize88 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize88 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders80 = new TableBorders();
            TopBorder topBorder289 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder203 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder258 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder203 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders80.Append(topBorder289);
            tableBorders80.Append(leftBorder203);
            tableBorders80.Append(bottomBorder258);
            tableBorders80.Append(rightBorder203);

            styleTableProperties91.Append(tableStyleRowBandSize88);
            styleTableProperties91.Append(tableStyleColumnBandSize88);
            styleTableProperties91.Append(tableBorders80);

            StyleTableCellProperties styleTableCellProperties13 = new StyleTableCellProperties();
            Shading shading292 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "4472C4", ThemeFill = ThemeColorValues.Accent5 };

            styleTableCellProperties13.Append(shading292);

            TableStyleProperties tableStyleProperties625 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle350 = new RunPropertiesBaseStyle();
            Bold bold324 = new Bold();
            BoldComplexScript boldComplexScript322 = new BoldComplexScript();

            runPropertiesBaseStyle350.Append(bold324);
            runPropertiesBaseStyle350.Append(boldComplexScript322);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties504 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties504 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders363 = new TableCellBorders();
            BottomBorder bottomBorder259 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders363.Append(bottomBorder259);

            tableStyleConditionalFormattingTableCellProperties504.Append(tableCellBorders363);

            tableStyleProperties625.Append(runPropertiesBaseStyle350);
            tableStyleProperties625.Append(tableStyleConditionalFormattingTableProperties504);
            tableStyleProperties625.Append(tableStyleConditionalFormattingTableCellProperties504);

            TableStyleProperties tableStyleProperties626 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle351 = new RunPropertiesBaseStyle();
            Bold bold325 = new Bold();
            BoldComplexScript boldComplexScript323 = new BoldComplexScript();

            runPropertiesBaseStyle351.Append(bold325);
            runPropertiesBaseStyle351.Append(boldComplexScript323);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties505 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties505 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders364 = new TableCellBorders();
            TopBorder topBorder290 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders364.Append(topBorder290);

            tableStyleConditionalFormattingTableCellProperties505.Append(tableCellBorders364);

            tableStyleProperties626.Append(runPropertiesBaseStyle351);
            tableStyleProperties626.Append(tableStyleConditionalFormattingTableProperties505);
            tableStyleProperties626.Append(tableStyleConditionalFormattingTableCellProperties505);

            TableStyleProperties tableStyleProperties627 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle352 = new RunPropertiesBaseStyle();
            Bold bold326 = new Bold();
            BoldComplexScript boldComplexScript324 = new BoldComplexScript();

            runPropertiesBaseStyle352.Append(bold326);
            runPropertiesBaseStyle352.Append(boldComplexScript324);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties506 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties506 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders365 = new TableCellBorders();
            RightBorder rightBorder204 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders365.Append(rightBorder204);

            tableStyleConditionalFormattingTableCellProperties506.Append(tableCellBorders365);

            tableStyleProperties627.Append(runPropertiesBaseStyle352);
            tableStyleProperties627.Append(tableStyleConditionalFormattingTableProperties506);
            tableStyleProperties627.Append(tableStyleConditionalFormattingTableCellProperties506);

            TableStyleProperties tableStyleProperties628 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle353 = new RunPropertiesBaseStyle();
            Bold bold327 = new Bold();
            BoldComplexScript boldComplexScript325 = new BoldComplexScript();

            runPropertiesBaseStyle353.Append(bold327);
            runPropertiesBaseStyle353.Append(boldComplexScript325);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties507 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties507 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders366 = new TableCellBorders();
            LeftBorder leftBorder204 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders366.Append(leftBorder204);

            tableStyleConditionalFormattingTableCellProperties507.Append(tableCellBorders366);

            tableStyleProperties628.Append(runPropertiesBaseStyle353);
            tableStyleProperties628.Append(tableStyleConditionalFormattingTableProperties507);
            tableStyleProperties628.Append(tableStyleConditionalFormattingTableCellProperties507);

            TableStyleProperties tableStyleProperties629 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties508 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties508 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders367 = new TableCellBorders();
            LeftBorder leftBorder205 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder205 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders367.Append(leftBorder205);
            tableCellBorders367.Append(rightBorder205);

            tableStyleConditionalFormattingTableCellProperties508.Append(tableCellBorders367);

            tableStyleProperties629.Append(tableStyleConditionalFormattingTableProperties508);
            tableStyleProperties629.Append(tableStyleConditionalFormattingTableCellProperties508);

            TableStyleProperties tableStyleProperties630 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties509 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties509 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders368 = new TableCellBorders();
            LeftBorder leftBorder206 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder206 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders368.Append(leftBorder206);
            tableCellBorders368.Append(rightBorder206);

            tableStyleConditionalFormattingTableCellProperties509.Append(tableCellBorders368);

            tableStyleProperties630.Append(tableStyleConditionalFormattingTableProperties509);
            tableStyleProperties630.Append(tableStyleConditionalFormattingTableCellProperties509);

            TableStyleProperties tableStyleProperties631 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties510 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties510 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders369 = new TableCellBorders();
            TopBorder topBorder291 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder260 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders369.Append(topBorder291);
            tableCellBorders369.Append(bottomBorder260);

            tableStyleConditionalFormattingTableCellProperties510.Append(tableCellBorders369);

            tableStyleProperties631.Append(tableStyleConditionalFormattingTableProperties510);
            tableStyleProperties631.Append(tableStyleConditionalFormattingTableCellProperties510);

            TableStyleProperties tableStyleProperties632 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties511 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties511 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders370 = new TableCellBorders();
            LeftBorder leftBorder207 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders370.Append(leftBorder207);

            tableStyleConditionalFormattingTableCellProperties511.Append(tableCellBorders370);

            tableStyleProperties632.Append(tableStyleConditionalFormattingTableProperties511);
            tableStyleProperties632.Append(tableStyleConditionalFormattingTableCellProperties511);

            TableStyleProperties tableStyleProperties633 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties512 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties512 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders371 = new TableCellBorders();
            RightBorder rightBorder207 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders371.Append(rightBorder207);

            tableStyleConditionalFormattingTableCellProperties512.Append(tableCellBorders371);

            tableStyleProperties633.Append(tableStyleConditionalFormattingTableProperties512);
            tableStyleProperties633.Append(tableStyleConditionalFormattingTableCellProperties512);

            TableStyleProperties tableStyleProperties634 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties513 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties513 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders372 = new TableCellBorders();
            TopBorder topBorder292 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder208 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders372.Append(topBorder292);
            tableCellBorders372.Append(leftBorder208);

            tableStyleConditionalFormattingTableCellProperties513.Append(tableCellBorders372);

            tableStyleProperties634.Append(tableStyleConditionalFormattingTableProperties513);
            tableStyleProperties634.Append(tableStyleConditionalFormattingTableCellProperties513);

            TableStyleProperties tableStyleProperties635 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties514 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties514 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders373 = new TableCellBorders();
            TopBorder topBorder293 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder208 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders373.Append(topBorder293);
            tableCellBorders373.Append(rightBorder208);

            tableStyleConditionalFormattingTableCellProperties514.Append(tableCellBorders373);

            tableStyleProperties635.Append(tableStyleConditionalFormattingTableProperties514);
            tableStyleProperties635.Append(tableStyleConditionalFormattingTableCellProperties514);

            style121.Append(styleName121);
            style121.Append(basedOn116);
            style121.Append(uIPriority120);
            style121.Append(rsid117);
            style121.Append(styleParagraphProperties116);
            style121.Append(styleRunProperties45);
            style121.Append(styleTableProperties91);
            style121.Append(styleTableCellProperties13);
            style121.Append(tableStyleProperties625);
            style121.Append(tableStyleProperties626);
            style121.Append(tableStyleProperties627);
            style121.Append(tableStyleProperties628);
            style121.Append(tableStyleProperties629);
            style121.Append(tableStyleProperties630);
            style121.Append(tableStyleProperties631);
            style121.Append(tableStyleProperties632);
            style121.Append(tableStyleProperties633);
            style121.Append(tableStyleProperties634);
            style121.Append(tableStyleProperties635);

            Style style122 = new Style() { Type = StyleValues.Table, StyleId = "ListTable5Dark-Accent6" };
            StyleName styleName122 = new StyleName() { Val = "List Table 5 Dark Accent 6" };
            BasedOn basedOn117 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority121 = new UIPriority() { Val = 50 };
            Rsid rsid118 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties117 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines112 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties117.Append(spacingBetweenLines112);

            StyleRunProperties styleRunProperties46 = new StyleRunProperties();
            Color color99 = new Color() { Val = "FFFFFF", ThemeColor = ThemeColorValues.Background1 };

            styleRunProperties46.Append(color99);

            StyleTableProperties styleTableProperties92 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize89 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize89 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders81 = new TableBorders();
            TopBorder topBorder294 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            LeftBorder leftBorder209 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder261 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)24U, Space = (UInt32Value)0U };
            RightBorder rightBorder209 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)24U, Space = (UInt32Value)0U };

            tableBorders81.Append(topBorder294);
            tableBorders81.Append(leftBorder209);
            tableBorders81.Append(bottomBorder261);
            tableBorders81.Append(rightBorder209);

            styleTableProperties92.Append(tableStyleRowBandSize89);
            styleTableProperties92.Append(tableStyleColumnBandSize89);
            styleTableProperties92.Append(tableBorders81);

            StyleTableCellProperties styleTableCellProperties14 = new StyleTableCellProperties();
            Shading shading293 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "70AD47", ThemeFill = ThemeColorValues.Accent6 };

            styleTableCellProperties14.Append(shading293);

            TableStyleProperties tableStyleProperties636 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle354 = new RunPropertiesBaseStyle();
            Bold bold328 = new Bold();
            BoldComplexScript boldComplexScript326 = new BoldComplexScript();

            runPropertiesBaseStyle354.Append(bold328);
            runPropertiesBaseStyle354.Append(boldComplexScript326);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties515 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties515 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders374 = new TableCellBorders();
            BottomBorder bottomBorder262 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)18U, Space = (UInt32Value)0U };

            tableCellBorders374.Append(bottomBorder262);

            tableStyleConditionalFormattingTableCellProperties515.Append(tableCellBorders374);

            tableStyleProperties636.Append(runPropertiesBaseStyle354);
            tableStyleProperties636.Append(tableStyleConditionalFormattingTableProperties515);
            tableStyleProperties636.Append(tableStyleConditionalFormattingTableCellProperties515);

            TableStyleProperties tableStyleProperties637 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle355 = new RunPropertiesBaseStyle();
            Bold bold329 = new Bold();
            BoldComplexScript boldComplexScript327 = new BoldComplexScript();

            runPropertiesBaseStyle355.Append(bold329);
            runPropertiesBaseStyle355.Append(boldComplexScript327);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties516 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties516 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders375 = new TableCellBorders();
            TopBorder topBorder295 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders375.Append(topBorder295);

            tableStyleConditionalFormattingTableCellProperties516.Append(tableCellBorders375);

            tableStyleProperties637.Append(runPropertiesBaseStyle355);
            tableStyleProperties637.Append(tableStyleConditionalFormattingTableProperties516);
            tableStyleProperties637.Append(tableStyleConditionalFormattingTableCellProperties516);

            TableStyleProperties tableStyleProperties638 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle356 = new RunPropertiesBaseStyle();
            Bold bold330 = new Bold();
            BoldComplexScript boldComplexScript328 = new BoldComplexScript();

            runPropertiesBaseStyle356.Append(bold330);
            runPropertiesBaseStyle356.Append(boldComplexScript328);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties517 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties517 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders376 = new TableCellBorders();
            RightBorder rightBorder210 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders376.Append(rightBorder210);

            tableStyleConditionalFormattingTableCellProperties517.Append(tableCellBorders376);

            tableStyleProperties638.Append(runPropertiesBaseStyle356);
            tableStyleProperties638.Append(tableStyleConditionalFormattingTableProperties517);
            tableStyleProperties638.Append(tableStyleConditionalFormattingTableCellProperties517);

            TableStyleProperties tableStyleProperties639 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle357 = new RunPropertiesBaseStyle();
            Bold bold331 = new Bold();
            BoldComplexScript boldComplexScript329 = new BoldComplexScript();

            runPropertiesBaseStyle357.Append(bold331);
            runPropertiesBaseStyle357.Append(boldComplexScript329);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties518 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties518 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders377 = new TableCellBorders();
            LeftBorder leftBorder210 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders377.Append(leftBorder210);

            tableStyleConditionalFormattingTableCellProperties518.Append(tableCellBorders377);

            tableStyleProperties639.Append(runPropertiesBaseStyle357);
            tableStyleProperties639.Append(tableStyleConditionalFormattingTableProperties518);
            tableStyleProperties639.Append(tableStyleConditionalFormattingTableCellProperties518);

            TableStyleProperties tableStyleProperties640 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties519 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties519 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders378 = new TableCellBorders();
            LeftBorder leftBorder211 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder211 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders378.Append(leftBorder211);
            tableCellBorders378.Append(rightBorder211);

            tableStyleConditionalFormattingTableCellProperties519.Append(tableCellBorders378);

            tableStyleProperties640.Append(tableStyleConditionalFormattingTableProperties519);
            tableStyleProperties640.Append(tableStyleConditionalFormattingTableCellProperties519);

            TableStyleProperties tableStyleProperties641 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band2Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties520 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties520 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders379 = new TableCellBorders();
            LeftBorder leftBorder212 = new LeftBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            RightBorder rightBorder212 = new RightBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders379.Append(leftBorder212);
            tableCellBorders379.Append(rightBorder212);

            tableStyleConditionalFormattingTableCellProperties520.Append(tableCellBorders379);

            tableStyleProperties641.Append(tableStyleConditionalFormattingTableProperties520);
            tableStyleProperties641.Append(tableStyleConditionalFormattingTableCellProperties520);

            TableStyleProperties tableStyleProperties642 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties521 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties521 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders380 = new TableCellBorders();
            TopBorder topBorder296 = new TopBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder263 = new BottomBorder() { Val = BorderValues.Single, Color = "FFFFFF", ThemeColor = ThemeColorValues.Background1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders380.Append(topBorder296);
            tableCellBorders380.Append(bottomBorder263);

            tableStyleConditionalFormattingTableCellProperties521.Append(tableCellBorders380);

            tableStyleProperties642.Append(tableStyleConditionalFormattingTableProperties521);
            tableStyleProperties642.Append(tableStyleConditionalFormattingTableCellProperties521);

            TableStyleProperties tableStyleProperties643 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties522 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties522 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders381 = new TableCellBorders();
            LeftBorder leftBorder213 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders381.Append(leftBorder213);

            tableStyleConditionalFormattingTableCellProperties522.Append(tableCellBorders381);

            tableStyleProperties643.Append(tableStyleConditionalFormattingTableProperties522);
            tableStyleProperties643.Append(tableStyleConditionalFormattingTableCellProperties522);

            TableStyleProperties tableStyleProperties644 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties523 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties523 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders382 = new TableCellBorders();
            RightBorder rightBorder213 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders382.Append(rightBorder213);

            tableStyleConditionalFormattingTableCellProperties523.Append(tableCellBorders382);

            tableStyleProperties644.Append(tableStyleConditionalFormattingTableProperties523);
            tableStyleProperties644.Append(tableStyleConditionalFormattingTableCellProperties523);

            TableStyleProperties tableStyleProperties645 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties524 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties524 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders383 = new TableCellBorders();
            TopBorder topBorder297 = new TopBorder() { Val = BorderValues.Nil };
            LeftBorder leftBorder214 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders383.Append(topBorder297);
            tableCellBorders383.Append(leftBorder214);

            tableStyleConditionalFormattingTableCellProperties524.Append(tableCellBorders383);

            tableStyleProperties645.Append(tableStyleConditionalFormattingTableProperties524);
            tableStyleProperties645.Append(tableStyleConditionalFormattingTableCellProperties524);

            TableStyleProperties tableStyleProperties646 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties525 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties525 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders384 = new TableCellBorders();
            TopBorder topBorder298 = new TopBorder() { Val = BorderValues.Nil };
            RightBorder rightBorder214 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders384.Append(topBorder298);
            tableCellBorders384.Append(rightBorder214);

            tableStyleConditionalFormattingTableCellProperties525.Append(tableCellBorders384);

            tableStyleProperties646.Append(tableStyleConditionalFormattingTableProperties525);
            tableStyleProperties646.Append(tableStyleConditionalFormattingTableCellProperties525);

            style122.Append(styleName122);
            style122.Append(basedOn117);
            style122.Append(uIPriority121);
            style122.Append(rsid118);
            style122.Append(styleParagraphProperties117);
            style122.Append(styleRunProperties46);
            style122.Append(styleTableProperties92);
            style122.Append(styleTableCellProperties14);
            style122.Append(tableStyleProperties636);
            style122.Append(tableStyleProperties637);
            style122.Append(tableStyleProperties638);
            style122.Append(tableStyleProperties639);
            style122.Append(tableStyleProperties640);
            style122.Append(tableStyleProperties641);
            style122.Append(tableStyleProperties642);
            style122.Append(tableStyleProperties643);
            style122.Append(tableStyleProperties644);
            style122.Append(tableStyleProperties645);
            style122.Append(tableStyleProperties646);

            Style style123 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful" };
            StyleName styleName123 = new StyleName() { Val = "List Table 6 Colorful" };
            BasedOn basedOn118 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority122 = new UIPriority() { Val = 51 };
            Rsid rsid119 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties118 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines113 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties118.Append(spacingBetweenLines113);

            StyleRunProperties styleRunProperties47 = new StyleRunProperties();
            Color color100 = new Color() { Val = "000000", ThemeColor = ThemeColorValues.Text1 };

            styleRunProperties47.Append(color100);

            StyleTableProperties styleTableProperties93 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize90 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize90 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders82 = new TableBorders();
            TopBorder topBorder299 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder264 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders82.Append(topBorder299);
            tableBorders82.Append(bottomBorder264);

            styleTableProperties93.Append(tableStyleRowBandSize90);
            styleTableProperties93.Append(tableStyleColumnBandSize90);
            styleTableProperties93.Append(tableBorders82);

            TableStyleProperties tableStyleProperties647 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle358 = new RunPropertiesBaseStyle();
            Bold bold332 = new Bold();
            BoldComplexScript boldComplexScript330 = new BoldComplexScript();

            runPropertiesBaseStyle358.Append(bold332);
            runPropertiesBaseStyle358.Append(boldComplexScript330);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties526 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties526 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders385 = new TableCellBorders();
            BottomBorder bottomBorder265 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders385.Append(bottomBorder265);

            tableStyleConditionalFormattingTableCellProperties526.Append(tableCellBorders385);

            tableStyleProperties647.Append(runPropertiesBaseStyle358);
            tableStyleProperties647.Append(tableStyleConditionalFormattingTableProperties526);
            tableStyleProperties647.Append(tableStyleConditionalFormattingTableCellProperties526);

            TableStyleProperties tableStyleProperties648 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle359 = new RunPropertiesBaseStyle();
            Bold bold333 = new Bold();
            BoldComplexScript boldComplexScript331 = new BoldComplexScript();

            runPropertiesBaseStyle359.Append(bold333);
            runPropertiesBaseStyle359.Append(boldComplexScript331);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties527 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties527 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders386 = new TableCellBorders();
            TopBorder topBorder300 = new TopBorder() { Val = BorderValues.Double, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders386.Append(topBorder300);

            tableStyleConditionalFormattingTableCellProperties527.Append(tableCellBorders386);

            tableStyleProperties648.Append(runPropertiesBaseStyle359);
            tableStyleProperties648.Append(tableStyleConditionalFormattingTableProperties527);
            tableStyleProperties648.Append(tableStyleConditionalFormattingTableCellProperties527);

            TableStyleProperties tableStyleProperties649 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle360 = new RunPropertiesBaseStyle();
            Bold bold334 = new Bold();
            BoldComplexScript boldComplexScript332 = new BoldComplexScript();

            runPropertiesBaseStyle360.Append(bold334);
            runPropertiesBaseStyle360.Append(boldComplexScript332);

            tableStyleProperties649.Append(runPropertiesBaseStyle360);

            TableStyleProperties tableStyleProperties650 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle361 = new RunPropertiesBaseStyle();
            Bold bold335 = new Bold();
            BoldComplexScript boldComplexScript333 = new BoldComplexScript();

            runPropertiesBaseStyle361.Append(bold335);
            runPropertiesBaseStyle361.Append(boldComplexScript333);

            tableStyleProperties650.Append(runPropertiesBaseStyle361);

            TableStyleProperties tableStyleProperties651 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties528 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties528 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading294 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties528.Append(shading294);

            tableStyleProperties651.Append(tableStyleConditionalFormattingTableProperties528);
            tableStyleProperties651.Append(tableStyleConditionalFormattingTableCellProperties528);

            TableStyleProperties tableStyleProperties652 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties529 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties529 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading295 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties529.Append(shading295);

            tableStyleProperties652.Append(tableStyleConditionalFormattingTableProperties529);
            tableStyleProperties652.Append(tableStyleConditionalFormattingTableCellProperties529);

            style123.Append(styleName123);
            style123.Append(basedOn118);
            style123.Append(uIPriority122);
            style123.Append(rsid119);
            style123.Append(styleParagraphProperties118);
            style123.Append(styleRunProperties47);
            style123.Append(styleTableProperties93);
            style123.Append(tableStyleProperties647);
            style123.Append(tableStyleProperties648);
            style123.Append(tableStyleProperties649);
            style123.Append(tableStyleProperties650);
            style123.Append(tableStyleProperties651);
            style123.Append(tableStyleProperties652);

            Style style124 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent1" };
            StyleName styleName124 = new StyleName() { Val = "List Table 6 Colorful Accent 1" };
            BasedOn basedOn119 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority123 = new UIPriority() { Val = 51 };
            Rsid rsid120 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties119 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines114 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties119.Append(spacingBetweenLines114);

            StyleRunProperties styleRunProperties48 = new StyleRunProperties();
            Color color101 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties48.Append(color101);

            StyleTableProperties styleTableProperties94 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize91 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize91 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders83 = new TableBorders();
            TopBorder topBorder301 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder266 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders83.Append(topBorder301);
            tableBorders83.Append(bottomBorder266);

            styleTableProperties94.Append(tableStyleRowBandSize91);
            styleTableProperties94.Append(tableStyleColumnBandSize91);
            styleTableProperties94.Append(tableBorders83);

            TableStyleProperties tableStyleProperties653 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle362 = new RunPropertiesBaseStyle();
            Bold bold336 = new Bold();
            BoldComplexScript boldComplexScript334 = new BoldComplexScript();

            runPropertiesBaseStyle362.Append(bold336);
            runPropertiesBaseStyle362.Append(boldComplexScript334);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties530 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties530 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders387 = new TableCellBorders();
            BottomBorder bottomBorder267 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders387.Append(bottomBorder267);

            tableStyleConditionalFormattingTableCellProperties530.Append(tableCellBorders387);

            tableStyleProperties653.Append(runPropertiesBaseStyle362);
            tableStyleProperties653.Append(tableStyleConditionalFormattingTableProperties530);
            tableStyleProperties653.Append(tableStyleConditionalFormattingTableCellProperties530);

            TableStyleProperties tableStyleProperties654 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle363 = new RunPropertiesBaseStyle();
            Bold bold337 = new Bold();
            BoldComplexScript boldComplexScript335 = new BoldComplexScript();

            runPropertiesBaseStyle363.Append(bold337);
            runPropertiesBaseStyle363.Append(boldComplexScript335);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties531 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties531 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders388 = new TableCellBorders();
            TopBorder topBorder302 = new TopBorder() { Val = BorderValues.Double, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders388.Append(topBorder302);

            tableStyleConditionalFormattingTableCellProperties531.Append(tableCellBorders388);

            tableStyleProperties654.Append(runPropertiesBaseStyle363);
            tableStyleProperties654.Append(tableStyleConditionalFormattingTableProperties531);
            tableStyleProperties654.Append(tableStyleConditionalFormattingTableCellProperties531);

            TableStyleProperties tableStyleProperties655 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle364 = new RunPropertiesBaseStyle();
            Bold bold338 = new Bold();
            BoldComplexScript boldComplexScript336 = new BoldComplexScript();

            runPropertiesBaseStyle364.Append(bold338);
            runPropertiesBaseStyle364.Append(boldComplexScript336);

            tableStyleProperties655.Append(runPropertiesBaseStyle364);

            TableStyleProperties tableStyleProperties656 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle365 = new RunPropertiesBaseStyle();
            Bold bold339 = new Bold();
            BoldComplexScript boldComplexScript337 = new BoldComplexScript();

            runPropertiesBaseStyle365.Append(bold339);
            runPropertiesBaseStyle365.Append(boldComplexScript337);

            tableStyleProperties656.Append(runPropertiesBaseStyle365);

            TableStyleProperties tableStyleProperties657 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties532 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties532 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading296 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties532.Append(shading296);

            tableStyleProperties657.Append(tableStyleConditionalFormattingTableProperties532);
            tableStyleProperties657.Append(tableStyleConditionalFormattingTableCellProperties532);

            TableStyleProperties tableStyleProperties658 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties533 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties533 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading297 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties533.Append(shading297);

            tableStyleProperties658.Append(tableStyleConditionalFormattingTableProperties533);
            tableStyleProperties658.Append(tableStyleConditionalFormattingTableCellProperties533);

            style124.Append(styleName124);
            style124.Append(basedOn119);
            style124.Append(uIPriority123);
            style124.Append(rsid120);
            style124.Append(styleParagraphProperties119);
            style124.Append(styleRunProperties48);
            style124.Append(styleTableProperties94);
            style124.Append(tableStyleProperties653);
            style124.Append(tableStyleProperties654);
            style124.Append(tableStyleProperties655);
            style124.Append(tableStyleProperties656);
            style124.Append(tableStyleProperties657);
            style124.Append(tableStyleProperties658);

            Style style125 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent2" };
            StyleName styleName125 = new StyleName() { Val = "List Table 6 Colorful Accent 2" };
            BasedOn basedOn120 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority124 = new UIPriority() { Val = 51 };
            Rsid rsid121 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties120 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines115 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties120.Append(spacingBetweenLines115);

            StyleRunProperties styleRunProperties49 = new StyleRunProperties();
            Color color102 = new Color() { Val = "C45911", ThemeColor = ThemeColorValues.Accent2, ThemeShade = "BF" };

            styleRunProperties49.Append(color102);

            StyleTableProperties styleTableProperties95 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize92 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize92 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders84 = new TableBorders();
            TopBorder topBorder303 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder268 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders84.Append(topBorder303);
            tableBorders84.Append(bottomBorder268);

            styleTableProperties95.Append(tableStyleRowBandSize92);
            styleTableProperties95.Append(tableStyleColumnBandSize92);
            styleTableProperties95.Append(tableBorders84);

            TableStyleProperties tableStyleProperties659 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle366 = new RunPropertiesBaseStyle();
            Bold bold340 = new Bold();
            BoldComplexScript boldComplexScript338 = new BoldComplexScript();

            runPropertiesBaseStyle366.Append(bold340);
            runPropertiesBaseStyle366.Append(boldComplexScript338);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties534 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties534 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders389 = new TableCellBorders();
            BottomBorder bottomBorder269 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders389.Append(bottomBorder269);

            tableStyleConditionalFormattingTableCellProperties534.Append(tableCellBorders389);

            tableStyleProperties659.Append(runPropertiesBaseStyle366);
            tableStyleProperties659.Append(tableStyleConditionalFormattingTableProperties534);
            tableStyleProperties659.Append(tableStyleConditionalFormattingTableCellProperties534);

            TableStyleProperties tableStyleProperties660 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle367 = new RunPropertiesBaseStyle();
            Bold bold341 = new Bold();
            BoldComplexScript boldComplexScript339 = new BoldComplexScript();

            runPropertiesBaseStyle367.Append(bold341);
            runPropertiesBaseStyle367.Append(boldComplexScript339);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties535 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties535 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders390 = new TableCellBorders();
            TopBorder topBorder304 = new TopBorder() { Val = BorderValues.Double, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders390.Append(topBorder304);

            tableStyleConditionalFormattingTableCellProperties535.Append(tableCellBorders390);

            tableStyleProperties660.Append(runPropertiesBaseStyle367);
            tableStyleProperties660.Append(tableStyleConditionalFormattingTableProperties535);
            tableStyleProperties660.Append(tableStyleConditionalFormattingTableCellProperties535);

            TableStyleProperties tableStyleProperties661 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle368 = new RunPropertiesBaseStyle();
            Bold bold342 = new Bold();
            BoldComplexScript boldComplexScript340 = new BoldComplexScript();

            runPropertiesBaseStyle368.Append(bold342);
            runPropertiesBaseStyle368.Append(boldComplexScript340);

            tableStyleProperties661.Append(runPropertiesBaseStyle368);

            TableStyleProperties tableStyleProperties662 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle369 = new RunPropertiesBaseStyle();
            Bold bold343 = new Bold();
            BoldComplexScript boldComplexScript341 = new BoldComplexScript();

            runPropertiesBaseStyle369.Append(bold343);
            runPropertiesBaseStyle369.Append(boldComplexScript341);

            tableStyleProperties662.Append(runPropertiesBaseStyle369);

            TableStyleProperties tableStyleProperties663 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties536 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties536 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading298 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties536.Append(shading298);

            tableStyleProperties663.Append(tableStyleConditionalFormattingTableProperties536);
            tableStyleProperties663.Append(tableStyleConditionalFormattingTableCellProperties536);

            TableStyleProperties tableStyleProperties664 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties537 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties537 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading299 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties537.Append(shading299);

            tableStyleProperties664.Append(tableStyleConditionalFormattingTableProperties537);
            tableStyleProperties664.Append(tableStyleConditionalFormattingTableCellProperties537);

            style125.Append(styleName125);
            style125.Append(basedOn120);
            style125.Append(uIPriority124);
            style125.Append(rsid121);
            style125.Append(styleParagraphProperties120);
            style125.Append(styleRunProperties49);
            style125.Append(styleTableProperties95);
            style125.Append(tableStyleProperties659);
            style125.Append(tableStyleProperties660);
            style125.Append(tableStyleProperties661);
            style125.Append(tableStyleProperties662);
            style125.Append(tableStyleProperties663);
            style125.Append(tableStyleProperties664);

            Style style126 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent3" };
            StyleName styleName126 = new StyleName() { Val = "List Table 6 Colorful Accent 3" };
            BasedOn basedOn121 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority125 = new UIPriority() { Val = 51 };
            Rsid rsid122 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties121 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines116 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties121.Append(spacingBetweenLines116);

            StyleRunProperties styleRunProperties50 = new StyleRunProperties();
            Color color103 = new Color() { Val = "7B7B7B", ThemeColor = ThemeColorValues.Accent3, ThemeShade = "BF" };

            styleRunProperties50.Append(color103);

            StyleTableProperties styleTableProperties96 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize93 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize93 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders85 = new TableBorders();
            TopBorder topBorder305 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder270 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders85.Append(topBorder305);
            tableBorders85.Append(bottomBorder270);

            styleTableProperties96.Append(tableStyleRowBandSize93);
            styleTableProperties96.Append(tableStyleColumnBandSize93);
            styleTableProperties96.Append(tableBorders85);

            TableStyleProperties tableStyleProperties665 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle370 = new RunPropertiesBaseStyle();
            Bold bold344 = new Bold();
            BoldComplexScript boldComplexScript342 = new BoldComplexScript();

            runPropertiesBaseStyle370.Append(bold344);
            runPropertiesBaseStyle370.Append(boldComplexScript342);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties538 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties538 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders391 = new TableCellBorders();
            BottomBorder bottomBorder271 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders391.Append(bottomBorder271);

            tableStyleConditionalFormattingTableCellProperties538.Append(tableCellBorders391);

            tableStyleProperties665.Append(runPropertiesBaseStyle370);
            tableStyleProperties665.Append(tableStyleConditionalFormattingTableProperties538);
            tableStyleProperties665.Append(tableStyleConditionalFormattingTableCellProperties538);

            TableStyleProperties tableStyleProperties666 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle371 = new RunPropertiesBaseStyle();
            Bold bold345 = new Bold();
            BoldComplexScript boldComplexScript343 = new BoldComplexScript();

            runPropertiesBaseStyle371.Append(bold345);
            runPropertiesBaseStyle371.Append(boldComplexScript343);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties539 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties539 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders392 = new TableCellBorders();
            TopBorder topBorder306 = new TopBorder() { Val = BorderValues.Double, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders392.Append(topBorder306);

            tableStyleConditionalFormattingTableCellProperties539.Append(tableCellBorders392);

            tableStyleProperties666.Append(runPropertiesBaseStyle371);
            tableStyleProperties666.Append(tableStyleConditionalFormattingTableProperties539);
            tableStyleProperties666.Append(tableStyleConditionalFormattingTableCellProperties539);

            TableStyleProperties tableStyleProperties667 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle372 = new RunPropertiesBaseStyle();
            Bold bold346 = new Bold();
            BoldComplexScript boldComplexScript344 = new BoldComplexScript();

            runPropertiesBaseStyle372.Append(bold346);
            runPropertiesBaseStyle372.Append(boldComplexScript344);

            tableStyleProperties667.Append(runPropertiesBaseStyle372);

            TableStyleProperties tableStyleProperties668 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle373 = new RunPropertiesBaseStyle();
            Bold bold347 = new Bold();
            BoldComplexScript boldComplexScript345 = new BoldComplexScript();

            runPropertiesBaseStyle373.Append(bold347);
            runPropertiesBaseStyle373.Append(boldComplexScript345);

            tableStyleProperties668.Append(runPropertiesBaseStyle373);

            TableStyleProperties tableStyleProperties669 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties540 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties540 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading300 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties540.Append(shading300);

            tableStyleProperties669.Append(tableStyleConditionalFormattingTableProperties540);
            tableStyleProperties669.Append(tableStyleConditionalFormattingTableCellProperties540);

            TableStyleProperties tableStyleProperties670 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties541 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties541 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading301 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties541.Append(shading301);

            tableStyleProperties670.Append(tableStyleConditionalFormattingTableProperties541);
            tableStyleProperties670.Append(tableStyleConditionalFormattingTableCellProperties541);

            style126.Append(styleName126);
            style126.Append(basedOn121);
            style126.Append(uIPriority125);
            style126.Append(rsid122);
            style126.Append(styleParagraphProperties121);
            style126.Append(styleRunProperties50);
            style126.Append(styleTableProperties96);
            style126.Append(tableStyleProperties665);
            style126.Append(tableStyleProperties666);
            style126.Append(tableStyleProperties667);
            style126.Append(tableStyleProperties668);
            style126.Append(tableStyleProperties669);
            style126.Append(tableStyleProperties670);

            Style style127 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent4" };
            StyleName styleName127 = new StyleName() { Val = "List Table 6 Colorful Accent 4" };
            BasedOn basedOn122 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority126 = new UIPriority() { Val = 51 };
            Rsid rsid123 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties122 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines117 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties122.Append(spacingBetweenLines117);

            StyleRunProperties styleRunProperties51 = new StyleRunProperties();
            Color color104 = new Color() { Val = "BF8F00", ThemeColor = ThemeColorValues.Accent4, ThemeShade = "BF" };

            styleRunProperties51.Append(color104);

            StyleTableProperties styleTableProperties97 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize94 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize94 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders86 = new TableBorders();
            TopBorder topBorder307 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder272 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders86.Append(topBorder307);
            tableBorders86.Append(bottomBorder272);

            styleTableProperties97.Append(tableStyleRowBandSize94);
            styleTableProperties97.Append(tableStyleColumnBandSize94);
            styleTableProperties97.Append(tableBorders86);

            TableStyleProperties tableStyleProperties671 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle374 = new RunPropertiesBaseStyle();
            Bold bold348 = new Bold();
            BoldComplexScript boldComplexScript346 = new BoldComplexScript();

            runPropertiesBaseStyle374.Append(bold348);
            runPropertiesBaseStyle374.Append(boldComplexScript346);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties542 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties542 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders393 = new TableCellBorders();
            BottomBorder bottomBorder273 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders393.Append(bottomBorder273);

            tableStyleConditionalFormattingTableCellProperties542.Append(tableCellBorders393);

            tableStyleProperties671.Append(runPropertiesBaseStyle374);
            tableStyleProperties671.Append(tableStyleConditionalFormattingTableProperties542);
            tableStyleProperties671.Append(tableStyleConditionalFormattingTableCellProperties542);

            TableStyleProperties tableStyleProperties672 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle375 = new RunPropertiesBaseStyle();
            Bold bold349 = new Bold();
            BoldComplexScript boldComplexScript347 = new BoldComplexScript();

            runPropertiesBaseStyle375.Append(bold349);
            runPropertiesBaseStyle375.Append(boldComplexScript347);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties543 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties543 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders394 = new TableCellBorders();
            TopBorder topBorder308 = new TopBorder() { Val = BorderValues.Double, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders394.Append(topBorder308);

            tableStyleConditionalFormattingTableCellProperties543.Append(tableCellBorders394);

            tableStyleProperties672.Append(runPropertiesBaseStyle375);
            tableStyleProperties672.Append(tableStyleConditionalFormattingTableProperties543);
            tableStyleProperties672.Append(tableStyleConditionalFormattingTableCellProperties543);

            TableStyleProperties tableStyleProperties673 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle376 = new RunPropertiesBaseStyle();
            Bold bold350 = new Bold();
            BoldComplexScript boldComplexScript348 = new BoldComplexScript();

            runPropertiesBaseStyle376.Append(bold350);
            runPropertiesBaseStyle376.Append(boldComplexScript348);

            tableStyleProperties673.Append(runPropertiesBaseStyle376);

            TableStyleProperties tableStyleProperties674 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle377 = new RunPropertiesBaseStyle();
            Bold bold351 = new Bold();
            BoldComplexScript boldComplexScript349 = new BoldComplexScript();

            runPropertiesBaseStyle377.Append(bold351);
            runPropertiesBaseStyle377.Append(boldComplexScript349);

            tableStyleProperties674.Append(runPropertiesBaseStyle377);

            TableStyleProperties tableStyleProperties675 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties544 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties544 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading302 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties544.Append(shading302);

            tableStyleProperties675.Append(tableStyleConditionalFormattingTableProperties544);
            tableStyleProperties675.Append(tableStyleConditionalFormattingTableCellProperties544);

            TableStyleProperties tableStyleProperties676 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties545 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties545 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading303 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties545.Append(shading303);

            tableStyleProperties676.Append(tableStyleConditionalFormattingTableProperties545);
            tableStyleProperties676.Append(tableStyleConditionalFormattingTableCellProperties545);

            style127.Append(styleName127);
            style127.Append(basedOn122);
            style127.Append(uIPriority126);
            style127.Append(rsid123);
            style127.Append(styleParagraphProperties122);
            style127.Append(styleRunProperties51);
            style127.Append(styleTableProperties97);
            style127.Append(tableStyleProperties671);
            style127.Append(tableStyleProperties672);
            style127.Append(tableStyleProperties673);
            style127.Append(tableStyleProperties674);
            style127.Append(tableStyleProperties675);
            style127.Append(tableStyleProperties676);

            Style style128 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent5" };
            StyleName styleName128 = new StyleName() { Val = "List Table 6 Colorful Accent 5" };
            BasedOn basedOn123 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority127 = new UIPriority() { Val = 51 };
            Rsid rsid124 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties123 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines118 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties123.Append(spacingBetweenLines118);

            StyleRunProperties styleRunProperties52 = new StyleRunProperties();
            Color color105 = new Color() { Val = "2F5496", ThemeColor = ThemeColorValues.Accent5, ThemeShade = "BF" };

            styleRunProperties52.Append(color105);

            StyleTableProperties styleTableProperties98 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize95 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize95 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders87 = new TableBorders();
            TopBorder topBorder309 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder274 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders87.Append(topBorder309);
            tableBorders87.Append(bottomBorder274);

            styleTableProperties98.Append(tableStyleRowBandSize95);
            styleTableProperties98.Append(tableStyleColumnBandSize95);
            styleTableProperties98.Append(tableBorders87);

            TableStyleProperties tableStyleProperties677 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle378 = new RunPropertiesBaseStyle();
            Bold bold352 = new Bold();
            BoldComplexScript boldComplexScript350 = new BoldComplexScript();

            runPropertiesBaseStyle378.Append(bold352);
            runPropertiesBaseStyle378.Append(boldComplexScript350);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties546 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties546 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders395 = new TableCellBorders();
            BottomBorder bottomBorder275 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders395.Append(bottomBorder275);

            tableStyleConditionalFormattingTableCellProperties546.Append(tableCellBorders395);

            tableStyleProperties677.Append(runPropertiesBaseStyle378);
            tableStyleProperties677.Append(tableStyleConditionalFormattingTableProperties546);
            tableStyleProperties677.Append(tableStyleConditionalFormattingTableCellProperties546);

            TableStyleProperties tableStyleProperties678 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle379 = new RunPropertiesBaseStyle();
            Bold bold353 = new Bold();
            BoldComplexScript boldComplexScript351 = new BoldComplexScript();

            runPropertiesBaseStyle379.Append(bold353);
            runPropertiesBaseStyle379.Append(boldComplexScript351);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties547 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties547 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders396 = new TableCellBorders();
            TopBorder topBorder310 = new TopBorder() { Val = BorderValues.Double, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders396.Append(topBorder310);

            tableStyleConditionalFormattingTableCellProperties547.Append(tableCellBorders396);

            tableStyleProperties678.Append(runPropertiesBaseStyle379);
            tableStyleProperties678.Append(tableStyleConditionalFormattingTableProperties547);
            tableStyleProperties678.Append(tableStyleConditionalFormattingTableCellProperties547);

            TableStyleProperties tableStyleProperties679 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle380 = new RunPropertiesBaseStyle();
            Bold bold354 = new Bold();
            BoldComplexScript boldComplexScript352 = new BoldComplexScript();

            runPropertiesBaseStyle380.Append(bold354);
            runPropertiesBaseStyle380.Append(boldComplexScript352);

            tableStyleProperties679.Append(runPropertiesBaseStyle380);

            TableStyleProperties tableStyleProperties680 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle381 = new RunPropertiesBaseStyle();
            Bold bold355 = new Bold();
            BoldComplexScript boldComplexScript353 = new BoldComplexScript();

            runPropertiesBaseStyle381.Append(bold355);
            runPropertiesBaseStyle381.Append(boldComplexScript353);

            tableStyleProperties680.Append(runPropertiesBaseStyle381);

            TableStyleProperties tableStyleProperties681 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties548 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties548 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading304 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties548.Append(shading304);

            tableStyleProperties681.Append(tableStyleConditionalFormattingTableProperties548);
            tableStyleProperties681.Append(tableStyleConditionalFormattingTableCellProperties548);

            TableStyleProperties tableStyleProperties682 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties549 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties549 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading305 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties549.Append(shading305);

            tableStyleProperties682.Append(tableStyleConditionalFormattingTableProperties549);
            tableStyleProperties682.Append(tableStyleConditionalFormattingTableCellProperties549);

            style128.Append(styleName128);
            style128.Append(basedOn123);
            style128.Append(uIPriority127);
            style128.Append(rsid124);
            style128.Append(styleParagraphProperties123);
            style128.Append(styleRunProperties52);
            style128.Append(styleTableProperties98);
            style128.Append(tableStyleProperties677);
            style128.Append(tableStyleProperties678);
            style128.Append(tableStyleProperties679);
            style128.Append(tableStyleProperties680);
            style128.Append(tableStyleProperties681);
            style128.Append(tableStyleProperties682);

            Style style129 = new Style() { Type = StyleValues.Table, StyleId = "ListTable6Colorful-Accent6" };
            StyleName styleName129 = new StyleName() { Val = "List Table 6 Colorful Accent 6" };
            BasedOn basedOn124 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority128 = new UIPriority() { Val = 51 };
            Rsid rsid125 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties124 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines119 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties124.Append(spacingBetweenLines119);

            StyleRunProperties styleRunProperties53 = new StyleRunProperties();
            Color color106 = new Color() { Val = "538135", ThemeColor = ThemeColorValues.Accent6, ThemeShade = "BF" };

            styleRunProperties53.Append(color106);

            StyleTableProperties styleTableProperties99 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize96 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize96 = new TableStyleColumnBandSize() { Val = 1 };

            TableBorders tableBorders88 = new TableBorders();
            TopBorder topBorder311 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };
            BottomBorder bottomBorder276 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableBorders88.Append(topBorder311);
            tableBorders88.Append(bottomBorder276);

            styleTableProperties99.Append(tableStyleRowBandSize96);
            styleTableProperties99.Append(tableStyleColumnBandSize96);
            styleTableProperties99.Append(tableBorders88);

            TableStyleProperties tableStyleProperties683 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle382 = new RunPropertiesBaseStyle();
            Bold bold356 = new Bold();
            BoldComplexScript boldComplexScript354 = new BoldComplexScript();

            runPropertiesBaseStyle382.Append(bold356);
            runPropertiesBaseStyle382.Append(boldComplexScript354);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties550 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties550 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders397 = new TableCellBorders();
            BottomBorder bottomBorder277 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders397.Append(bottomBorder277);

            tableStyleConditionalFormattingTableCellProperties550.Append(tableCellBorders397);

            tableStyleProperties683.Append(runPropertiesBaseStyle382);
            tableStyleProperties683.Append(tableStyleConditionalFormattingTableProperties550);
            tableStyleProperties683.Append(tableStyleConditionalFormattingTableCellProperties550);

            TableStyleProperties tableStyleProperties684 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle383 = new RunPropertiesBaseStyle();
            Bold bold357 = new Bold();
            BoldComplexScript boldComplexScript355 = new BoldComplexScript();

            runPropertiesBaseStyle383.Append(bold357);
            runPropertiesBaseStyle383.Append(boldComplexScript355);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties551 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties551 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders398 = new TableCellBorders();
            TopBorder topBorder312 = new TopBorder() { Val = BorderValues.Double, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders398.Append(topBorder312);

            tableStyleConditionalFormattingTableCellProperties551.Append(tableCellBorders398);

            tableStyleProperties684.Append(runPropertiesBaseStyle383);
            tableStyleProperties684.Append(tableStyleConditionalFormattingTableProperties551);
            tableStyleProperties684.Append(tableStyleConditionalFormattingTableCellProperties551);

            TableStyleProperties tableStyleProperties685 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle384 = new RunPropertiesBaseStyle();
            Bold bold358 = new Bold();
            BoldComplexScript boldComplexScript356 = new BoldComplexScript();

            runPropertiesBaseStyle384.Append(bold358);
            runPropertiesBaseStyle384.Append(boldComplexScript356);

            tableStyleProperties685.Append(runPropertiesBaseStyle384);

            TableStyleProperties tableStyleProperties686 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle385 = new RunPropertiesBaseStyle();
            Bold bold359 = new Bold();
            BoldComplexScript boldComplexScript357 = new BoldComplexScript();

            runPropertiesBaseStyle385.Append(bold359);
            runPropertiesBaseStyle385.Append(boldComplexScript357);

            tableStyleProperties686.Append(runPropertiesBaseStyle385);

            TableStyleProperties tableStyleProperties687 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties552 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties552 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading306 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties552.Append(shading306);

            tableStyleProperties687.Append(tableStyleConditionalFormattingTableProperties552);
            tableStyleProperties687.Append(tableStyleConditionalFormattingTableCellProperties552);

            TableStyleProperties tableStyleProperties688 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties553 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties553 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading307 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties553.Append(shading307);

            tableStyleProperties688.Append(tableStyleConditionalFormattingTableProperties553);
            tableStyleProperties688.Append(tableStyleConditionalFormattingTableCellProperties553);

            style129.Append(styleName129);
            style129.Append(basedOn124);
            style129.Append(uIPriority128);
            style129.Append(rsid125);
            style129.Append(styleParagraphProperties124);
            style129.Append(styleRunProperties53);
            style129.Append(styleTableProperties99);
            style129.Append(tableStyleProperties683);
            style129.Append(tableStyleProperties684);
            style129.Append(tableStyleProperties685);
            style129.Append(tableStyleProperties686);
            style129.Append(tableStyleProperties687);
            style129.Append(tableStyleProperties688);

            Style style130 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful" };
            StyleName styleName130 = new StyleName() { Val = "List Table 7 Colorful" };
            BasedOn basedOn125 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority129 = new UIPriority() { Val = 52 };
            Rsid rsid126 = new Rsid() { Val = "005E0F19" };

            StyleParagraphProperties styleParagraphProperties125 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines120 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties125.Append(spacingBetweenLines120);

            StyleRunProperties styleRunProperties54 = new StyleRunProperties();
            Color color107 = new Color() { Val = "000000", ThemeColor = ThemeColorValues.Text1 };

            styleRunProperties54.Append(color107);

            StyleTableProperties styleTableProperties100 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize97 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize97 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties100.Append(tableStyleRowBandSize97);
            styleTableProperties100.Append(tableStyleColumnBandSize97);

            TableStyleProperties tableStyleProperties689 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle386 = new RunPropertiesBaseStyle();
            RunFonts runFonts81 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic45 = new Italic();
            ItalicComplexScript italicComplexScript43 = new ItalicComplexScript();
            FontSize fontSize68 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle386.Append(runFonts81);
            runPropertiesBaseStyle386.Append(italic45);
            runPropertiesBaseStyle386.Append(italicComplexScript43);
            runPropertiesBaseStyle386.Append(fontSize68);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties554 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties554 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders399 = new TableCellBorders();
            BottomBorder bottomBorder278 = new BottomBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders399.Append(bottomBorder278);
            Shading shading308 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties554.Append(tableCellBorders399);
            tableStyleConditionalFormattingTableCellProperties554.Append(shading308);

            tableStyleProperties689.Append(runPropertiesBaseStyle386);
            tableStyleProperties689.Append(tableStyleConditionalFormattingTableProperties554);
            tableStyleProperties689.Append(tableStyleConditionalFormattingTableCellProperties554);

            TableStyleProperties tableStyleProperties690 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle387 = new RunPropertiesBaseStyle();
            RunFonts runFonts82 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic46 = new Italic();
            ItalicComplexScript italicComplexScript44 = new ItalicComplexScript();
            FontSize fontSize69 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle387.Append(runFonts82);
            runPropertiesBaseStyle387.Append(italic46);
            runPropertiesBaseStyle387.Append(italicComplexScript44);
            runPropertiesBaseStyle387.Append(fontSize69);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties555 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties555 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders400 = new TableCellBorders();
            TopBorder topBorder313 = new TopBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders400.Append(topBorder313);
            Shading shading309 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties555.Append(tableCellBorders400);
            tableStyleConditionalFormattingTableCellProperties555.Append(shading309);

            tableStyleProperties690.Append(runPropertiesBaseStyle387);
            tableStyleProperties690.Append(tableStyleConditionalFormattingTableProperties555);
            tableStyleProperties690.Append(tableStyleConditionalFormattingTableCellProperties555);

            TableStyleProperties tableStyleProperties691 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties126 = new StyleParagraphProperties();
            Justification justification21 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties126.Append(justification21);

            RunPropertiesBaseStyle runPropertiesBaseStyle388 = new RunPropertiesBaseStyle();
            RunFonts runFonts83 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic47 = new Italic();
            ItalicComplexScript italicComplexScript45 = new ItalicComplexScript();
            FontSize fontSize70 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle388.Append(runFonts83);
            runPropertiesBaseStyle388.Append(italic47);
            runPropertiesBaseStyle388.Append(italicComplexScript45);
            runPropertiesBaseStyle388.Append(fontSize70);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties556 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties556 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders401 = new TableCellBorders();
            RightBorder rightBorder215 = new RightBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders401.Append(rightBorder215);
            Shading shading310 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties556.Append(tableCellBorders401);
            tableStyleConditionalFormattingTableCellProperties556.Append(shading310);

            tableStyleProperties691.Append(styleParagraphProperties126);
            tableStyleProperties691.Append(runPropertiesBaseStyle388);
            tableStyleProperties691.Append(tableStyleConditionalFormattingTableProperties556);
            tableStyleProperties691.Append(tableStyleConditionalFormattingTableCellProperties556);

            TableStyleProperties tableStyleProperties692 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle389 = new RunPropertiesBaseStyle();
            RunFonts runFonts84 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic48 = new Italic();
            ItalicComplexScript italicComplexScript46 = new ItalicComplexScript();
            FontSize fontSize71 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle389.Append(runFonts84);
            runPropertiesBaseStyle389.Append(italic48);
            runPropertiesBaseStyle389.Append(italicComplexScript46);
            runPropertiesBaseStyle389.Append(fontSize71);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties557 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties557 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders402 = new TableCellBorders();
            LeftBorder leftBorder215 = new LeftBorder() { Val = BorderValues.Single, Color = "000000", ThemeColor = ThemeColorValues.Text1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders402.Append(leftBorder215);
            Shading shading311 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties557.Append(tableCellBorders402);
            tableStyleConditionalFormattingTableCellProperties557.Append(shading311);

            tableStyleProperties692.Append(runPropertiesBaseStyle389);
            tableStyleProperties692.Append(tableStyleConditionalFormattingTableProperties557);
            tableStyleProperties692.Append(tableStyleConditionalFormattingTableCellProperties557);

            TableStyleProperties tableStyleProperties693 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties558 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties558 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading312 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties558.Append(shading312);

            tableStyleProperties693.Append(tableStyleConditionalFormattingTableProperties558);
            tableStyleProperties693.Append(tableStyleConditionalFormattingTableCellProperties558);

            TableStyleProperties tableStyleProperties694 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties559 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties559 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading313 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "CCCCCC", ThemeFill = ThemeColorValues.Text1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties559.Append(shading313);

            tableStyleProperties694.Append(tableStyleConditionalFormattingTableProperties559);
            tableStyleProperties694.Append(tableStyleConditionalFormattingTableCellProperties559);

            TableStyleProperties tableStyleProperties695 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties560 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties560 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders403 = new TableCellBorders();
            LeftBorder leftBorder216 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders403.Append(leftBorder216);

            tableStyleConditionalFormattingTableCellProperties560.Append(tableCellBorders403);

            tableStyleProperties695.Append(tableStyleConditionalFormattingTableProperties560);
            tableStyleProperties695.Append(tableStyleConditionalFormattingTableCellProperties560);

            TableStyleProperties tableStyleProperties696 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties561 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties561 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders404 = new TableCellBorders();
            RightBorder rightBorder216 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders404.Append(rightBorder216);

            tableStyleConditionalFormattingTableCellProperties561.Append(tableCellBorders404);

            tableStyleProperties696.Append(tableStyleConditionalFormattingTableProperties561);
            tableStyleProperties696.Append(tableStyleConditionalFormattingTableCellProperties561);

            TableStyleProperties tableStyleProperties697 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties562 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties562 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders405 = new TableCellBorders();
            LeftBorder leftBorder217 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders405.Append(leftBorder217);

            tableStyleConditionalFormattingTableCellProperties562.Append(tableCellBorders405);

            tableStyleProperties697.Append(tableStyleConditionalFormattingTableProperties562);
            tableStyleProperties697.Append(tableStyleConditionalFormattingTableCellProperties562);

            TableStyleProperties tableStyleProperties698 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties563 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties563 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders406 = new TableCellBorders();
            RightBorder rightBorder217 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders406.Append(rightBorder217);

            tableStyleConditionalFormattingTableCellProperties563.Append(tableCellBorders406);

            tableStyleProperties698.Append(tableStyleConditionalFormattingTableProperties563);
            tableStyleProperties698.Append(tableStyleConditionalFormattingTableCellProperties563);

            style130.Append(styleName130);
            style130.Append(basedOn125);
            style130.Append(uIPriority129);
            style130.Append(rsid126);
            style130.Append(styleParagraphProperties125);
            style130.Append(styleRunProperties54);
            style130.Append(styleTableProperties100);
            style130.Append(tableStyleProperties689);
            style130.Append(tableStyleProperties690);
            style130.Append(tableStyleProperties691);
            style130.Append(tableStyleProperties692);
            style130.Append(tableStyleProperties693);
            style130.Append(tableStyleProperties694);
            style130.Append(tableStyleProperties695);
            style130.Append(tableStyleProperties696);
            style130.Append(tableStyleProperties697);
            style130.Append(tableStyleProperties698);

            Style style131 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent1" };
            StyleName styleName131 = new StyleName() { Val = "List Table 7 Colorful Accent 1" };
            BasedOn basedOn126 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority130 = new UIPriority() { Val = 52 };
            Rsid rsid127 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties127 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines121 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties127.Append(spacingBetweenLines121);

            StyleRunProperties styleRunProperties55 = new StyleRunProperties();
            Color color108 = new Color() { Val = "2E74B5", ThemeColor = ThemeColorValues.Accent1, ThemeShade = "BF" };

            styleRunProperties55.Append(color108);

            StyleTableProperties styleTableProperties101 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize98 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize98 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties101.Append(tableStyleRowBandSize98);
            styleTableProperties101.Append(tableStyleColumnBandSize98);

            TableStyleProperties tableStyleProperties699 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle390 = new RunPropertiesBaseStyle();
            RunFonts runFonts85 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic49 = new Italic();
            ItalicComplexScript italicComplexScript47 = new ItalicComplexScript();
            FontSize fontSize72 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle390.Append(runFonts85);
            runPropertiesBaseStyle390.Append(italic49);
            runPropertiesBaseStyle390.Append(italicComplexScript47);
            runPropertiesBaseStyle390.Append(fontSize72);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties564 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties564 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders407 = new TableCellBorders();
            BottomBorder bottomBorder279 = new BottomBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders407.Append(bottomBorder279);
            Shading shading314 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties564.Append(tableCellBorders407);
            tableStyleConditionalFormattingTableCellProperties564.Append(shading314);

            tableStyleProperties699.Append(runPropertiesBaseStyle390);
            tableStyleProperties699.Append(tableStyleConditionalFormattingTableProperties564);
            tableStyleProperties699.Append(tableStyleConditionalFormattingTableCellProperties564);

            TableStyleProperties tableStyleProperties700 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle391 = new RunPropertiesBaseStyle();
            RunFonts runFonts86 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic50 = new Italic();
            ItalicComplexScript italicComplexScript48 = new ItalicComplexScript();
            FontSize fontSize73 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle391.Append(runFonts86);
            runPropertiesBaseStyle391.Append(italic50);
            runPropertiesBaseStyle391.Append(italicComplexScript48);
            runPropertiesBaseStyle391.Append(fontSize73);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties565 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties565 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders408 = new TableCellBorders();
            TopBorder topBorder314 = new TopBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders408.Append(topBorder314);
            Shading shading315 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties565.Append(tableCellBorders408);
            tableStyleConditionalFormattingTableCellProperties565.Append(shading315);

            tableStyleProperties700.Append(runPropertiesBaseStyle391);
            tableStyleProperties700.Append(tableStyleConditionalFormattingTableProperties565);
            tableStyleProperties700.Append(tableStyleConditionalFormattingTableCellProperties565);

            TableStyleProperties tableStyleProperties701 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties128 = new StyleParagraphProperties();
            Justification justification22 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties128.Append(justification22);

            RunPropertiesBaseStyle runPropertiesBaseStyle392 = new RunPropertiesBaseStyle();
            RunFonts runFonts87 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic51 = new Italic();
            ItalicComplexScript italicComplexScript49 = new ItalicComplexScript();
            FontSize fontSize74 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle392.Append(runFonts87);
            runPropertiesBaseStyle392.Append(italic51);
            runPropertiesBaseStyle392.Append(italicComplexScript49);
            runPropertiesBaseStyle392.Append(fontSize74);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties566 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties566 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders409 = new TableCellBorders();
            RightBorder rightBorder218 = new RightBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders409.Append(rightBorder218);
            Shading shading316 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties566.Append(tableCellBorders409);
            tableStyleConditionalFormattingTableCellProperties566.Append(shading316);

            tableStyleProperties701.Append(styleParagraphProperties128);
            tableStyleProperties701.Append(runPropertiesBaseStyle392);
            tableStyleProperties701.Append(tableStyleConditionalFormattingTableProperties566);
            tableStyleProperties701.Append(tableStyleConditionalFormattingTableCellProperties566);

            TableStyleProperties tableStyleProperties702 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle393 = new RunPropertiesBaseStyle();
            RunFonts runFonts88 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic52 = new Italic();
            ItalicComplexScript italicComplexScript50 = new ItalicComplexScript();
            FontSize fontSize75 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle393.Append(runFonts88);
            runPropertiesBaseStyle393.Append(italic52);
            runPropertiesBaseStyle393.Append(italicComplexScript50);
            runPropertiesBaseStyle393.Append(fontSize75);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties567 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties567 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders410 = new TableCellBorders();
            LeftBorder leftBorder218 = new LeftBorder() { Val = BorderValues.Single, Color = "5B9BD5", ThemeColor = ThemeColorValues.Accent1, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders410.Append(leftBorder218);
            Shading shading317 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties567.Append(tableCellBorders410);
            tableStyleConditionalFormattingTableCellProperties567.Append(shading317);

            tableStyleProperties702.Append(runPropertiesBaseStyle393);
            tableStyleProperties702.Append(tableStyleConditionalFormattingTableProperties567);
            tableStyleProperties702.Append(tableStyleConditionalFormattingTableCellProperties567);

            TableStyleProperties tableStyleProperties703 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties568 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties568 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading318 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties568.Append(shading318);

            tableStyleProperties703.Append(tableStyleConditionalFormattingTableProperties568);
            tableStyleProperties703.Append(tableStyleConditionalFormattingTableCellProperties568);

            TableStyleProperties tableStyleProperties704 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties569 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties569 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading319 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "DEEAF6", ThemeFill = ThemeColorValues.Accent1, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties569.Append(shading319);

            tableStyleProperties704.Append(tableStyleConditionalFormattingTableProperties569);
            tableStyleProperties704.Append(tableStyleConditionalFormattingTableCellProperties569);

            TableStyleProperties tableStyleProperties705 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties570 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties570 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders411 = new TableCellBorders();
            LeftBorder leftBorder219 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders411.Append(leftBorder219);

            tableStyleConditionalFormattingTableCellProperties570.Append(tableCellBorders411);

            tableStyleProperties705.Append(tableStyleConditionalFormattingTableProperties570);
            tableStyleProperties705.Append(tableStyleConditionalFormattingTableCellProperties570);

            TableStyleProperties tableStyleProperties706 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties571 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties571 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders412 = new TableCellBorders();
            RightBorder rightBorder219 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders412.Append(rightBorder219);

            tableStyleConditionalFormattingTableCellProperties571.Append(tableCellBorders412);

            tableStyleProperties706.Append(tableStyleConditionalFormattingTableProperties571);
            tableStyleProperties706.Append(tableStyleConditionalFormattingTableCellProperties571);

            TableStyleProperties tableStyleProperties707 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties572 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties572 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders413 = new TableCellBorders();
            LeftBorder leftBorder220 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders413.Append(leftBorder220);

            tableStyleConditionalFormattingTableCellProperties572.Append(tableCellBorders413);

            tableStyleProperties707.Append(tableStyleConditionalFormattingTableProperties572);
            tableStyleProperties707.Append(tableStyleConditionalFormattingTableCellProperties572);

            TableStyleProperties tableStyleProperties708 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties573 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties573 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders414 = new TableCellBorders();
            RightBorder rightBorder220 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders414.Append(rightBorder220);

            tableStyleConditionalFormattingTableCellProperties573.Append(tableCellBorders414);

            tableStyleProperties708.Append(tableStyleConditionalFormattingTableProperties573);
            tableStyleProperties708.Append(tableStyleConditionalFormattingTableCellProperties573);

            style131.Append(styleName131);
            style131.Append(basedOn126);
            style131.Append(uIPriority130);
            style131.Append(rsid127);
            style131.Append(styleParagraphProperties127);
            style131.Append(styleRunProperties55);
            style131.Append(styleTableProperties101);
            style131.Append(tableStyleProperties699);
            style131.Append(tableStyleProperties700);
            style131.Append(tableStyleProperties701);
            style131.Append(tableStyleProperties702);
            style131.Append(tableStyleProperties703);
            style131.Append(tableStyleProperties704);
            style131.Append(tableStyleProperties705);
            style131.Append(tableStyleProperties706);
            style131.Append(tableStyleProperties707);
            style131.Append(tableStyleProperties708);

            Style style132 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent2" };
            StyleName styleName132 = new StyleName() { Val = "List Table 7 Colorful Accent 2" };
            BasedOn basedOn127 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority131 = new UIPriority() { Val = 52 };
            Rsid rsid128 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties129 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines122 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties129.Append(spacingBetweenLines122);

            StyleRunProperties styleRunProperties56 = new StyleRunProperties();
            Color color109 = new Color() { Val = "C45911", ThemeColor = ThemeColorValues.Accent2, ThemeShade = "BF" };

            styleRunProperties56.Append(color109);

            StyleTableProperties styleTableProperties102 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize99 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize99 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties102.Append(tableStyleRowBandSize99);
            styleTableProperties102.Append(tableStyleColumnBandSize99);

            TableStyleProperties tableStyleProperties709 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle394 = new RunPropertiesBaseStyle();
            RunFonts runFonts89 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic53 = new Italic();
            ItalicComplexScript italicComplexScript51 = new ItalicComplexScript();
            FontSize fontSize76 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle394.Append(runFonts89);
            runPropertiesBaseStyle394.Append(italic53);
            runPropertiesBaseStyle394.Append(italicComplexScript51);
            runPropertiesBaseStyle394.Append(fontSize76);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties574 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties574 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders415 = new TableCellBorders();
            BottomBorder bottomBorder280 = new BottomBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders415.Append(bottomBorder280);
            Shading shading320 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties574.Append(tableCellBorders415);
            tableStyleConditionalFormattingTableCellProperties574.Append(shading320);

            tableStyleProperties709.Append(runPropertiesBaseStyle394);
            tableStyleProperties709.Append(tableStyleConditionalFormattingTableProperties574);
            tableStyleProperties709.Append(tableStyleConditionalFormattingTableCellProperties574);

            TableStyleProperties tableStyleProperties710 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle395 = new RunPropertiesBaseStyle();
            RunFonts runFonts90 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic54 = new Italic();
            ItalicComplexScript italicComplexScript52 = new ItalicComplexScript();
            FontSize fontSize77 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle395.Append(runFonts90);
            runPropertiesBaseStyle395.Append(italic54);
            runPropertiesBaseStyle395.Append(italicComplexScript52);
            runPropertiesBaseStyle395.Append(fontSize77);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties575 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties575 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders416 = new TableCellBorders();
            TopBorder topBorder315 = new TopBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders416.Append(topBorder315);
            Shading shading321 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties575.Append(tableCellBorders416);
            tableStyleConditionalFormattingTableCellProperties575.Append(shading321);

            tableStyleProperties710.Append(runPropertiesBaseStyle395);
            tableStyleProperties710.Append(tableStyleConditionalFormattingTableProperties575);
            tableStyleProperties710.Append(tableStyleConditionalFormattingTableCellProperties575);

            TableStyleProperties tableStyleProperties711 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties130 = new StyleParagraphProperties();
            Justification justification23 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties130.Append(justification23);

            RunPropertiesBaseStyle runPropertiesBaseStyle396 = new RunPropertiesBaseStyle();
            RunFonts runFonts91 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic55 = new Italic();
            ItalicComplexScript italicComplexScript53 = new ItalicComplexScript();
            FontSize fontSize78 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle396.Append(runFonts91);
            runPropertiesBaseStyle396.Append(italic55);
            runPropertiesBaseStyle396.Append(italicComplexScript53);
            runPropertiesBaseStyle396.Append(fontSize78);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties576 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties576 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders417 = new TableCellBorders();
            RightBorder rightBorder221 = new RightBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders417.Append(rightBorder221);
            Shading shading322 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties576.Append(tableCellBorders417);
            tableStyleConditionalFormattingTableCellProperties576.Append(shading322);

            tableStyleProperties711.Append(styleParagraphProperties130);
            tableStyleProperties711.Append(runPropertiesBaseStyle396);
            tableStyleProperties711.Append(tableStyleConditionalFormattingTableProperties576);
            tableStyleProperties711.Append(tableStyleConditionalFormattingTableCellProperties576);

            TableStyleProperties tableStyleProperties712 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle397 = new RunPropertiesBaseStyle();
            RunFonts runFonts92 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic56 = new Italic();
            ItalicComplexScript italicComplexScript54 = new ItalicComplexScript();
            FontSize fontSize79 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle397.Append(runFonts92);
            runPropertiesBaseStyle397.Append(italic56);
            runPropertiesBaseStyle397.Append(italicComplexScript54);
            runPropertiesBaseStyle397.Append(fontSize79);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties577 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties577 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders418 = new TableCellBorders();
            LeftBorder leftBorder221 = new LeftBorder() { Val = BorderValues.Single, Color = "ED7D31", ThemeColor = ThemeColorValues.Accent2, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders418.Append(leftBorder221);
            Shading shading323 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties577.Append(tableCellBorders418);
            tableStyleConditionalFormattingTableCellProperties577.Append(shading323);

            tableStyleProperties712.Append(runPropertiesBaseStyle397);
            tableStyleProperties712.Append(tableStyleConditionalFormattingTableProperties577);
            tableStyleProperties712.Append(tableStyleConditionalFormattingTableCellProperties577);

            TableStyleProperties tableStyleProperties713 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties578 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties578 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading324 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties578.Append(shading324);

            tableStyleProperties713.Append(tableStyleConditionalFormattingTableProperties578);
            tableStyleProperties713.Append(tableStyleConditionalFormattingTableCellProperties578);

            TableStyleProperties tableStyleProperties714 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties579 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties579 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading325 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FBE4D5", ThemeFill = ThemeColorValues.Accent2, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties579.Append(shading325);

            tableStyleProperties714.Append(tableStyleConditionalFormattingTableProperties579);
            tableStyleProperties714.Append(tableStyleConditionalFormattingTableCellProperties579);

            TableStyleProperties tableStyleProperties715 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties580 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties580 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders419 = new TableCellBorders();
            LeftBorder leftBorder222 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders419.Append(leftBorder222);

            tableStyleConditionalFormattingTableCellProperties580.Append(tableCellBorders419);

            tableStyleProperties715.Append(tableStyleConditionalFormattingTableProperties580);
            tableStyleProperties715.Append(tableStyleConditionalFormattingTableCellProperties580);

            TableStyleProperties tableStyleProperties716 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties581 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties581 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders420 = new TableCellBorders();
            RightBorder rightBorder222 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders420.Append(rightBorder222);

            tableStyleConditionalFormattingTableCellProperties581.Append(tableCellBorders420);

            tableStyleProperties716.Append(tableStyleConditionalFormattingTableProperties581);
            tableStyleProperties716.Append(tableStyleConditionalFormattingTableCellProperties581);

            TableStyleProperties tableStyleProperties717 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties582 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties582 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders421 = new TableCellBorders();
            LeftBorder leftBorder223 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders421.Append(leftBorder223);

            tableStyleConditionalFormattingTableCellProperties582.Append(tableCellBorders421);

            tableStyleProperties717.Append(tableStyleConditionalFormattingTableProperties582);
            tableStyleProperties717.Append(tableStyleConditionalFormattingTableCellProperties582);

            TableStyleProperties tableStyleProperties718 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties583 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties583 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders422 = new TableCellBorders();
            RightBorder rightBorder223 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders422.Append(rightBorder223);

            tableStyleConditionalFormattingTableCellProperties583.Append(tableCellBorders422);

            tableStyleProperties718.Append(tableStyleConditionalFormattingTableProperties583);
            tableStyleProperties718.Append(tableStyleConditionalFormattingTableCellProperties583);

            style132.Append(styleName132);
            style132.Append(basedOn127);
            style132.Append(uIPriority131);
            style132.Append(rsid128);
            style132.Append(styleParagraphProperties129);
            style132.Append(styleRunProperties56);
            style132.Append(styleTableProperties102);
            style132.Append(tableStyleProperties709);
            style132.Append(tableStyleProperties710);
            style132.Append(tableStyleProperties711);
            style132.Append(tableStyleProperties712);
            style132.Append(tableStyleProperties713);
            style132.Append(tableStyleProperties714);
            style132.Append(tableStyleProperties715);
            style132.Append(tableStyleProperties716);
            style132.Append(tableStyleProperties717);
            style132.Append(tableStyleProperties718);

            Style style133 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent3" };
            StyleName styleName133 = new StyleName() { Val = "List Table 7 Colorful Accent 3" };
            BasedOn basedOn128 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority132 = new UIPriority() { Val = 52 };
            Rsid rsid129 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties131 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines123 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties131.Append(spacingBetweenLines123);

            StyleRunProperties styleRunProperties57 = new StyleRunProperties();
            Color color110 = new Color() { Val = "7B7B7B", ThemeColor = ThemeColorValues.Accent3, ThemeShade = "BF" };

            styleRunProperties57.Append(color110);

            StyleTableProperties styleTableProperties103 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize100 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize100 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties103.Append(tableStyleRowBandSize100);
            styleTableProperties103.Append(tableStyleColumnBandSize100);

            TableStyleProperties tableStyleProperties719 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle398 = new RunPropertiesBaseStyle();
            RunFonts runFonts93 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic57 = new Italic();
            ItalicComplexScript italicComplexScript55 = new ItalicComplexScript();
            FontSize fontSize80 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle398.Append(runFonts93);
            runPropertiesBaseStyle398.Append(italic57);
            runPropertiesBaseStyle398.Append(italicComplexScript55);
            runPropertiesBaseStyle398.Append(fontSize80);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties584 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties584 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders423 = new TableCellBorders();
            BottomBorder bottomBorder281 = new BottomBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders423.Append(bottomBorder281);
            Shading shading326 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties584.Append(tableCellBorders423);
            tableStyleConditionalFormattingTableCellProperties584.Append(shading326);

            tableStyleProperties719.Append(runPropertiesBaseStyle398);
            tableStyleProperties719.Append(tableStyleConditionalFormattingTableProperties584);
            tableStyleProperties719.Append(tableStyleConditionalFormattingTableCellProperties584);

            TableStyleProperties tableStyleProperties720 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle399 = new RunPropertiesBaseStyle();
            RunFonts runFonts94 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic58 = new Italic();
            ItalicComplexScript italicComplexScript56 = new ItalicComplexScript();
            FontSize fontSize81 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle399.Append(runFonts94);
            runPropertiesBaseStyle399.Append(italic58);
            runPropertiesBaseStyle399.Append(italicComplexScript56);
            runPropertiesBaseStyle399.Append(fontSize81);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties585 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties585 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders424 = new TableCellBorders();
            TopBorder topBorder316 = new TopBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders424.Append(topBorder316);
            Shading shading327 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties585.Append(tableCellBorders424);
            tableStyleConditionalFormattingTableCellProperties585.Append(shading327);

            tableStyleProperties720.Append(runPropertiesBaseStyle399);
            tableStyleProperties720.Append(tableStyleConditionalFormattingTableProperties585);
            tableStyleProperties720.Append(tableStyleConditionalFormattingTableCellProperties585);

            TableStyleProperties tableStyleProperties721 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties132 = new StyleParagraphProperties();
            Justification justification24 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties132.Append(justification24);

            RunPropertiesBaseStyle runPropertiesBaseStyle400 = new RunPropertiesBaseStyle();
            RunFonts runFonts95 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic59 = new Italic();
            ItalicComplexScript italicComplexScript57 = new ItalicComplexScript();
            FontSize fontSize82 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle400.Append(runFonts95);
            runPropertiesBaseStyle400.Append(italic59);
            runPropertiesBaseStyle400.Append(italicComplexScript57);
            runPropertiesBaseStyle400.Append(fontSize82);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties586 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties586 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders425 = new TableCellBorders();
            RightBorder rightBorder224 = new RightBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders425.Append(rightBorder224);
            Shading shading328 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties586.Append(tableCellBorders425);
            tableStyleConditionalFormattingTableCellProperties586.Append(shading328);

            tableStyleProperties721.Append(styleParagraphProperties132);
            tableStyleProperties721.Append(runPropertiesBaseStyle400);
            tableStyleProperties721.Append(tableStyleConditionalFormattingTableProperties586);
            tableStyleProperties721.Append(tableStyleConditionalFormattingTableCellProperties586);

            TableStyleProperties tableStyleProperties722 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle401 = new RunPropertiesBaseStyle();
            RunFonts runFonts96 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic60 = new Italic();
            ItalicComplexScript italicComplexScript58 = new ItalicComplexScript();
            FontSize fontSize83 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle401.Append(runFonts96);
            runPropertiesBaseStyle401.Append(italic60);
            runPropertiesBaseStyle401.Append(italicComplexScript58);
            runPropertiesBaseStyle401.Append(fontSize83);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties587 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties587 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders426 = new TableCellBorders();
            LeftBorder leftBorder224 = new LeftBorder() { Val = BorderValues.Single, Color = "A5A5A5", ThemeColor = ThemeColorValues.Accent3, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders426.Append(leftBorder224);
            Shading shading329 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties587.Append(tableCellBorders426);
            tableStyleConditionalFormattingTableCellProperties587.Append(shading329);

            tableStyleProperties722.Append(runPropertiesBaseStyle401);
            tableStyleProperties722.Append(tableStyleConditionalFormattingTableProperties587);
            tableStyleProperties722.Append(tableStyleConditionalFormattingTableCellProperties587);

            TableStyleProperties tableStyleProperties723 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties588 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties588 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading330 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties588.Append(shading330);

            tableStyleProperties723.Append(tableStyleConditionalFormattingTableProperties588);
            tableStyleProperties723.Append(tableStyleConditionalFormattingTableCellProperties588);

            TableStyleProperties tableStyleProperties724 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties589 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties589 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading331 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "EDEDED", ThemeFill = ThemeColorValues.Accent3, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties589.Append(shading331);

            tableStyleProperties724.Append(tableStyleConditionalFormattingTableProperties589);
            tableStyleProperties724.Append(tableStyleConditionalFormattingTableCellProperties589);

            TableStyleProperties tableStyleProperties725 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties590 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties590 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders427 = new TableCellBorders();
            LeftBorder leftBorder225 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders427.Append(leftBorder225);

            tableStyleConditionalFormattingTableCellProperties590.Append(tableCellBorders427);

            tableStyleProperties725.Append(tableStyleConditionalFormattingTableProperties590);
            tableStyleProperties725.Append(tableStyleConditionalFormattingTableCellProperties590);

            TableStyleProperties tableStyleProperties726 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties591 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties591 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders428 = new TableCellBorders();
            RightBorder rightBorder225 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders428.Append(rightBorder225);

            tableStyleConditionalFormattingTableCellProperties591.Append(tableCellBorders428);

            tableStyleProperties726.Append(tableStyleConditionalFormattingTableProperties591);
            tableStyleProperties726.Append(tableStyleConditionalFormattingTableCellProperties591);

            TableStyleProperties tableStyleProperties727 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties592 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties592 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders429 = new TableCellBorders();
            LeftBorder leftBorder226 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders429.Append(leftBorder226);

            tableStyleConditionalFormattingTableCellProperties592.Append(tableCellBorders429);

            tableStyleProperties727.Append(tableStyleConditionalFormattingTableProperties592);
            tableStyleProperties727.Append(tableStyleConditionalFormattingTableCellProperties592);

            TableStyleProperties tableStyleProperties728 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties593 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties593 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders430 = new TableCellBorders();
            RightBorder rightBorder226 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders430.Append(rightBorder226);

            tableStyleConditionalFormattingTableCellProperties593.Append(tableCellBorders430);

            tableStyleProperties728.Append(tableStyleConditionalFormattingTableProperties593);
            tableStyleProperties728.Append(tableStyleConditionalFormattingTableCellProperties593);

            style133.Append(styleName133);
            style133.Append(basedOn128);
            style133.Append(uIPriority132);
            style133.Append(rsid129);
            style133.Append(styleParagraphProperties131);
            style133.Append(styleRunProperties57);
            style133.Append(styleTableProperties103);
            style133.Append(tableStyleProperties719);
            style133.Append(tableStyleProperties720);
            style133.Append(tableStyleProperties721);
            style133.Append(tableStyleProperties722);
            style133.Append(tableStyleProperties723);
            style133.Append(tableStyleProperties724);
            style133.Append(tableStyleProperties725);
            style133.Append(tableStyleProperties726);
            style133.Append(tableStyleProperties727);
            style133.Append(tableStyleProperties728);

            Style style134 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent4" };
            StyleName styleName134 = new StyleName() { Val = "List Table 7 Colorful Accent 4" };
            BasedOn basedOn129 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority133 = new UIPriority() { Val = 52 };
            Rsid rsid130 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties133 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines124 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties133.Append(spacingBetweenLines124);

            StyleRunProperties styleRunProperties58 = new StyleRunProperties();
            Color color111 = new Color() { Val = "BF8F00", ThemeColor = ThemeColorValues.Accent4, ThemeShade = "BF" };

            styleRunProperties58.Append(color111);

            StyleTableProperties styleTableProperties104 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize101 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize101 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties104.Append(tableStyleRowBandSize101);
            styleTableProperties104.Append(tableStyleColumnBandSize101);

            TableStyleProperties tableStyleProperties729 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle402 = new RunPropertiesBaseStyle();
            RunFonts runFonts97 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic61 = new Italic();
            ItalicComplexScript italicComplexScript59 = new ItalicComplexScript();
            FontSize fontSize84 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle402.Append(runFonts97);
            runPropertiesBaseStyle402.Append(italic61);
            runPropertiesBaseStyle402.Append(italicComplexScript59);
            runPropertiesBaseStyle402.Append(fontSize84);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties594 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties594 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders431 = new TableCellBorders();
            BottomBorder bottomBorder282 = new BottomBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders431.Append(bottomBorder282);
            Shading shading332 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties594.Append(tableCellBorders431);
            tableStyleConditionalFormattingTableCellProperties594.Append(shading332);

            tableStyleProperties729.Append(runPropertiesBaseStyle402);
            tableStyleProperties729.Append(tableStyleConditionalFormattingTableProperties594);
            tableStyleProperties729.Append(tableStyleConditionalFormattingTableCellProperties594);

            TableStyleProperties tableStyleProperties730 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle403 = new RunPropertiesBaseStyle();
            RunFonts runFonts98 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic62 = new Italic();
            ItalicComplexScript italicComplexScript60 = new ItalicComplexScript();
            FontSize fontSize85 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle403.Append(runFonts98);
            runPropertiesBaseStyle403.Append(italic62);
            runPropertiesBaseStyle403.Append(italicComplexScript60);
            runPropertiesBaseStyle403.Append(fontSize85);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties595 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties595 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders432 = new TableCellBorders();
            TopBorder topBorder317 = new TopBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders432.Append(topBorder317);
            Shading shading333 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties595.Append(tableCellBorders432);
            tableStyleConditionalFormattingTableCellProperties595.Append(shading333);

            tableStyleProperties730.Append(runPropertiesBaseStyle403);
            tableStyleProperties730.Append(tableStyleConditionalFormattingTableProperties595);
            tableStyleProperties730.Append(tableStyleConditionalFormattingTableCellProperties595);

            TableStyleProperties tableStyleProperties731 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties134 = new StyleParagraphProperties();
            Justification justification25 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties134.Append(justification25);

            RunPropertiesBaseStyle runPropertiesBaseStyle404 = new RunPropertiesBaseStyle();
            RunFonts runFonts99 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic63 = new Italic();
            ItalicComplexScript italicComplexScript61 = new ItalicComplexScript();
            FontSize fontSize86 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle404.Append(runFonts99);
            runPropertiesBaseStyle404.Append(italic63);
            runPropertiesBaseStyle404.Append(italicComplexScript61);
            runPropertiesBaseStyle404.Append(fontSize86);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties596 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties596 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders433 = new TableCellBorders();
            RightBorder rightBorder227 = new RightBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders433.Append(rightBorder227);
            Shading shading334 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties596.Append(tableCellBorders433);
            tableStyleConditionalFormattingTableCellProperties596.Append(shading334);

            tableStyleProperties731.Append(styleParagraphProperties134);
            tableStyleProperties731.Append(runPropertiesBaseStyle404);
            tableStyleProperties731.Append(tableStyleConditionalFormattingTableProperties596);
            tableStyleProperties731.Append(tableStyleConditionalFormattingTableCellProperties596);

            TableStyleProperties tableStyleProperties732 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle405 = new RunPropertiesBaseStyle();
            RunFonts runFonts100 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic64 = new Italic();
            ItalicComplexScript italicComplexScript62 = new ItalicComplexScript();
            FontSize fontSize87 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle405.Append(runFonts100);
            runPropertiesBaseStyle405.Append(italic64);
            runPropertiesBaseStyle405.Append(italicComplexScript62);
            runPropertiesBaseStyle405.Append(fontSize87);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties597 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties597 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders434 = new TableCellBorders();
            LeftBorder leftBorder227 = new LeftBorder() { Val = BorderValues.Single, Color = "FFC000", ThemeColor = ThemeColorValues.Accent4, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders434.Append(leftBorder227);
            Shading shading335 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties597.Append(tableCellBorders434);
            tableStyleConditionalFormattingTableCellProperties597.Append(shading335);

            tableStyleProperties732.Append(runPropertiesBaseStyle405);
            tableStyleProperties732.Append(tableStyleConditionalFormattingTableProperties597);
            tableStyleProperties732.Append(tableStyleConditionalFormattingTableCellProperties597);

            TableStyleProperties tableStyleProperties733 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties598 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties598 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading336 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties598.Append(shading336);

            tableStyleProperties733.Append(tableStyleConditionalFormattingTableProperties598);
            tableStyleProperties733.Append(tableStyleConditionalFormattingTableCellProperties598);

            TableStyleProperties tableStyleProperties734 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties599 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties599 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading337 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFF2CC", ThemeFill = ThemeColorValues.Accent4, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties599.Append(shading337);

            tableStyleProperties734.Append(tableStyleConditionalFormattingTableProperties599);
            tableStyleProperties734.Append(tableStyleConditionalFormattingTableCellProperties599);

            TableStyleProperties tableStyleProperties735 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties600 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties600 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders435 = new TableCellBorders();
            LeftBorder leftBorder228 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders435.Append(leftBorder228);

            tableStyleConditionalFormattingTableCellProperties600.Append(tableCellBorders435);

            tableStyleProperties735.Append(tableStyleConditionalFormattingTableProperties600);
            tableStyleProperties735.Append(tableStyleConditionalFormattingTableCellProperties600);

            TableStyleProperties tableStyleProperties736 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties601 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties601 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders436 = new TableCellBorders();
            RightBorder rightBorder228 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders436.Append(rightBorder228);

            tableStyleConditionalFormattingTableCellProperties601.Append(tableCellBorders436);

            tableStyleProperties736.Append(tableStyleConditionalFormattingTableProperties601);
            tableStyleProperties736.Append(tableStyleConditionalFormattingTableCellProperties601);

            TableStyleProperties tableStyleProperties737 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties602 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties602 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders437 = new TableCellBorders();
            LeftBorder leftBorder229 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders437.Append(leftBorder229);

            tableStyleConditionalFormattingTableCellProperties602.Append(tableCellBorders437);

            tableStyleProperties737.Append(tableStyleConditionalFormattingTableProperties602);
            tableStyleProperties737.Append(tableStyleConditionalFormattingTableCellProperties602);

            TableStyleProperties tableStyleProperties738 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties603 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties603 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders438 = new TableCellBorders();
            RightBorder rightBorder229 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders438.Append(rightBorder229);

            tableStyleConditionalFormattingTableCellProperties603.Append(tableCellBorders438);

            tableStyleProperties738.Append(tableStyleConditionalFormattingTableProperties603);
            tableStyleProperties738.Append(tableStyleConditionalFormattingTableCellProperties603);

            style134.Append(styleName134);
            style134.Append(basedOn129);
            style134.Append(uIPriority133);
            style134.Append(rsid130);
            style134.Append(styleParagraphProperties133);
            style134.Append(styleRunProperties58);
            style134.Append(styleTableProperties104);
            style134.Append(tableStyleProperties729);
            style134.Append(tableStyleProperties730);
            style134.Append(tableStyleProperties731);
            style134.Append(tableStyleProperties732);
            style134.Append(tableStyleProperties733);
            style134.Append(tableStyleProperties734);
            style134.Append(tableStyleProperties735);
            style134.Append(tableStyleProperties736);
            style134.Append(tableStyleProperties737);
            style134.Append(tableStyleProperties738);

            Style style135 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent5" };
            StyleName styleName135 = new StyleName() { Val = "List Table 7 Colorful Accent 5" };
            BasedOn basedOn130 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority134 = new UIPriority() { Val = 52 };
            Rsid rsid131 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties135 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines125 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties135.Append(spacingBetweenLines125);

            StyleRunProperties styleRunProperties59 = new StyleRunProperties();
            Color color112 = new Color() { Val = "2F5496", ThemeColor = ThemeColorValues.Accent5, ThemeShade = "BF" };

            styleRunProperties59.Append(color112);

            StyleTableProperties styleTableProperties105 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize102 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize102 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties105.Append(tableStyleRowBandSize102);
            styleTableProperties105.Append(tableStyleColumnBandSize102);

            TableStyleProperties tableStyleProperties739 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle406 = new RunPropertiesBaseStyle();
            RunFonts runFonts101 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic65 = new Italic();
            ItalicComplexScript italicComplexScript63 = new ItalicComplexScript();
            FontSize fontSize88 = new FontSize() { Val = "10" };

            runPropertiesBaseStyle406.Append(runFonts101);
            runPropertiesBaseStyle406.Append(italic65);
            runPropertiesBaseStyle406.Append(italicComplexScript63);
            runPropertiesBaseStyle406.Append(fontSize88);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties604 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties604 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders439 = new TableCellBorders();
            BottomBorder bottomBorder283 = new BottomBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders439.Append(bottomBorder283);
            Shading shading338 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties604.Append(tableCellBorders439);
            tableStyleConditionalFormattingTableCellProperties604.Append(shading338);

            tableStyleProperties739.Append(runPropertiesBaseStyle406);
            tableStyleProperties739.Append(tableStyleConditionalFormattingTableProperties604);
            tableStyleProperties739.Append(tableStyleConditionalFormattingTableCellProperties604);

            TableStyleProperties tableStyleProperties740 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle407 = new RunPropertiesBaseStyle();
            RunFonts runFonts102 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic66 = new Italic();
            ItalicComplexScript italicComplexScript64 = new ItalicComplexScript();
            FontSize fontSize89 = new FontSize() { Val = "10" };

            runPropertiesBaseStyle407.Append(runFonts102);
            runPropertiesBaseStyle407.Append(italic66);
            runPropertiesBaseStyle407.Append(italicComplexScript64);
            runPropertiesBaseStyle407.Append(fontSize89);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties605 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties605 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders440 = new TableCellBorders();
            TopBorder topBorder318 = new TopBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders440.Append(topBorder318);
            Shading shading339 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties605.Append(tableCellBorders440);
            tableStyleConditionalFormattingTableCellProperties605.Append(shading339);

            tableStyleProperties740.Append(runPropertiesBaseStyle407);
            tableStyleProperties740.Append(tableStyleConditionalFormattingTableProperties605);
            tableStyleProperties740.Append(tableStyleConditionalFormattingTableCellProperties605);

            TableStyleProperties tableStyleProperties741 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties136 = new StyleParagraphProperties();
            Justification justification26 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties136.Append(justification26);

            RunPropertiesBaseStyle runPropertiesBaseStyle408 = new RunPropertiesBaseStyle();
            RunFonts runFonts103 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic67 = new Italic();
            ItalicComplexScript italicComplexScript65 = new ItalicComplexScript();
            FontSize fontSize90 = new FontSize() { Val = "10" };

            runPropertiesBaseStyle408.Append(runFonts103);
            runPropertiesBaseStyle408.Append(italic67);
            runPropertiesBaseStyle408.Append(italicComplexScript65);
            runPropertiesBaseStyle408.Append(fontSize90);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties606 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties606 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders441 = new TableCellBorders();
            RightBorder rightBorder230 = new RightBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders441.Append(rightBorder230);
            Shading shading340 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties606.Append(tableCellBorders441);
            tableStyleConditionalFormattingTableCellProperties606.Append(shading340);

            tableStyleProperties741.Append(styleParagraphProperties136);
            tableStyleProperties741.Append(runPropertiesBaseStyle408);
            tableStyleProperties741.Append(tableStyleConditionalFormattingTableProperties606);
            tableStyleProperties741.Append(tableStyleConditionalFormattingTableCellProperties606);

            TableStyleProperties tableStyleProperties742 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle409 = new RunPropertiesBaseStyle();
            RunFonts runFonts104 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic68 = new Italic();
            ItalicComplexScript italicComplexScript66 = new ItalicComplexScript();
            FontSize fontSize91 = new FontSize() { Val = "10" };

            runPropertiesBaseStyle409.Append(runFonts104);
            runPropertiesBaseStyle409.Append(italic68);
            runPropertiesBaseStyle409.Append(italicComplexScript66);
            runPropertiesBaseStyle409.Append(fontSize91);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties607 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties607 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders442 = new TableCellBorders();
            LeftBorder leftBorder230 = new LeftBorder() { Val = BorderValues.Single, Color = "4472C4", ThemeColor = ThemeColorValues.Accent5, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders442.Append(leftBorder230);
            Shading shading341 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties607.Append(tableCellBorders442);
            tableStyleConditionalFormattingTableCellProperties607.Append(shading341);

            tableStyleProperties742.Append(runPropertiesBaseStyle409);
            tableStyleProperties742.Append(tableStyleConditionalFormattingTableProperties607);
            tableStyleProperties742.Append(tableStyleConditionalFormattingTableCellProperties607);

            TableStyleProperties tableStyleProperties743 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties608 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties608 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading342 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties608.Append(shading342);

            tableStyleProperties743.Append(tableStyleConditionalFormattingTableProperties608);
            tableStyleProperties743.Append(tableStyleConditionalFormattingTableCellProperties608);

            TableStyleProperties tableStyleProperties744 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties609 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties609 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading343 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "D9E2F3", ThemeFill = ThemeColorValues.Accent5, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties609.Append(shading343);

            tableStyleProperties744.Append(tableStyleConditionalFormattingTableProperties609);
            tableStyleProperties744.Append(tableStyleConditionalFormattingTableCellProperties609);

            TableStyleProperties tableStyleProperties745 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties610 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties610 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders443 = new TableCellBorders();
            LeftBorder leftBorder231 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders443.Append(leftBorder231);

            tableStyleConditionalFormattingTableCellProperties610.Append(tableCellBorders443);

            tableStyleProperties745.Append(tableStyleConditionalFormattingTableProperties610);
            tableStyleProperties745.Append(tableStyleConditionalFormattingTableCellProperties610);

            TableStyleProperties tableStyleProperties746 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties611 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties611 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders444 = new TableCellBorders();
            RightBorder rightBorder231 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders444.Append(rightBorder231);

            tableStyleConditionalFormattingTableCellProperties611.Append(tableCellBorders444);

            tableStyleProperties746.Append(tableStyleConditionalFormattingTableProperties611);
            tableStyleProperties746.Append(tableStyleConditionalFormattingTableCellProperties611);

            TableStyleProperties tableStyleProperties747 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties612 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties612 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders445 = new TableCellBorders();
            LeftBorder leftBorder232 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders445.Append(leftBorder232);

            tableStyleConditionalFormattingTableCellProperties612.Append(tableCellBorders445);

            tableStyleProperties747.Append(tableStyleConditionalFormattingTableProperties612);
            tableStyleProperties747.Append(tableStyleConditionalFormattingTableCellProperties612);

            TableStyleProperties tableStyleProperties748 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties613 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties613 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders446 = new TableCellBorders();
            RightBorder rightBorder232 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders446.Append(rightBorder232);

            tableStyleConditionalFormattingTableCellProperties613.Append(tableCellBorders446);

            tableStyleProperties748.Append(tableStyleConditionalFormattingTableProperties613);
            tableStyleProperties748.Append(tableStyleConditionalFormattingTableCellProperties613);

            style135.Append(styleName135);
            style135.Append(basedOn130);
            style135.Append(uIPriority134);
            style135.Append(rsid131);
            style135.Append(styleParagraphProperties135);
            style135.Append(styleRunProperties59);
            style135.Append(styleTableProperties105);
            style135.Append(tableStyleProperties739);
            style135.Append(tableStyleProperties740);
            style135.Append(tableStyleProperties741);
            style135.Append(tableStyleProperties742);
            style135.Append(tableStyleProperties743);
            style135.Append(tableStyleProperties744);
            style135.Append(tableStyleProperties745);
            style135.Append(tableStyleProperties746);
            style135.Append(tableStyleProperties747);
            style135.Append(tableStyleProperties748);

            Style style136 = new Style() { Type = StyleValues.Table, StyleId = "ListTable7Colorful-Accent6" };
            StyleName styleName136 = new StyleName() { Val = "List Table 7 Colorful Accent 6" };
            BasedOn basedOn131 = new BasedOn() { Val = "TableNormal" };
            UIPriority uIPriority135 = new UIPriority() { Val = 52 };
            Rsid rsid132 = new Rsid() { Val = "00D10BFB" };

            StyleParagraphProperties styleParagraphProperties137 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines126 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties137.Append(spacingBetweenLines126);

            StyleRunProperties styleRunProperties60 = new StyleRunProperties();
            Color color113 = new Color() { Val = "538135", ThemeColor = ThemeColorValues.Accent6, ThemeShade = "BF" };

            styleRunProperties60.Append(color113);

            StyleTableProperties styleTableProperties106 = new StyleTableProperties();
            TableStyleRowBandSize tableStyleRowBandSize103 = new TableStyleRowBandSize() { Val = 1 };
            TableStyleColumnBandSize tableStyleColumnBandSize103 = new TableStyleColumnBandSize() { Val = 1 };

            styleTableProperties106.Append(tableStyleRowBandSize103);
            styleTableProperties106.Append(tableStyleColumnBandSize103);

            TableStyleProperties tableStyleProperties749 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle410 = new RunPropertiesBaseStyle();
            RunFonts runFonts105 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic69 = new Italic();
            ItalicComplexScript italicComplexScript67 = new ItalicComplexScript();
            FontSize fontSize92 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle410.Append(runFonts105);
            runPropertiesBaseStyle410.Append(italic69);
            runPropertiesBaseStyle410.Append(italicComplexScript67);
            runPropertiesBaseStyle410.Append(fontSize92);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties614 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties614 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders447 = new TableCellBorders();
            BottomBorder bottomBorder284 = new BottomBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders447.Append(bottomBorder284);
            Shading shading344 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties614.Append(tableCellBorders447);
            tableStyleConditionalFormattingTableCellProperties614.Append(shading344);

            tableStyleProperties749.Append(runPropertiesBaseStyle410);
            tableStyleProperties749.Append(tableStyleConditionalFormattingTableProperties614);
            tableStyleProperties749.Append(tableStyleConditionalFormattingTableCellProperties614);

            TableStyleProperties tableStyleProperties750 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastRow };

            RunPropertiesBaseStyle runPropertiesBaseStyle411 = new RunPropertiesBaseStyle();
            RunFonts runFonts106 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic70 = new Italic();
            ItalicComplexScript italicComplexScript68 = new ItalicComplexScript();
            FontSize fontSize93 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle411.Append(runFonts106);
            runPropertiesBaseStyle411.Append(italic70);
            runPropertiesBaseStyle411.Append(italicComplexScript68);
            runPropertiesBaseStyle411.Append(fontSize93);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties615 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties615 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders448 = new TableCellBorders();
            TopBorder topBorder319 = new TopBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders448.Append(topBorder319);
            Shading shading345 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties615.Append(tableCellBorders448);
            tableStyleConditionalFormattingTableCellProperties615.Append(shading345);

            tableStyleProperties750.Append(runPropertiesBaseStyle411);
            tableStyleProperties750.Append(tableStyleConditionalFormattingTableProperties615);
            tableStyleProperties750.Append(tableStyleConditionalFormattingTableCellProperties615);

            TableStyleProperties tableStyleProperties751 = new TableStyleProperties() { Type = TableStyleOverrideValues.FirstColumn };

            StyleParagraphProperties styleParagraphProperties138 = new StyleParagraphProperties();
            Justification justification27 = new Justification() { Val = JustificationValues.Right };

            styleParagraphProperties138.Append(justification27);

            RunPropertiesBaseStyle runPropertiesBaseStyle412 = new RunPropertiesBaseStyle();
            RunFonts runFonts107 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic71 = new Italic();
            ItalicComplexScript italicComplexScript69 = new ItalicComplexScript();
            FontSize fontSize94 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle412.Append(runFonts107);
            runPropertiesBaseStyle412.Append(italic71);
            runPropertiesBaseStyle412.Append(italicComplexScript69);
            runPropertiesBaseStyle412.Append(fontSize94);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties616 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties616 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders449 = new TableCellBorders();
            RightBorder rightBorder233 = new RightBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders449.Append(rightBorder233);
            Shading shading346 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties616.Append(tableCellBorders449);
            tableStyleConditionalFormattingTableCellProperties616.Append(shading346);

            tableStyleProperties751.Append(styleParagraphProperties138);
            tableStyleProperties751.Append(runPropertiesBaseStyle412);
            tableStyleProperties751.Append(tableStyleConditionalFormattingTableProperties616);
            tableStyleProperties751.Append(tableStyleConditionalFormattingTableCellProperties616);

            TableStyleProperties tableStyleProperties752 = new TableStyleProperties() { Type = TableStyleOverrideValues.LastColumn };

            RunPropertiesBaseStyle runPropertiesBaseStyle413 = new RunPropertiesBaseStyle();
            RunFonts runFonts108 = new RunFonts() { AsciiTheme = ThemeFontValues.MajorHighAnsi, HighAnsiTheme = ThemeFontValues.MajorHighAnsi, EastAsiaTheme = ThemeFontValues.MajorEastAsia, ComplexScriptTheme = ThemeFontValues.MajorBidi };
            Italic italic72 = new Italic();
            ItalicComplexScript italicComplexScript70 = new ItalicComplexScript();
            FontSize fontSize95 = new FontSize() { Val = "26" };

            runPropertiesBaseStyle413.Append(runFonts108);
            runPropertiesBaseStyle413.Append(italic72);
            runPropertiesBaseStyle413.Append(italicComplexScript70);
            runPropertiesBaseStyle413.Append(fontSize95);
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties617 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties617 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders450 = new TableCellBorders();
            LeftBorder leftBorder233 = new LeftBorder() { Val = BorderValues.Single, Color = "70AD47", ThemeColor = ThemeColorValues.Accent6, Size = (UInt32Value)4U, Space = (UInt32Value)0U };

            tableCellBorders450.Append(leftBorder233);
            Shading shading347 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "FFFFFF", ThemeFill = ThemeColorValues.Background1 };

            tableStyleConditionalFormattingTableCellProperties617.Append(tableCellBorders450);
            tableStyleConditionalFormattingTableCellProperties617.Append(shading347);

            tableStyleProperties752.Append(runPropertiesBaseStyle413);
            tableStyleProperties752.Append(tableStyleConditionalFormattingTableProperties617);
            tableStyleProperties752.Append(tableStyleConditionalFormattingTableCellProperties617);

            TableStyleProperties tableStyleProperties753 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Vertical };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties618 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties618 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading348 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties618.Append(shading348);

            tableStyleProperties753.Append(tableStyleConditionalFormattingTableProperties618);
            tableStyleProperties753.Append(tableStyleConditionalFormattingTableCellProperties618);

            TableStyleProperties tableStyleProperties754 = new TableStyleProperties() { Type = TableStyleOverrideValues.Band1Horizontal };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties619 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties619 = new TableStyleConditionalFormattingTableCellProperties();
            Shading shading349 = new Shading() { Val = ShadingPatternValues.Clear, Color = "auto", Fill = "E2EFD9", ThemeFill = ThemeColorValues.Accent6, ThemeFillTint = "33" };

            tableStyleConditionalFormattingTableCellProperties619.Append(shading349);

            tableStyleProperties754.Append(tableStyleConditionalFormattingTableProperties619);
            tableStyleProperties754.Append(tableStyleConditionalFormattingTableCellProperties619);

            TableStyleProperties tableStyleProperties755 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties620 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties620 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders451 = new TableCellBorders();
            LeftBorder leftBorder234 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders451.Append(leftBorder234);

            tableStyleConditionalFormattingTableCellProperties620.Append(tableCellBorders451);

            tableStyleProperties755.Append(tableStyleConditionalFormattingTableProperties620);
            tableStyleProperties755.Append(tableStyleConditionalFormattingTableCellProperties620);

            TableStyleProperties tableStyleProperties756 = new TableStyleProperties() { Type = TableStyleOverrideValues.NorthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties621 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties621 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders452 = new TableCellBorders();
            RightBorder rightBorder234 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders452.Append(rightBorder234);

            tableStyleConditionalFormattingTableCellProperties621.Append(tableCellBorders452);

            tableStyleProperties756.Append(tableStyleConditionalFormattingTableProperties621);
            tableStyleProperties756.Append(tableStyleConditionalFormattingTableCellProperties621);

            TableStyleProperties tableStyleProperties757 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthEastCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties622 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties622 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders453 = new TableCellBorders();
            LeftBorder leftBorder235 = new LeftBorder() { Val = BorderValues.Nil };

            tableCellBorders453.Append(leftBorder235);

            tableStyleConditionalFormattingTableCellProperties622.Append(tableCellBorders453);

            tableStyleProperties757.Append(tableStyleConditionalFormattingTableProperties622);
            tableStyleProperties757.Append(tableStyleConditionalFormattingTableCellProperties622);

            TableStyleProperties tableStyleProperties758 = new TableStyleProperties() { Type = TableStyleOverrideValues.SouthWestCell };
            TableStyleConditionalFormattingTableProperties tableStyleConditionalFormattingTableProperties623 = new TableStyleConditionalFormattingTableProperties();

            TableStyleConditionalFormattingTableCellProperties tableStyleConditionalFormattingTableCellProperties623 = new TableStyleConditionalFormattingTableCellProperties();

            TableCellBorders tableCellBorders454 = new TableCellBorders();
            RightBorder rightBorder235 = new RightBorder() { Val = BorderValues.Nil };

            tableCellBorders454.Append(rightBorder235);

            tableStyleConditionalFormattingTableCellProperties623.Append(tableCellBorders454);

            tableStyleProperties758.Append(tableStyleConditionalFormattingTableProperties623);
            tableStyleProperties758.Append(tableStyleConditionalFormattingTableCellProperties623);

            style136.Append(styleName136);
            style136.Append(basedOn131);
            style136.Append(uIPriority135);
            style136.Append(rsid132);
            style136.Append(styleParagraphProperties137);
            style136.Append(styleRunProperties60);
            style136.Append(styleTableProperties106);
            style136.Append(tableStyleProperties749);
            style136.Append(tableStyleProperties750);
            style136.Append(tableStyleProperties751);
            style136.Append(tableStyleProperties752);
            style136.Append(tableStyleProperties753);
            style136.Append(tableStyleProperties754);
            style136.Append(tableStyleProperties755);
            style136.Append(tableStyleProperties756);
            style136.Append(tableStyleProperties757);
            style136.Append(tableStyleProperties758);

            Style style137 = new Style() { Type = StyleValues.Character, StyleId = "Hyperlink" };
            StyleName styleName137 = new StyleName() { Val = "Hyperlink" };
            BasedOn basedOn132 = new BasedOn() { Val = "DefaultParagraphFont" };
            UIPriority uIPriority136 = new UIPriority() { Val = 99 };
            UnhideWhenUsed unhideWhenUsed8 = new UnhideWhenUsed();
            Rsid rsid133 = new Rsid() { Val = "005F6BB9" };

            StyleRunProperties styleRunProperties61 = new StyleRunProperties();
            Color color114 = new Color() { Val = "0563C1", ThemeColor = ThemeColorValues.Hyperlink };
            Underline underline3 = new Underline() { Val = UnderlineValues.Single };

            styleRunProperties61.Append(color114);
            styleRunProperties61.Append(underline3);

            style137.Append(styleName137);
            style137.Append(basedOn132);
            style137.Append(uIPriority136);
            style137.Append(unhideWhenUsed8);
            style137.Append(rsid133);
            style137.Append(styleRunProperties61);

            Style style138 = new Style() { Type = StyleValues.Paragraph, StyleId = "TOCHeading" };
            StyleName styleName138 = new StyleName() { Val = "TOC Heading" };
            BasedOn basedOn133 = new BasedOn() { Val = "Heading1" };
            NextParagraphStyle nextParagraphStyle10 = new NextParagraphStyle() { Val = "Normal" };
            UIPriority uIPriority137 = new UIPriority() { Val = 39 };
            UnhideWhenUsed unhideWhenUsed9 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle20 = new PrimaryStyle();
            Rsid rsid134 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties139 = new StyleParagraphProperties();
            OutlineLevel outlineLevel6 = new OutlineLevel() { Val = 9 };

            styleParagraphProperties139.Append(outlineLevel6);

            StyleRunProperties styleRunProperties62 = new StyleRunProperties();
            Languages languages12 = new Languages() { Val = "en-US" };

            styleRunProperties62.Append(languages12);

            style138.Append(styleName138);
            style138.Append(basedOn133);
            style138.Append(nextParagraphStyle10);
            style138.Append(uIPriority137);
            style138.Append(unhideWhenUsed9);
            style138.Append(primaryStyle20);
            style138.Append(rsid134);
            style138.Append(styleParagraphProperties139);
            style138.Append(styleRunProperties62);

            Style style139 = new Style() { Type = StyleValues.Paragraph, StyleId = "TOC1" };
            StyleName styleName139 = new StyleName() { Val = "toc 1" };
            BasedOn basedOn134 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle11 = new NextParagraphStyle() { Val = "Normal" };
            AutoRedefine autoRedefine1 = new AutoRedefine();
            UIPriority uIPriority138 = new UIPriority() { Val = 39 };
            UnhideWhenUsed unhideWhenUsed10 = new UnhideWhenUsed();
            Rsid rsid135 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties140 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines127 = new SpacingBetweenLines() { After = "100" };

            styleParagraphProperties140.Append(spacingBetweenLines127);

            style139.Append(styleName139);
            style139.Append(basedOn134);
            style139.Append(nextParagraphStyle11);
            style139.Append(autoRedefine1);
            style139.Append(uIPriority138);
            style139.Append(unhideWhenUsed10);
            style139.Append(rsid135);
            style139.Append(styleParagraphProperties140);

            Style style140 = new Style() { Type = StyleValues.Paragraph, StyleId = "TOC2" };
            StyleName styleName140 = new StyleName() { Val = "toc 2" };
            BasedOn basedOn135 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle12 = new NextParagraphStyle() { Val = "Normal" };
            AutoRedefine autoRedefine2 = new AutoRedefine();
            UIPriority uIPriority139 = new UIPriority() { Val = 39 };
            UnhideWhenUsed unhideWhenUsed11 = new UnhideWhenUsed();
            Rsid rsid136 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties141 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines128 = new SpacingBetweenLines() { After = "100" };
            Indentation indentation8 = new Indentation() { Start = "220" };

            styleParagraphProperties141.Append(spacingBetweenLines128);
            styleParagraphProperties141.Append(indentation8);

            style140.Append(styleName140);
            style140.Append(basedOn135);
            style140.Append(nextParagraphStyle12);
            style140.Append(autoRedefine2);
            style140.Append(uIPriority139);
            style140.Append(unhideWhenUsed11);
            style140.Append(rsid136);
            style140.Append(styleParagraphProperties141);

            Style style141 = new Style() { Type = StyleValues.Paragraph, StyleId = "TOC3" };
            StyleName styleName141 = new StyleName() { Val = "toc 3" };
            BasedOn basedOn136 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle13 = new NextParagraphStyle() { Val = "Normal" };
            AutoRedefine autoRedefine3 = new AutoRedefine();
            UIPriority uIPriority140 = new UIPriority() { Val = 39 };
            UnhideWhenUsed unhideWhenUsed12 = new UnhideWhenUsed();
            Rsid rsid137 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties142 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines129 = new SpacingBetweenLines() { After = "100" };
            Indentation indentation9 = new Indentation() { Start = "440" };

            styleParagraphProperties142.Append(spacingBetweenLines129);
            styleParagraphProperties142.Append(indentation9);

            style141.Append(styleName141);
            style141.Append(basedOn136);
            style141.Append(nextParagraphStyle13);
            style141.Append(autoRedefine3);
            style141.Append(uIPriority140);
            style141.Append(unhideWhenUsed12);
            style141.Append(rsid137);
            style141.Append(styleParagraphProperties142);

            Style style142 = new Style() { Type = StyleValues.Paragraph, StyleId = "Header" };
            StyleName styleName142 = new StyleName() { Val = "header" };
            BasedOn basedOn137 = new BasedOn() { Val = "Normal" };
            LinkedStyle linkedStyle19 = new LinkedStyle() { Val = "HeaderChar" };
            UIPriority uIPriority141 = new UIPriority() { Val = 99 };
            UnhideWhenUsed unhideWhenUsed13 = new UnhideWhenUsed();
            Rsid rsid138 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties143 = new StyleParagraphProperties();

            Tabs tabs13 = new Tabs();
            TabStop tabStop13 = new TabStop() { Val = TabStopValues.Center, Position = 4680 };
            TabStop tabStop14 = new TabStop() { Val = TabStopValues.Right, Position = 9360 };

            tabs13.Append(tabStop13);
            tabs13.Append(tabStop14);
            SpacingBetweenLines spacingBetweenLines130 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties143.Append(tabs13);
            styleParagraphProperties143.Append(spacingBetweenLines130);

            style142.Append(styleName142);
            style142.Append(basedOn137);
            style142.Append(linkedStyle19);
            style142.Append(uIPriority141);
            style142.Append(unhideWhenUsed13);
            style142.Append(rsid138);
            style142.Append(styleParagraphProperties143);

            Style style143 = new Style() { Type = StyleValues.Character, StyleId = "HeaderChar", CustomStyle = true };
            StyleName styleName143 = new StyleName() { Val = "Header Char" };
            BasedOn basedOn138 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle20 = new LinkedStyle() { Val = "Header" };
            UIPriority uIPriority142 = new UIPriority() { Val = 99 };
            Rsid rsid139 = new Rsid() { Val = "005F6BB9" };

            style143.Append(styleName143);
            style143.Append(basedOn138);
            style143.Append(linkedStyle20);
            style143.Append(uIPriority142);
            style143.Append(rsid139);

            Style style144 = new Style() { Type = StyleValues.Paragraph, StyleId = "Footer" };
            StyleName styleName144 = new StyleName() { Val = "footer" };
            BasedOn basedOn139 = new BasedOn() { Val = "Normal" };
            LinkedStyle linkedStyle21 = new LinkedStyle() { Val = "FooterChar" };
            UIPriority uIPriority143 = new UIPriority() { Val = 99 };
            UnhideWhenUsed unhideWhenUsed14 = new UnhideWhenUsed();
            Rsid rsid140 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties144 = new StyleParagraphProperties();

            Tabs tabs14 = new Tabs();
            TabStop tabStop15 = new TabStop() { Val = TabStopValues.Center, Position = 4680 };
            TabStop tabStop16 = new TabStop() { Val = TabStopValues.Right, Position = 9360 };

            tabs14.Append(tabStop15);
            tabs14.Append(tabStop16);
            SpacingBetweenLines spacingBetweenLines131 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties144.Append(tabs14);
            styleParagraphProperties144.Append(spacingBetweenLines131);

            style144.Append(styleName144);
            style144.Append(basedOn139);
            style144.Append(linkedStyle21);
            style144.Append(uIPriority143);
            style144.Append(unhideWhenUsed14);
            style144.Append(rsid140);
            style144.Append(styleParagraphProperties144);

            Style style145 = new Style() { Type = StyleValues.Character, StyleId = "FooterChar", CustomStyle = true };
            StyleName styleName145 = new StyleName() { Val = "Footer Char" };
            BasedOn basedOn140 = new BasedOn() { Val = "DefaultParagraphFont" };
            LinkedStyle linkedStyle22 = new LinkedStyle() { Val = "Footer" };
            UIPriority uIPriority144 = new UIPriority() { Val = 99 };
            Rsid rsid141 = new Rsid() { Val = "005F6BB9" };

            style145.Append(styleName145);
            style145.Append(basedOn140);
            style145.Append(linkedStyle22);
            style145.Append(uIPriority144);
            style145.Append(rsid141);

            Style style146 = new Style() { Type = StyleValues.Paragraph, StyleId = "Caption" };
            StyleName styleName146 = new StyleName() { Val = "caption" };
            BasedOn basedOn141 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle14 = new NextParagraphStyle() { Val = "Normal" };
            UIPriority uIPriority145 = new UIPriority() { Val = 35 };
            UnhideWhenUsed unhideWhenUsed15 = new UnhideWhenUsed();
            PrimaryStyle primaryStyle21 = new PrimaryStyle();
            Rsid rsid142 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties145 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines132 = new SpacingBetweenLines() { After = "200", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            styleParagraphProperties145.Append(spacingBetweenLines132);

            StyleRunProperties styleRunProperties63 = new StyleRunProperties();
            Italic italic73 = new Italic();
            ItalicComplexScript italicComplexScript71 = new ItalicComplexScript();
            Color color115 = new Color() { Val = "44546A", ThemeColor = ThemeColorValues.Text2 };
            FontSize fontSize96 = new FontSize() { Val = "18" };
            FontSizeComplexScript fontSizeComplexScript64 = new FontSizeComplexScript() { Val = "18" };

            styleRunProperties63.Append(italic73);
            styleRunProperties63.Append(italicComplexScript71);
            styleRunProperties63.Append(color115);
            styleRunProperties63.Append(fontSize96);
            styleRunProperties63.Append(fontSizeComplexScript64);

            style146.Append(styleName146);
            style146.Append(basedOn141);
            style146.Append(nextParagraphStyle14);
            style146.Append(uIPriority145);
            style146.Append(unhideWhenUsed15);
            style146.Append(primaryStyle21);
            style146.Append(rsid142);
            style146.Append(styleParagraphProperties145);
            style146.Append(styleRunProperties63);

            Style style147 = new Style() { Type = StyleValues.Paragraph, StyleId = "TableofFigures" };
            StyleName styleName147 = new StyleName() { Val = "table of figures" };
            BasedOn basedOn142 = new BasedOn() { Val = "Normal" };
            NextParagraphStyle nextParagraphStyle15 = new NextParagraphStyle() { Val = "Normal" };
            UIPriority uIPriority146 = new UIPriority() { Val = 99 };
            UnhideWhenUsed unhideWhenUsed16 = new UnhideWhenUsed();
            Rsid rsid143 = new Rsid() { Val = "005F6BB9" };

            StyleParagraphProperties styleParagraphProperties146 = new StyleParagraphProperties();
            SpacingBetweenLines spacingBetweenLines133 = new SpacingBetweenLines() { After = "0" };

            styleParagraphProperties146.Append(spacingBetweenLines133);

            style147.Append(styleName147);
            style147.Append(basedOn142);
            style147.Append(nextParagraphStyle15);
            style147.Append(uIPriority146);
            style147.Append(unhideWhenUsed16);
            style147.Append(rsid143);
            style147.Append(styleParagraphProperties146);

            styles1.Append(docDefaults1);
            styles1.Append(latentStyles1);
            styles1.Append(style1);
            styles1.Append(style2);
            styles1.Append(style3);
            styles1.Append(style4);
            styles1.Append(style5);
            styles1.Append(style6);
            styles1.Append(style7);
            styles1.Append(style8);
            styles1.Append(style9);
            styles1.Append(style10);
            styles1.Append(style11);
            styles1.Append(style12);
            styles1.Append(style13);
            styles1.Append(style14);
            styles1.Append(style15);
            styles1.Append(style16);
            styles1.Append(style17);
            styles1.Append(style18);
            styles1.Append(style19);
            styles1.Append(style20);
            styles1.Append(style21);
            styles1.Append(style22);
            styles1.Append(style23);
            styles1.Append(style24);
            styles1.Append(style25);
            styles1.Append(style26);
            styles1.Append(style27);
            styles1.Append(style28);
            styles1.Append(style29);
            styles1.Append(style30);
            styles1.Append(style31);
            styles1.Append(style32);
            styles1.Append(style33);
            styles1.Append(style34);
            styles1.Append(style35);
            styles1.Append(style36);
            styles1.Append(style37);
            styles1.Append(style38);
            styles1.Append(style39);
            styles1.Append(style40);
            styles1.Append(style41);
            styles1.Append(style42);
            styles1.Append(style43);
            styles1.Append(style44);
            styles1.Append(style45);
            styles1.Append(style46);
            styles1.Append(style47);
            styles1.Append(style48);
            styles1.Append(style49);
            styles1.Append(style50);
            styles1.Append(style51);
            styles1.Append(style52);
            styles1.Append(style53);
            styles1.Append(style54);
            styles1.Append(style55);
            styles1.Append(style56);
            styles1.Append(style57);
            styles1.Append(style58);
            styles1.Append(style59);
            styles1.Append(style60);
            styles1.Append(style61);
            styles1.Append(style62);
            styles1.Append(style63);
            styles1.Append(style64);
            styles1.Append(style65);
            styles1.Append(style66);
            styles1.Append(style67);
            styles1.Append(style68);
            styles1.Append(style69);
            styles1.Append(style70);
            styles1.Append(style71);
            styles1.Append(style72);
            styles1.Append(style73);
            styles1.Append(style74);
            styles1.Append(style75);
            styles1.Append(style76);
            styles1.Append(style77);
            styles1.Append(style78);
            styles1.Append(style79);
            styles1.Append(style80);
            styles1.Append(style81);
            styles1.Append(style82);
            styles1.Append(style83);
            styles1.Append(style84);
            styles1.Append(style85);
            styles1.Append(style86);
            styles1.Append(style87);
            styles1.Append(style88);
            styles1.Append(style89);
            styles1.Append(style90);
            styles1.Append(style91);
            styles1.Append(style92);
            styles1.Append(style93);
            styles1.Append(style94);
            styles1.Append(style95);
            styles1.Append(style96);
            styles1.Append(style97);
            styles1.Append(style98);
            styles1.Append(style99);
            styles1.Append(style100);
            styles1.Append(style101);
            styles1.Append(style102);
            styles1.Append(style103);
            styles1.Append(style104);
            styles1.Append(style105);
            styles1.Append(style106);
            styles1.Append(style107);
            styles1.Append(style108);
            styles1.Append(style109);
            styles1.Append(style110);
            styles1.Append(style111);
            styles1.Append(style112);
            styles1.Append(style113);
            styles1.Append(style114);
            styles1.Append(style115);
            styles1.Append(style116);
            styles1.Append(style117);
            styles1.Append(style118);
            styles1.Append(style119);
            styles1.Append(style120);
            styles1.Append(style121);
            styles1.Append(style122);
            styles1.Append(style123);
            styles1.Append(style124);
            styles1.Append(style125);
            styles1.Append(style126);
            styles1.Append(style127);
            styles1.Append(style128);
            styles1.Append(style129);
            styles1.Append(style130);
            styles1.Append(style131);
            styles1.Append(style132);
            styles1.Append(style133);
            styles1.Append(style134);
            styles1.Append(style135);
            styles1.Append(style136);
            styles1.Append(style137);
            styles1.Append(style138);
            styles1.Append(style139);
            styles1.Append(style140);
            styles1.Append(style141);
            styles1.Append(style142);
            styles1.Append(style143);
            styles1.Append(style144);
            styles1.Append(style145);
            styles1.Append(style146);
            styles1.Append(style147);

            styleDefinitionsPart1.Styles = styles1;
        }

        // Generates content of endnotesPart1.
        public void GenerateEndnotesPart1Content(EndnotesPart endnotesPart1)
        {
            Endnotes endnotes1 = new Endnotes() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15 wp14" } };
            endnotes1.AddNamespaceDeclaration("wpc", "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas");
            endnotes1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            endnotes1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            endnotes1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            endnotes1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            endnotes1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            endnotes1.AddNamespaceDeclaration("wp14", "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
            endnotes1.AddNamespaceDeclaration("wp", "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
            endnotes1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            endnotes1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            endnotes1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            endnotes1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            endnotes1.AddNamespaceDeclaration("wpg", "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup");
            endnotes1.AddNamespaceDeclaration("wpi", "http://schemas.microsoft.com/office/word/2010/wordprocessingInk");
            endnotes1.AddNamespaceDeclaration("wne", "http://schemas.microsoft.com/office/word/2006/wordml");
            endnotes1.AddNamespaceDeclaration("wps", "http://schemas.microsoft.com/office/word/2010/wordprocessingShape");

            Endnote endnote1 = new Endnote() { Type = FootnoteEndnoteValues.Separator, Id = -1 };

            Paragraph paragraph1244 = new Paragraph() { RsidParagraphAddition = "004F69D2", RsidParagraphProperties = "005F6BB9", RsidRunAdditionDefault = "004F69D2" };

            ParagraphProperties paragraphProperties699 = new ParagraphProperties();
            SpacingBetweenLines spacingBetweenLines134 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            paragraphProperties699.Append(spacingBetweenLines134);

            Run run334 = new Run();
            SeparatorMark separatorMark1 = new SeparatorMark();

            run334.Append(separatorMark1);

            paragraph1244.Append(paragraphProperties699);
            paragraph1244.Append(run334);

            endnote1.Append(paragraph1244);

            Endnote endnote2 = new Endnote() { Type = FootnoteEndnoteValues.ContinuationSeparator, Id = 0 };

            Paragraph paragraph1245 = new Paragraph() { RsidParagraphAddition = "004F69D2", RsidParagraphProperties = "005F6BB9", RsidRunAdditionDefault = "004F69D2" };

            ParagraphProperties paragraphProperties700 = new ParagraphProperties();
            SpacingBetweenLines spacingBetweenLines135 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            paragraphProperties700.Append(spacingBetweenLines135);

            Run run335 = new Run();
            ContinuationSeparatorMark continuationSeparatorMark1 = new ContinuationSeparatorMark();

            run335.Append(continuationSeparatorMark1);

            paragraph1245.Append(paragraphProperties700);
            paragraph1245.Append(run335);

            endnote2.Append(paragraph1245);

            endnotes1.Append(endnote1);
            endnotes1.Append(endnote2);

            endnotesPart1.Endnotes = endnotes1;
        }

        // Generates content of footerPart1.
        public void GenerateFooterPart1Content(FooterPart footerPart1)
        {
            Footer footer1 = new Footer() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15 wp14" } };
            footer1.AddNamespaceDeclaration("wpc", "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas");
            footer1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            footer1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            footer1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            footer1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            footer1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            footer1.AddNamespaceDeclaration("wp14", "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
            footer1.AddNamespaceDeclaration("wp", "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
            footer1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            footer1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            footer1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            footer1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            footer1.AddNamespaceDeclaration("wpg", "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup");
            footer1.AddNamespaceDeclaration("wpi", "http://schemas.microsoft.com/office/word/2010/wordprocessingInk");
            footer1.AddNamespaceDeclaration("wne", "http://schemas.microsoft.com/office/word/2006/wordml");
            footer1.AddNamespaceDeclaration("wps", "http://schemas.microsoft.com/office/word/2010/wordprocessingShape");

            Paragraph paragraph1246 = new Paragraph() { RsidParagraphAddition = "005F6BB9", RsidRunAdditionDefault = "005F6BB9" };

            ParagraphProperties paragraphProperties701 = new ParagraphProperties();
            ParagraphStyleId paragraphStyleId34 = new ParagraphStyleId() { Val = "Footer" };

            paragraphProperties701.Append(paragraphStyleId34);

            Run run336 = new Run();
            Text text261 = new Text();
            text261.Text = "Footer";

            run336.Append(text261);

            paragraph1246.Append(paragraphProperties701);
            paragraph1246.Append(run336);

            Paragraph paragraph1247 = new Paragraph() { RsidParagraphAddition = "005F6BB9", RsidRunAdditionDefault = "005F6BB9" };

            ParagraphProperties paragraphProperties702 = new ParagraphProperties();
            ParagraphStyleId paragraphStyleId35 = new ParagraphStyleId() { Val = "Footer" };

            paragraphProperties702.Append(paragraphStyleId35);

            paragraph1247.Append(paragraphProperties702);

            footer1.Append(paragraph1246);
            footer1.Append(paragraph1247);

            footerPart1.Footer = footer1;
        }

        // Generates content of numberingDefinitionsPart1.
        public void GenerateNumberingDefinitionsPart1Content(NumberingDefinitionsPart numberingDefinitionsPart1)
        {
            Numbering numbering1 = new Numbering() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15 wp14" } };
            numbering1.AddNamespaceDeclaration("wpc", "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas");
            numbering1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            numbering1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            numbering1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            numbering1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            numbering1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            numbering1.AddNamespaceDeclaration("wp14", "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
            numbering1.AddNamespaceDeclaration("wp", "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
            numbering1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            numbering1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            numbering1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            numbering1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            numbering1.AddNamespaceDeclaration("wpg", "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup");
            numbering1.AddNamespaceDeclaration("wpi", "http://schemas.microsoft.com/office/word/2010/wordprocessingInk");
            numbering1.AddNamespaceDeclaration("wne", "http://schemas.microsoft.com/office/word/2006/wordml");
            numbering1.AddNamespaceDeclaration("wps", "http://schemas.microsoft.com/office/word/2010/wordprocessingShape");

            AbstractNum abstractNum1 = new AbstractNum() { AbstractNumberId = 0 };
            Nsid nsid1 = new Nsid() { Val = "28AC0DE6" };
            MultiLevelType multiLevelType1 = new MultiLevelType() { Val = MultiLevelValues.HybridMultilevel };
            TemplateCode templateCode1 = new TemplateCode() { Val = "D7125AC6" };

            Level level1 = new Level() { LevelIndex = 0, TemplateCode = "10090001" };
            StartNumberingValue startNumberingValue1 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat1 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText1 = new LevelText() { Val = "·" };
            LevelJustification levelJustification1 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties1 = new PreviousParagraphProperties();
            Indentation indentation10 = new Indentation() { Start = "720", Hanging = "360" };

            previousParagraphProperties1.Append(indentation10);

            NumberingSymbolRunProperties numberingSymbolRunProperties1 = new NumberingSymbolRunProperties();
            RunFonts runFonts106 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Symbol", HighAnsi = "Symbol" };

            numberingSymbolRunProperties1.Append(runFonts106);

            level1.Append(startNumberingValue1);
            level1.Append(numberingFormat1);
            level1.Append(levelText1);
            level1.Append(levelJustification1);
            level1.Append(previousParagraphProperties1);
            level1.Append(numberingSymbolRunProperties1);

            Level level2 = new Level() { LevelIndex = 1, TemplateCode = "10090003", Tentative = true };
            StartNumberingValue startNumberingValue2 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat2 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText2 = new LevelText() { Val = "o" };
            LevelJustification levelJustification2 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties2 = new PreviousParagraphProperties();
            Indentation indentation11 = new Indentation() { Start = "1440", Hanging = "360" };

            previousParagraphProperties2.Append(indentation11);

            NumberingSymbolRunProperties numberingSymbolRunProperties2 = new NumberingSymbolRunProperties();
            RunFonts runFonts107 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Courier New", HighAnsi = "Courier New", ComplexScript = "Courier New" };

            numberingSymbolRunProperties2.Append(runFonts107);

            level2.Append(startNumberingValue2);
            level2.Append(numberingFormat2);
            level2.Append(levelText2);
            level2.Append(levelJustification2);
            level2.Append(previousParagraphProperties2);
            level2.Append(numberingSymbolRunProperties2);

            Level level3 = new Level() { LevelIndex = 2, TemplateCode = "10090005", Tentative = true };
            StartNumberingValue startNumberingValue3 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat3 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText3 = new LevelText() { Val = "§" };
            LevelJustification levelJustification3 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties3 = new PreviousParagraphProperties();
            Indentation indentation12 = new Indentation() { Start = "2160", Hanging = "360" };

            previousParagraphProperties3.Append(indentation12);

            NumberingSymbolRunProperties numberingSymbolRunProperties3 = new NumberingSymbolRunProperties();
            RunFonts runFonts108 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Wingdings", HighAnsi = "Wingdings" };

            numberingSymbolRunProperties3.Append(runFonts108);

            level3.Append(startNumberingValue3);
            level3.Append(numberingFormat3);
            level3.Append(levelText3);
            level3.Append(levelJustification3);
            level3.Append(previousParagraphProperties3);
            level3.Append(numberingSymbolRunProperties3);

            Level level4 = new Level() { LevelIndex = 3, TemplateCode = "10090001", Tentative = true };
            StartNumberingValue startNumberingValue4 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat4 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText4 = new LevelText() { Val = "·" };
            LevelJustification levelJustification4 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties4 = new PreviousParagraphProperties();
            Indentation indentation13 = new Indentation() { Start = "2880", Hanging = "360" };

            previousParagraphProperties4.Append(indentation13);

            NumberingSymbolRunProperties numberingSymbolRunProperties4 = new NumberingSymbolRunProperties();
            RunFonts runFonts109 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Symbol", HighAnsi = "Symbol" };

            numberingSymbolRunProperties4.Append(runFonts109);

            level4.Append(startNumberingValue4);
            level4.Append(numberingFormat4);
            level4.Append(levelText4);
            level4.Append(levelJustification4);
            level4.Append(previousParagraphProperties4);
            level4.Append(numberingSymbolRunProperties4);

            Level level5 = new Level() { LevelIndex = 4, TemplateCode = "10090003", Tentative = true };
            StartNumberingValue startNumberingValue5 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat5 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText5 = new LevelText() { Val = "o" };
            LevelJustification levelJustification5 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties5 = new PreviousParagraphProperties();
            Indentation indentation14 = new Indentation() { Start = "3600", Hanging = "360" };

            previousParagraphProperties5.Append(indentation14);

            NumberingSymbolRunProperties numberingSymbolRunProperties5 = new NumberingSymbolRunProperties();
            RunFonts runFonts110 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Courier New", HighAnsi = "Courier New", ComplexScript = "Courier New" };

            numberingSymbolRunProperties5.Append(runFonts110);

            level5.Append(startNumberingValue5);
            level5.Append(numberingFormat5);
            level5.Append(levelText5);
            level5.Append(levelJustification5);
            level5.Append(previousParagraphProperties5);
            level5.Append(numberingSymbolRunProperties5);

            Level level6 = new Level() { LevelIndex = 5, TemplateCode = "10090005", Tentative = true };
            StartNumberingValue startNumberingValue6 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat6 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText6 = new LevelText() { Val = "§" };
            LevelJustification levelJustification6 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties6 = new PreviousParagraphProperties();
            Indentation indentation15 = new Indentation() { Start = "4320", Hanging = "360" };

            previousParagraphProperties6.Append(indentation15);

            NumberingSymbolRunProperties numberingSymbolRunProperties6 = new NumberingSymbolRunProperties();
            RunFonts runFonts111 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Wingdings", HighAnsi = "Wingdings" };

            numberingSymbolRunProperties6.Append(runFonts111);

            level6.Append(startNumberingValue6);
            level6.Append(numberingFormat6);
            level6.Append(levelText6);
            level6.Append(levelJustification6);
            level6.Append(previousParagraphProperties6);
            level6.Append(numberingSymbolRunProperties6);

            Level level7 = new Level() { LevelIndex = 6, TemplateCode = "10090001", Tentative = true };
            StartNumberingValue startNumberingValue7 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat7 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText7 = new LevelText() { Val = "·" };
            LevelJustification levelJustification7 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties7 = new PreviousParagraphProperties();
            Indentation indentation16 = new Indentation() { Start = "5040", Hanging = "360" };

            previousParagraphProperties7.Append(indentation16);

            NumberingSymbolRunProperties numberingSymbolRunProperties7 = new NumberingSymbolRunProperties();
            RunFonts runFonts112 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Symbol", HighAnsi = "Symbol" };

            numberingSymbolRunProperties7.Append(runFonts112);

            level7.Append(startNumberingValue7);
            level7.Append(numberingFormat7);
            level7.Append(levelText7);
            level7.Append(levelJustification7);
            level7.Append(previousParagraphProperties7);
            level7.Append(numberingSymbolRunProperties7);

            Level level8 = new Level() { LevelIndex = 7, TemplateCode = "10090003", Tentative = true };
            StartNumberingValue startNumberingValue8 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat8 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText8 = new LevelText() { Val = "o" };
            LevelJustification levelJustification8 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties8 = new PreviousParagraphProperties();
            Indentation indentation17 = new Indentation() { Start = "5760", Hanging = "360" };

            previousParagraphProperties8.Append(indentation17);

            NumberingSymbolRunProperties numberingSymbolRunProperties8 = new NumberingSymbolRunProperties();
            RunFonts runFonts113 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Courier New", HighAnsi = "Courier New", ComplexScript = "Courier New" };

            numberingSymbolRunProperties8.Append(runFonts113);

            level8.Append(startNumberingValue8);
            level8.Append(numberingFormat8);
            level8.Append(levelText8);
            level8.Append(levelJustification8);
            level8.Append(previousParagraphProperties8);
            level8.Append(numberingSymbolRunProperties8);

            Level level9 = new Level() { LevelIndex = 8, TemplateCode = "10090005", Tentative = true };
            StartNumberingValue startNumberingValue9 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat9 = new NumberingFormat() { Val = NumberFormatValues.Bullet };
            LevelText levelText9 = new LevelText() { Val = "§" };
            LevelJustification levelJustification9 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties9 = new PreviousParagraphProperties();
            Indentation indentation18 = new Indentation() { Start = "6480", Hanging = "360" };

            previousParagraphProperties9.Append(indentation18);

            NumberingSymbolRunProperties numberingSymbolRunProperties9 = new NumberingSymbolRunProperties();
            RunFonts runFonts114 = new RunFonts() { Hint = FontTypeHintValues.Default, Ascii = "Wingdings", HighAnsi = "Wingdings" };

            numberingSymbolRunProperties9.Append(runFonts114);

            level9.Append(startNumberingValue9);
            level9.Append(numberingFormat9);
            level9.Append(levelText9);
            level9.Append(levelJustification9);
            level9.Append(previousParagraphProperties9);
            level9.Append(numberingSymbolRunProperties9);

            abstractNum1.Append(nsid1);
            abstractNum1.Append(multiLevelType1);
            abstractNum1.Append(templateCode1);
            abstractNum1.Append(level1);
            abstractNum1.Append(level2);
            abstractNum1.Append(level3);
            abstractNum1.Append(level4);
            abstractNum1.Append(level5);
            abstractNum1.Append(level6);
            abstractNum1.Append(level7);
            abstractNum1.Append(level8);
            abstractNum1.Append(level9);

            AbstractNum abstractNum2 = new AbstractNum() { AbstractNumberId = 1 };
            Nsid nsid2 = new Nsid() { Val = "46A27300" };
            MultiLevelType multiLevelType2 = new MultiLevelType() { Val = MultiLevelValues.HybridMultilevel };
            TemplateCode templateCode2 = new TemplateCode() { Val = "1EBEE24A" };

            Level level10 = new Level() { LevelIndex = 0, TemplateCode = "1009000F" };
            StartNumberingValue startNumberingValue10 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat10 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText10 = new LevelText() { Val = "%1." };
            LevelJustification levelJustification10 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties10 = new PreviousParagraphProperties();
            Indentation indentation19 = new Indentation() { Start = "720", Hanging = "360" };

            previousParagraphProperties10.Append(indentation19);

            level10.Append(startNumberingValue10);
            level10.Append(numberingFormat10);
            level10.Append(levelText10);
            level10.Append(levelJustification10);
            level10.Append(previousParagraphProperties10);

            Level level11 = new Level() { LevelIndex = 1, TemplateCode = "10090019" };
            StartNumberingValue startNumberingValue11 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat11 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText11 = new LevelText() { Val = "%2." };
            LevelJustification levelJustification11 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties11 = new PreviousParagraphProperties();
            Indentation indentation20 = new Indentation() { Start = "1440", Hanging = "360" };

            previousParagraphProperties11.Append(indentation20);

            level11.Append(startNumberingValue11);
            level11.Append(numberingFormat11);
            level11.Append(levelText11);
            level11.Append(levelJustification11);
            level11.Append(previousParagraphProperties11);

            Level level12 = new Level() { LevelIndex = 2, TemplateCode = "1009001B" };
            StartNumberingValue startNumberingValue12 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat12 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText12 = new LevelText() { Val = "%3." };
            LevelJustification levelJustification12 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties12 = new PreviousParagraphProperties();
            Indentation indentation21 = new Indentation() { Start = "2160", Hanging = "180" };

            previousParagraphProperties12.Append(indentation21);

            level12.Append(startNumberingValue12);
            level12.Append(numberingFormat12);
            level12.Append(levelText12);
            level12.Append(levelJustification12);
            level12.Append(previousParagraphProperties12);

            Level level13 = new Level() { LevelIndex = 3, TemplateCode = "1009000F", Tentative = true };
            StartNumberingValue startNumberingValue13 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat13 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText13 = new LevelText() { Val = "%4." };
            LevelJustification levelJustification13 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties13 = new PreviousParagraphProperties();
            Indentation indentation22 = new Indentation() { Start = "2880", Hanging = "360" };

            previousParagraphProperties13.Append(indentation22);

            level13.Append(startNumberingValue13);
            level13.Append(numberingFormat13);
            level13.Append(levelText13);
            level13.Append(levelJustification13);
            level13.Append(previousParagraphProperties13);

            Level level14 = new Level() { LevelIndex = 4, TemplateCode = "10090019", Tentative = true };
            StartNumberingValue startNumberingValue14 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat14 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText14 = new LevelText() { Val = "%5." };
            LevelJustification levelJustification14 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties14 = new PreviousParagraphProperties();
            Indentation indentation23 = new Indentation() { Start = "3600", Hanging = "360" };

            previousParagraphProperties14.Append(indentation23);

            level14.Append(startNumberingValue14);
            level14.Append(numberingFormat14);
            level14.Append(levelText14);
            level14.Append(levelJustification14);
            level14.Append(previousParagraphProperties14);

            Level level15 = new Level() { LevelIndex = 5, TemplateCode = "1009001B", Tentative = true };
            StartNumberingValue startNumberingValue15 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat15 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText15 = new LevelText() { Val = "%6." };
            LevelJustification levelJustification15 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties15 = new PreviousParagraphProperties();
            Indentation indentation24 = new Indentation() { Start = "4320", Hanging = "180" };

            previousParagraphProperties15.Append(indentation24);

            level15.Append(startNumberingValue15);
            level15.Append(numberingFormat15);
            level15.Append(levelText15);
            level15.Append(levelJustification15);
            level15.Append(previousParagraphProperties15);

            Level level16 = new Level() { LevelIndex = 6, TemplateCode = "1009000F", Tentative = true };
            StartNumberingValue startNumberingValue16 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat16 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText16 = new LevelText() { Val = "%7." };
            LevelJustification levelJustification16 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties16 = new PreviousParagraphProperties();
            Indentation indentation25 = new Indentation() { Start = "5040", Hanging = "360" };

            previousParagraphProperties16.Append(indentation25);

            level16.Append(startNumberingValue16);
            level16.Append(numberingFormat16);
            level16.Append(levelText16);
            level16.Append(levelJustification16);
            level16.Append(previousParagraphProperties16);

            Level level17 = new Level() { LevelIndex = 7, TemplateCode = "10090019", Tentative = true };
            StartNumberingValue startNumberingValue17 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat17 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText17 = new LevelText() { Val = "%8." };
            LevelJustification levelJustification17 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties17 = new PreviousParagraphProperties();
            Indentation indentation26 = new Indentation() { Start = "5760", Hanging = "360" };

            previousParagraphProperties17.Append(indentation26);

            level17.Append(startNumberingValue17);
            level17.Append(numberingFormat17);
            level17.Append(levelText17);
            level17.Append(levelJustification17);
            level17.Append(previousParagraphProperties17);

            Level level18 = new Level() { LevelIndex = 8, TemplateCode = "1009001B", Tentative = true };
            StartNumberingValue startNumberingValue18 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat18 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText18 = new LevelText() { Val = "%9." };
            LevelJustification levelJustification18 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties18 = new PreviousParagraphProperties();
            Indentation indentation27 = new Indentation() { Start = "6480", Hanging = "180" };

            previousParagraphProperties18.Append(indentation27);

            level18.Append(startNumberingValue18);
            level18.Append(numberingFormat18);
            level18.Append(levelText18);
            level18.Append(levelJustification18);
            level18.Append(previousParagraphProperties18);

            abstractNum2.Append(nsid2);
            abstractNum2.Append(multiLevelType2);
            abstractNum2.Append(templateCode2);
            abstractNum2.Append(level10);
            abstractNum2.Append(level11);
            abstractNum2.Append(level12);
            abstractNum2.Append(level13);
            abstractNum2.Append(level14);
            abstractNum2.Append(level15);
            abstractNum2.Append(level16);
            abstractNum2.Append(level17);
            abstractNum2.Append(level18);

            AbstractNum abstractNum3 = new AbstractNum() { AbstractNumberId = 2 };
            Nsid nsid3 = new Nsid() { Val = "7BB948EF" };
            MultiLevelType multiLevelType3 = new MultiLevelType() { Val = MultiLevelValues.HybridMultilevel };
            TemplateCode templateCode3 = new TemplateCode() { Val = "7630B096" };

            Level level19 = new Level() { LevelIndex = 0, TemplateCode = "1009000F" };
            StartNumberingValue startNumberingValue19 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat19 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText19 = new LevelText() { Val = "%1." };
            LevelJustification levelJustification19 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties19 = new PreviousParagraphProperties();
            Indentation indentation28 = new Indentation() { Start = "720", Hanging = "360" };

            previousParagraphProperties19.Append(indentation28);

            level19.Append(startNumberingValue19);
            level19.Append(numberingFormat19);
            level19.Append(levelText19);
            level19.Append(levelJustification19);
            level19.Append(previousParagraphProperties19);

            Level level20 = new Level() { LevelIndex = 1, TemplateCode = "10090019", Tentative = true };
            StartNumberingValue startNumberingValue20 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat20 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText20 = new LevelText() { Val = "%2." };
            LevelJustification levelJustification20 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties20 = new PreviousParagraphProperties();
            Indentation indentation29 = new Indentation() { Start = "1440", Hanging = "360" };

            previousParagraphProperties20.Append(indentation29);

            level20.Append(startNumberingValue20);
            level20.Append(numberingFormat20);
            level20.Append(levelText20);
            level20.Append(levelJustification20);
            level20.Append(previousParagraphProperties20);

            Level level21 = new Level() { LevelIndex = 2, TemplateCode = "1009001B", Tentative = true };
            StartNumberingValue startNumberingValue21 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat21 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText21 = new LevelText() { Val = "%3." };
            LevelJustification levelJustification21 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties21 = new PreviousParagraphProperties();
            Indentation indentation30 = new Indentation() { Start = "2160", Hanging = "180" };

            previousParagraphProperties21.Append(indentation30);

            level21.Append(startNumberingValue21);
            level21.Append(numberingFormat21);
            level21.Append(levelText21);
            level21.Append(levelJustification21);
            level21.Append(previousParagraphProperties21);

            Level level22 = new Level() { LevelIndex = 3, TemplateCode = "1009000F", Tentative = true };
            StartNumberingValue startNumberingValue22 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat22 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText22 = new LevelText() { Val = "%4." };
            LevelJustification levelJustification22 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties22 = new PreviousParagraphProperties();
            Indentation indentation31 = new Indentation() { Start = "2880", Hanging = "360" };

            previousParagraphProperties22.Append(indentation31);

            level22.Append(startNumberingValue22);
            level22.Append(numberingFormat22);
            level22.Append(levelText22);
            level22.Append(levelJustification22);
            level22.Append(previousParagraphProperties22);

            Level level23 = new Level() { LevelIndex = 4, TemplateCode = "10090019", Tentative = true };
            StartNumberingValue startNumberingValue23 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat23 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText23 = new LevelText() { Val = "%5." };
            LevelJustification levelJustification23 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties23 = new PreviousParagraphProperties();
            Indentation indentation32 = new Indentation() { Start = "3600", Hanging = "360" };

            previousParagraphProperties23.Append(indentation32);

            level23.Append(startNumberingValue23);
            level23.Append(numberingFormat23);
            level23.Append(levelText23);
            level23.Append(levelJustification23);
            level23.Append(previousParagraphProperties23);

            Level level24 = new Level() { LevelIndex = 5, TemplateCode = "1009001B", Tentative = true };
            StartNumberingValue startNumberingValue24 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat24 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText24 = new LevelText() { Val = "%6." };
            LevelJustification levelJustification24 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties24 = new PreviousParagraphProperties();
            Indentation indentation33 = new Indentation() { Start = "4320", Hanging = "180" };

            previousParagraphProperties24.Append(indentation33);

            level24.Append(startNumberingValue24);
            level24.Append(numberingFormat24);
            level24.Append(levelText24);
            level24.Append(levelJustification24);
            level24.Append(previousParagraphProperties24);

            Level level25 = new Level() { LevelIndex = 6, TemplateCode = "1009000F", Tentative = true };
            StartNumberingValue startNumberingValue25 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat25 = new NumberingFormat() { Val = NumberFormatValues.Decimal };
            LevelText levelText25 = new LevelText() { Val = "%7." };
            LevelJustification levelJustification25 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties25 = new PreviousParagraphProperties();
            Indentation indentation34 = new Indentation() { Start = "5040", Hanging = "360" };

            previousParagraphProperties25.Append(indentation34);

            level25.Append(startNumberingValue25);
            level25.Append(numberingFormat25);
            level25.Append(levelText25);
            level25.Append(levelJustification25);
            level25.Append(previousParagraphProperties25);

            Level level26 = new Level() { LevelIndex = 7, TemplateCode = "10090019", Tentative = true };
            StartNumberingValue startNumberingValue26 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat26 = new NumberingFormat() { Val = NumberFormatValues.LowerLetter };
            LevelText levelText26 = new LevelText() { Val = "%8." };
            LevelJustification levelJustification26 = new LevelJustification() { Val = LevelJustificationValues.Left };

            PreviousParagraphProperties previousParagraphProperties26 = new PreviousParagraphProperties();
            Indentation indentation35 = new Indentation() { Start = "5760", Hanging = "360" };

            previousParagraphProperties26.Append(indentation35);

            level26.Append(startNumberingValue26);
            level26.Append(numberingFormat26);
            level26.Append(levelText26);
            level26.Append(levelJustification26);
            level26.Append(previousParagraphProperties26);

            Level level27 = new Level() { LevelIndex = 8, TemplateCode = "1009001B", Tentative = true };
            StartNumberingValue startNumberingValue27 = new StartNumberingValue() { Val = 1 };
            NumberingFormat numberingFormat27 = new NumberingFormat() { Val = NumberFormatValues.LowerRoman };
            LevelText levelText27 = new LevelText() { Val = "%9." };
            LevelJustification levelJustification27 = new LevelJustification() { Val = LevelJustificationValues.Right };

            PreviousParagraphProperties previousParagraphProperties27 = new PreviousParagraphProperties();
            Indentation indentation36 = new Indentation() { Start = "6480", Hanging = "180" };

            previousParagraphProperties27.Append(indentation36);

            level27.Append(startNumberingValue27);
            level27.Append(numberingFormat27);
            level27.Append(levelText27);
            level27.Append(levelJustification27);
            level27.Append(previousParagraphProperties27);

            abstractNum3.Append(nsid3);
            abstractNum3.Append(multiLevelType3);
            abstractNum3.Append(templateCode3);
            abstractNum3.Append(level19);
            abstractNum3.Append(level20);
            abstractNum3.Append(level21);
            abstractNum3.Append(level22);
            abstractNum3.Append(level23);
            abstractNum3.Append(level24);
            abstractNum3.Append(level25);
            abstractNum3.Append(level26);
            abstractNum3.Append(level27);

            NumberingInstance numberingInstance1 = new NumberingInstance() { NumberID = 1 };
            AbstractNumId abstractNumId1 = new AbstractNumId() { Val = 0 };

            numberingInstance1.Append(abstractNumId1);

            NumberingInstance numberingInstance2 = new NumberingInstance() { NumberID = 2 };
            AbstractNumId abstractNumId2 = new AbstractNumId() { Val = 2 };

            numberingInstance2.Append(abstractNumId2);

            NumberingInstance numberingInstance3 = new NumberingInstance() { NumberID = 3 };
            AbstractNumId abstractNumId3 = new AbstractNumId() { Val = 1 };

            numberingInstance3.Append(abstractNumId3);

            numbering1.Append(abstractNum1);
            numbering1.Append(abstractNum2);
            numbering1.Append(abstractNum3);
            numbering1.Append(numberingInstance1);
            numbering1.Append(numberingInstance2);
            numbering1.Append(numberingInstance3);

            numberingDefinitionsPart1.Numbering = numbering1;
        }

        // Generates content of customXmlPart1.
        public void GenerateCustomXmlPart1Content(CustomXmlPart customXmlPart1)
        {
            System.Xml.XmlTextWriter writer = new System.Xml.XmlTextWriter(customXmlPart1.GetStream(System.IO.FileMode.Create), System.Text.Encoding.UTF8);
            writer.WriteRaw("<b:Sources SelectedStyle=\"\\APASixthEditionOfficeOnline.xsl\" StyleName=\"APA\" Version=\"6\" xmlns:b=\"http://schemas.openxmlformats.org/officeDocument/2006/bibliography\" xmlns=\"http://schemas.openxmlformats.org/officeDocument/2006/bibliography\"></b:Sources>\r\n");
            writer.Flush();
            writer.Close();
        }

        // Generates content of customXmlPropertiesPart1.
        public void GenerateCustomXmlPropertiesPart1Content(CustomXmlPropertiesPart customXmlPropertiesPart1)
        {
            Ds.DataStoreItem dataStoreItem1 = new Ds.DataStoreItem() { ItemId = "{847CDFAB-FA43-4158-AEDF-78844E4020AC}" };
            dataStoreItem1.AddNamespaceDeclaration("ds", "http://schemas.openxmlformats.org/officeDocument/2006/customXml");

            Ds.SchemaReferences schemaReferences1 = new Ds.SchemaReferences();
            Ds.SchemaReference schemaReference1 = new Ds.SchemaReference() { Uri = "http://schemas.openxmlformats.org/officeDocument/2006/bibliography" };

            schemaReferences1.Append(schemaReference1);

            dataStoreItem1.Append(schemaReferences1);

            customXmlPropertiesPart1.DataStoreItem = dataStoreItem1;
        }

        // Generates content of footnotesPart1.
        public void GenerateFootnotesPart1Content(FootnotesPart footnotesPart1)
        {
            Footnotes footnotes1 = new Footnotes() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15 wp14" } };
            footnotes1.AddNamespaceDeclaration("wpc", "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas");
            footnotes1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            footnotes1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            footnotes1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            footnotes1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            footnotes1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            footnotes1.AddNamespaceDeclaration("wp14", "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
            footnotes1.AddNamespaceDeclaration("wp", "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
            footnotes1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            footnotes1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            footnotes1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            footnotes1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            footnotes1.AddNamespaceDeclaration("wpg", "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup");
            footnotes1.AddNamespaceDeclaration("wpi", "http://schemas.microsoft.com/office/word/2010/wordprocessingInk");
            footnotes1.AddNamespaceDeclaration("wne", "http://schemas.microsoft.com/office/word/2006/wordml");
            footnotes1.AddNamespaceDeclaration("wps", "http://schemas.microsoft.com/office/word/2010/wordprocessingShape");

            Footnote footnote1 = new Footnote() { Type = FootnoteEndnoteValues.Separator, Id = -1 };

            Paragraph paragraph1248 = new Paragraph() { RsidParagraphAddition = "004F69D2", RsidParagraphProperties = "005F6BB9", RsidRunAdditionDefault = "004F69D2" };

            ParagraphProperties paragraphProperties703 = new ParagraphProperties();
            SpacingBetweenLines spacingBetweenLines136 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            paragraphProperties703.Append(spacingBetweenLines136);

            Run run337 = new Run();
            SeparatorMark separatorMark2 = new SeparatorMark();

            run337.Append(separatorMark2);

            paragraph1248.Append(paragraphProperties703);
            paragraph1248.Append(run337);

            footnote1.Append(paragraph1248);

            Footnote footnote2 = new Footnote() { Type = FootnoteEndnoteValues.ContinuationSeparator, Id = 0 };

            Paragraph paragraph1249 = new Paragraph() { RsidParagraphAddition = "004F69D2", RsidParagraphProperties = "005F6BB9", RsidRunAdditionDefault = "004F69D2" };

            ParagraphProperties paragraphProperties704 = new ParagraphProperties();
            SpacingBetweenLines spacingBetweenLines137 = new SpacingBetweenLines() { After = "0", Line = "240", LineRule = LineSpacingRuleValues.Auto };

            paragraphProperties704.Append(spacingBetweenLines137);

            Run run338 = new Run();
            ContinuationSeparatorMark continuationSeparatorMark2 = new ContinuationSeparatorMark();

            run338.Append(continuationSeparatorMark2);

            paragraph1249.Append(paragraphProperties704);
            paragraph1249.Append(run338);

            footnote2.Append(paragraph1249);

            footnotes1.Append(footnote1);
            footnotes1.Append(footnote2);

            footnotesPart1.Footnotes = footnotes1;
        }

        // Generates content of headerPart1.
        public void GenerateHeaderPart1Content(HeaderPart headerPart1)
        {
            Header header1 = new Header() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15 wp14" } };
            header1.AddNamespaceDeclaration("wpc", "http://schemas.microsoft.com/office/word/2010/wordprocessingCanvas");
            header1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            header1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            header1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            header1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            header1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            header1.AddNamespaceDeclaration("wp14", "http://schemas.microsoft.com/office/word/2010/wordprocessingDrawing");
            header1.AddNamespaceDeclaration("wp", "http://schemas.openxmlformats.org/drawingml/2006/wordprocessingDrawing");
            header1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            header1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            header1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            header1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            header1.AddNamespaceDeclaration("wpg", "http://schemas.microsoft.com/office/word/2010/wordprocessingGroup");
            header1.AddNamespaceDeclaration("wpi", "http://schemas.microsoft.com/office/word/2010/wordprocessingInk");
            header1.AddNamespaceDeclaration("wne", "http://schemas.microsoft.com/office/word/2006/wordml");
            header1.AddNamespaceDeclaration("wps", "http://schemas.microsoft.com/office/word/2010/wordprocessingShape");

            Paragraph paragraph1250 = new Paragraph() { RsidParagraphAddition = "005F6BB9", RsidRunAdditionDefault = "005F6BB9" };

            ParagraphProperties paragraphProperties705 = new ParagraphProperties();
            ParagraphStyleId paragraphStyleId36 = new ParagraphStyleId() { Val = "Header" };

            paragraphProperties705.Append(paragraphStyleId36);

            Run run339 = new Run();
            Text text262 = new Text();
            text262.Text = "Header";

            run339.Append(text262);

            paragraph1250.Append(paragraphProperties705);
            paragraph1250.Append(run339);

            Paragraph paragraph1251 = new Paragraph() { RsidParagraphAddition = "005F6BB9", RsidRunAdditionDefault = "005F6BB9" };

            ParagraphProperties paragraphProperties706 = new ParagraphProperties();
            ParagraphStyleId paragraphStyleId37 = new ParagraphStyleId() { Val = "Header" };

            paragraphProperties706.Append(paragraphStyleId37);

            paragraph1251.Append(paragraphProperties706);

            header1.Append(paragraph1250);
            header1.Append(paragraph1251);

            headerPart1.Header = header1;
        }

        // Generates content of webSettingsPart1.
        public void GenerateWebSettingsPart1Content(WebSettingsPart webSettingsPart1)
        {
            WebSettings webSettings1 = new WebSettings() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15" } };
            webSettings1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            webSettings1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            webSettings1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            webSettings1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            webSettings1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            OptimizeForBrowser optimizeForBrowser1 = new OptimizeForBrowser();
            AllowPNG allowPNG1 = new AllowPNG();

            webSettings1.Append(optimizeForBrowser1);
            webSettings1.Append(allowPNG1);

            webSettingsPart1.WebSettings = webSettings1;
        }
      
        // Generates content of documentSettingsPart1.
        public void GenerateDocumentSettingsPart1Content(DocumentSettingsPart documentSettingsPart1)
        {
            Settings settings1 = new Settings() { MCAttributes = new MarkupCompatibilityAttributes() { Ignorable = "w14 w15" } };
            settings1.AddNamespaceDeclaration("mc", "http://schemas.openxmlformats.org/markup-compatibility/2006");
            settings1.AddNamespaceDeclaration("o", "urn:schemas-microsoft-com:office:office");
            settings1.AddNamespaceDeclaration("r", "http://schemas.openxmlformats.org/officeDocument/2006/relationships");
            settings1.AddNamespaceDeclaration("m", "http://schemas.openxmlformats.org/officeDocument/2006/math");
            settings1.AddNamespaceDeclaration("v", "urn:schemas-microsoft-com:vml");
            settings1.AddNamespaceDeclaration("w10", "urn:schemas-microsoft-com:office:word");
            settings1.AddNamespaceDeclaration("w", "http://schemas.openxmlformats.org/wordprocessingml/2006/main");
            settings1.AddNamespaceDeclaration("w14", "http://schemas.microsoft.com/office/word/2010/wordml");
            settings1.AddNamespaceDeclaration("w15", "http://schemas.microsoft.com/office/word/2012/wordml");
            settings1.AddNamespaceDeclaration("sl", "http://schemas.openxmlformats.org/schemaLibrary/2006/main");
            Zoom zoom1 = new Zoom() { Percent = "130" };
            ProofState proofState1 = new ProofState() { Spelling = ProofingStateValues.Clean, Grammar = ProofingStateValues.Clean };
            DefaultTabStop defaultTabStop1 = new DefaultTabStop() { Val = 720 };
            CharacterSpacingControl characterSpacingControl1 = new CharacterSpacingControl() { Val = CharacterSpacingValues.DoNotCompress };

            FootnoteDocumentWideProperties footnoteDocumentWideProperties1 = new FootnoteDocumentWideProperties();
            FootnoteSpecialReference footnoteSpecialReference1 = new FootnoteSpecialReference() { Id = -1 };
            FootnoteSpecialReference footnoteSpecialReference2 = new FootnoteSpecialReference() { Id = 0 };

            footnoteDocumentWideProperties1.Append(footnoteSpecialReference1);
            footnoteDocumentWideProperties1.Append(footnoteSpecialReference2);

            EndnoteDocumentWideProperties endnoteDocumentWideProperties1 = new EndnoteDocumentWideProperties();
            EndnoteSpecialReference endnoteSpecialReference1 = new EndnoteSpecialReference() { Id = -1 };
            EndnoteSpecialReference endnoteSpecialReference2 = new EndnoteSpecialReference() { Id = 0 };

            endnoteDocumentWideProperties1.Append(endnoteSpecialReference1);
            endnoteDocumentWideProperties1.Append(endnoteSpecialReference2);

            Compatibility compatibility1 = new Compatibility();
            CompatibilitySetting compatibilitySetting1 = new CompatibilitySetting() { Name = CompatSettingNameValues.CompatibilityMode, Uri = "http://schemas.microsoft.com/office/word", Val = "15" };
            CompatibilitySetting compatibilitySetting2 = new CompatibilitySetting() { Name = CompatSettingNameValues.OverrideTableStyleFontSizeAndJustification, Uri = "http://schemas.microsoft.com/office/word", Val = "1" };
            CompatibilitySetting compatibilitySetting3 = new CompatibilitySetting() { Name = CompatSettingNameValues.EnableOpenTypeFeatures, Uri = "http://schemas.microsoft.com/office/word", Val = "1" };
            CompatibilitySetting compatibilitySetting4 = new CompatibilitySetting() { Name = CompatSettingNameValues.DoNotFlipMirrorIndents, Uri = "http://schemas.microsoft.com/office/word", Val = "1" };
            CompatibilitySetting compatibilitySetting5 = new CompatibilitySetting() { Name = CompatSettingNameValues.DifferentiateMultirowTableHeaders, Uri = "http://schemas.microsoft.com/office/word", Val = "1" };

            compatibility1.Append(compatibilitySetting1);
            compatibility1.Append(compatibilitySetting2);
            compatibility1.Append(compatibilitySetting3);
            compatibility1.Append(compatibilitySetting4);
            compatibility1.Append(compatibilitySetting5);

            Rsids rsids1 = new Rsids();
            RsidRoot rsidRoot1 = new RsidRoot() { Val = "00985AFA" };
            Rsid rsid144 = new Rsid() { Val = "000B6DD7" };
            Rsid rsid145 = new Rsid() { Val = "00404DC2" };
            Rsid rsid146 = new Rsid() { Val = "004F69D2" };
            Rsid rsid147 = new Rsid() { Val = "005A6524" };
            Rsid rsid148 = new Rsid() { Val = "005E0F19" };
            Rsid rsid149 = new Rsid() { Val = "005F6BB9" };
            Rsid rsid150 = new Rsid() { Val = "00642B0F" };
            Rsid rsid151 = new Rsid() { Val = "00806875" };
            Rsid rsid152 = new Rsid() { Val = "00836D7F" };
            Rsid rsid153 = new Rsid() { Val = "008B318B" };
            Rsid rsid154 = new Rsid() { Val = "00985AFA" };
            Rsid rsid155 = new Rsid() { Val = "00B64AE0" };
            Rsid rsid156 = new Rsid() { Val = "00BB13F0" };
            Rsid rsid157 = new Rsid() { Val = "00D10BFB" };
            Rsid rsid158 = new Rsid() { Val = "00FB7254" };

            rsids1.Append(rsidRoot1);
            rsids1.Append(rsid144);
            rsids1.Append(rsid145);
            rsids1.Append(rsid146);
            rsids1.Append(rsid147);
            rsids1.Append(rsid148);
            rsids1.Append(rsid149);
            rsids1.Append(rsid150);
            rsids1.Append(rsid151);
            rsids1.Append(rsid152);
            rsids1.Append(rsid153);
            rsids1.Append(rsid154);
            rsids1.Append(rsid155);
            rsids1.Append(rsid156);
            rsids1.Append(rsid157);
            rsids1.Append(rsid158);

            M.MathProperties mathProperties1 = new M.MathProperties();
            M.MathFont mathFont1 = new M.MathFont() { Val = "Cambria Math" };
            M.BreakBinary breakBinary1 = new M.BreakBinary() { Val = M.BreakBinaryOperatorValues.Before };
            M.BreakBinarySubtraction breakBinarySubtraction1 = new M.BreakBinarySubtraction() { Val = M.BreakBinarySubtractionValues.MinusMinus };
            M.SmallFraction smallFraction1 = new M.SmallFraction() { Val = M.BooleanValues.Zero };
            M.DisplayDefaults displayDefaults1 = new M.DisplayDefaults();
            M.LeftMargin leftMargin1 = new M.LeftMargin() { Val = (UInt32Value)0U };
            M.RightMargin rightMargin1 = new M.RightMargin() { Val = (UInt32Value)0U };
            M.DefaultJustification defaultJustification1 = new M.DefaultJustification() { Val = M.JustificationValues.CenterGroup };
            M.WrapIndent wrapIndent1 = new M.WrapIndent() { Val = (UInt32Value)1440U };
            M.IntegralLimitLocation integralLimitLocation1 = new M.IntegralLimitLocation() { Val = M.LimitLocationValues.SubscriptSuperscript };
            M.NaryLimitLocation naryLimitLocation1 = new M.NaryLimitLocation() { Val = M.LimitLocationValues.UnderOver };

            mathProperties1.Append(mathFont1);
            mathProperties1.Append(breakBinary1);
            mathProperties1.Append(breakBinarySubtraction1);
            mathProperties1.Append(smallFraction1);
            mathProperties1.Append(displayDefaults1);
            mathProperties1.Append(leftMargin1);
            mathProperties1.Append(rightMargin1);
            mathProperties1.Append(defaultJustification1);
            mathProperties1.Append(wrapIndent1);
            mathProperties1.Append(integralLimitLocation1);
            mathProperties1.Append(naryLimitLocation1);
            ThemeFontLanguages themeFontLanguages1 = new ThemeFontLanguages() { Val = "en-CA" };
            ColorSchemeMapping colorSchemeMapping1 = new ColorSchemeMapping() { Background1 = ColorSchemeIndexValues.Light1, Text1 = ColorSchemeIndexValues.Dark1, Background2 = ColorSchemeIndexValues.Light2, Text2 = ColorSchemeIndexValues.Dark2, Accent1 = ColorSchemeIndexValues.Accent1, Accent2 = ColorSchemeIndexValues.Accent2, Accent3 = ColorSchemeIndexValues.Accent3, Accent4 = ColorSchemeIndexValues.Accent4, Accent5 = ColorSchemeIndexValues.Accent5, Accent6 = ColorSchemeIndexValues.Accent6, Hyperlink = ColorSchemeIndexValues.Hyperlink, FollowedHyperlink = ColorSchemeIndexValues.FollowedHyperlink };

            ShapeDefaults shapeDefaults1 = new ShapeDefaults();
            Ovml.ShapeDefaults shapeDefaults2 = new Ovml.ShapeDefaults() { Extension = V.ExtensionHandlingBehaviorValues.Edit, MaxShapeId = 1026 };

            Ovml.ShapeLayout shapeLayout1 = new Ovml.ShapeLayout() { Extension = V.ExtensionHandlingBehaviorValues.Edit };
            Ovml.ShapeIdMap shapeIdMap1 = new Ovml.ShapeIdMap() { Extension = V.ExtensionHandlingBehaviorValues.Edit, Data = "1" };

            shapeLayout1.Append(shapeIdMap1);

            shapeDefaults1.Append(shapeDefaults2);
            shapeDefaults1.Append(shapeLayout1);
            DecimalSymbol decimalSymbol1 = new DecimalSymbol() { Val = "." };
            ListSeparator listSeparator1 = new ListSeparator() { Val = "," };
            W15.ChartTrackingRefBased chartTrackingRefBased1 = new W15.ChartTrackingRefBased();
            W15.PersistentDocumentId persistentDocumentId1 = new W15.PersistentDocumentId() { Val = "{0B8D8B83-76C1-41AF-9D45-DA3200C8DA14}" };

            settings1.Append(zoom1);
            settings1.Append(proofState1);
            settings1.Append(defaultTabStop1);
            settings1.Append(characterSpacingControl1);
            settings1.Append(footnoteDocumentWideProperties1);
            settings1.Append(endnoteDocumentWideProperties1);
            settings1.Append(compatibility1);
            settings1.Append(rsids1);
            settings1.Append(mathProperties1);
            settings1.Append(themeFontLanguages1);
            settings1.Append(colorSchemeMapping1);
            settings1.Append(shapeDefaults1);
            settings1.Append(decimalSymbol1);
            settings1.Append(listSeparator1);
            settings1.Append(chartTrackingRefBased1);
            settings1.Append(persistentDocumentId1);

            documentSettingsPart1.Settings = settings1;
        }

        // Generates content of themePart1.
        public void GenerateThemePart1Content(ThemePart themePart1)
        {
            A.Theme theme1 = new A.Theme() { Name = "Office Theme" };
            theme1.AddNamespaceDeclaration("a", "http://schemas.openxmlformats.org/drawingml/2006/main");

            A.ThemeElements themeElements1 = new A.ThemeElements();

            A.ColorScheme colorScheme1 = new A.ColorScheme() { Name = "Office" };

            A.Dark1Color dark1Color1 = new A.Dark1Color();
            A.SystemColor systemColor1 = new A.SystemColor() { Val = A.SystemColorValues.WindowText, LastColor = "000000" };

            dark1Color1.Append(systemColor1);

            A.Light1Color light1Color1 = new A.Light1Color();
            A.SystemColor systemColor2 = new A.SystemColor() { Val = A.SystemColorValues.Window, LastColor = "FFFFFF" };

            light1Color1.Append(systemColor2);

            A.Dark2Color dark2Color1 = new A.Dark2Color();
            A.RgbColorModelHex rgbColorModelHex1 = new A.RgbColorModelHex() { Val = "44546A" };

            dark2Color1.Append(rgbColorModelHex1);

            A.Light2Color light2Color1 = new A.Light2Color();
            A.RgbColorModelHex rgbColorModelHex2 = new A.RgbColorModelHex() { Val = "E7E6E6" };

            light2Color1.Append(rgbColorModelHex2);

            A.Accent1Color accent1Color1 = new A.Accent1Color();
            A.RgbColorModelHex rgbColorModelHex3 = new A.RgbColorModelHex() { Val = "5B9BD5" };

            accent1Color1.Append(rgbColorModelHex3);

            A.Accent2Color accent2Color1 = new A.Accent2Color();
            A.RgbColorModelHex rgbColorModelHex4 = new A.RgbColorModelHex() { Val = "ED7D31" };

            accent2Color1.Append(rgbColorModelHex4);

            A.Accent3Color accent3Color1 = new A.Accent3Color();
            A.RgbColorModelHex rgbColorModelHex5 = new A.RgbColorModelHex() { Val = "A5A5A5" };

            accent3Color1.Append(rgbColorModelHex5);

            A.Accent4Color accent4Color1 = new A.Accent4Color();
            A.RgbColorModelHex rgbColorModelHex6 = new A.RgbColorModelHex() { Val = "FFC000" };

            accent4Color1.Append(rgbColorModelHex6);

            A.Accent5Color accent5Color1 = new A.Accent5Color();
            A.RgbColorModelHex rgbColorModelHex7 = new A.RgbColorModelHex() { Val = "4472C4" };

            accent5Color1.Append(rgbColorModelHex7);

            A.Accent6Color accent6Color1 = new A.Accent6Color();
            A.RgbColorModelHex rgbColorModelHex8 = new A.RgbColorModelHex() { Val = "70AD47" };

            accent6Color1.Append(rgbColorModelHex8);

            A.Hyperlink hyperlink9 = new A.Hyperlink();
            A.RgbColorModelHex rgbColorModelHex9 = new A.RgbColorModelHex() { Val = "0563C1" };

            hyperlink9.Append(rgbColorModelHex9);

            A.FollowedHyperlinkColor followedHyperlinkColor1 = new A.FollowedHyperlinkColor();
            A.RgbColorModelHex rgbColorModelHex10 = new A.RgbColorModelHex() { Val = "954F72" };

            followedHyperlinkColor1.Append(rgbColorModelHex10);

            colorScheme1.Append(dark1Color1);
            colorScheme1.Append(light1Color1);
            colorScheme1.Append(dark2Color1);
            colorScheme1.Append(light2Color1);
            colorScheme1.Append(accent1Color1);
            colorScheme1.Append(accent2Color1);
            colorScheme1.Append(accent3Color1);
            colorScheme1.Append(accent4Color1);
            colorScheme1.Append(accent5Color1);
            colorScheme1.Append(accent6Color1);
            colorScheme1.Append(hyperlink9);
            colorScheme1.Append(followedHyperlinkColor1);

            A.FontScheme fontScheme1 = new A.FontScheme() { Name = "Office" };

            A.MajorFont majorFont1 = new A.MajorFont();
            A.LatinFont latinFont11 = new A.LatinFont() { Typeface = "Calibri Light", Panose = "020F0302020204030204" };
            A.EastAsianFont eastAsianFont11 = new A.EastAsianFont() { Typeface = "" };
            A.ComplexScriptFont complexScriptFont11 = new A.ComplexScriptFont() { Typeface = "" };
            A.SupplementalFont supplementalFont1 = new A.SupplementalFont() { Script = "Jpan", Typeface = "ＭＳ ゴシック" };
            A.SupplementalFont supplementalFont2 = new A.SupplementalFont() { Script = "Hang", Typeface = "맑은 고딕" };
            A.SupplementalFont supplementalFont3 = new A.SupplementalFont() { Script = "Hans", Typeface = "宋体" };
            A.SupplementalFont supplementalFont4 = new A.SupplementalFont() { Script = "Hant", Typeface = "新細明體" };
            A.SupplementalFont supplementalFont5 = new A.SupplementalFont() { Script = "Arab", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont6 = new A.SupplementalFont() { Script = "Hebr", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont7 = new A.SupplementalFont() { Script = "Thai", Typeface = "Angsana New" };
            A.SupplementalFont supplementalFont8 = new A.SupplementalFont() { Script = "Ethi", Typeface = "Nyala" };
            A.SupplementalFont supplementalFont9 = new A.SupplementalFont() { Script = "Beng", Typeface = "Vrinda" };
            A.SupplementalFont supplementalFont10 = new A.SupplementalFont() { Script = "Gujr", Typeface = "Shruti" };
            A.SupplementalFont supplementalFont11 = new A.SupplementalFont() { Script = "Khmr", Typeface = "MoolBoran" };
            A.SupplementalFont supplementalFont12 = new A.SupplementalFont() { Script = "Knda", Typeface = "Tunga" };
            A.SupplementalFont supplementalFont13 = new A.SupplementalFont() { Script = "Guru", Typeface = "Raavi" };
            A.SupplementalFont supplementalFont14 = new A.SupplementalFont() { Script = "Cans", Typeface = "Euphemia" };
            A.SupplementalFont supplementalFont15 = new A.SupplementalFont() { Script = "Cher", Typeface = "Plantagenet Cherokee" };
            A.SupplementalFont supplementalFont16 = new A.SupplementalFont() { Script = "Yiii", Typeface = "Microsoft Yi Baiti" };
            A.SupplementalFont supplementalFont17 = new A.SupplementalFont() { Script = "Tibt", Typeface = "Microsoft Himalaya" };
            A.SupplementalFont supplementalFont18 = new A.SupplementalFont() { Script = "Thaa", Typeface = "MV Boli" };
            A.SupplementalFont supplementalFont19 = new A.SupplementalFont() { Script = "Deva", Typeface = "Mangal" };
            A.SupplementalFont supplementalFont20 = new A.SupplementalFont() { Script = "Telu", Typeface = "Gautami" };
            A.SupplementalFont supplementalFont21 = new A.SupplementalFont() { Script = "Taml", Typeface = "Latha" };
            A.SupplementalFont supplementalFont22 = new A.SupplementalFont() { Script = "Syrc", Typeface = "Estrangelo Edessa" };
            A.SupplementalFont supplementalFont23 = new A.SupplementalFont() { Script = "Orya", Typeface = "Kalinga" };
            A.SupplementalFont supplementalFont24 = new A.SupplementalFont() { Script = "Mlym", Typeface = "Kartika" };
            A.SupplementalFont supplementalFont25 = new A.SupplementalFont() { Script = "Laoo", Typeface = "DokChampa" };
            A.SupplementalFont supplementalFont26 = new A.SupplementalFont() { Script = "Sinh", Typeface = "Iskoola Pota" };
            A.SupplementalFont supplementalFont27 = new A.SupplementalFont() { Script = "Mong", Typeface = "Mongolian Baiti" };
            A.SupplementalFont supplementalFont28 = new A.SupplementalFont() { Script = "Viet", Typeface = "Times New Roman" };
            A.SupplementalFont supplementalFont29 = new A.SupplementalFont() { Script = "Uigh", Typeface = "Microsoft Uighur" };
            A.SupplementalFont supplementalFont30 = new A.SupplementalFont() { Script = "Geor", Typeface = "Sylfaen" };

            majorFont1.Append(latinFont11);
            majorFont1.Append(eastAsianFont11);
            majorFont1.Append(complexScriptFont11);
            majorFont1.Append(supplementalFont1);
            majorFont1.Append(supplementalFont2);
            majorFont1.Append(supplementalFont3);
            majorFont1.Append(supplementalFont4);
            majorFont1.Append(supplementalFont5);
            majorFont1.Append(supplementalFont6);
            majorFont1.Append(supplementalFont7);
            majorFont1.Append(supplementalFont8);
            majorFont1.Append(supplementalFont9);
            majorFont1.Append(supplementalFont10);
            majorFont1.Append(supplementalFont11);
            majorFont1.Append(supplementalFont12);
            majorFont1.Append(supplementalFont13);
            majorFont1.Append(supplementalFont14);
            majorFont1.Append(supplementalFont15);
            majorFont1.Append(supplementalFont16);
            majorFont1.Append(supplementalFont17);
            majorFont1.Append(supplementalFont18);
            majorFont1.Append(supplementalFont19);
            majorFont1.Append(supplementalFont20);
            majorFont1.Append(supplementalFont21);
            majorFont1.Append(supplementalFont22);
            majorFont1.Append(supplementalFont23);
            majorFont1.Append(supplementalFont24);
            majorFont1.Append(supplementalFont25);
            majorFont1.Append(supplementalFont26);
            majorFont1.Append(supplementalFont27);
            majorFont1.Append(supplementalFont28);
            majorFont1.Append(supplementalFont29);
            majorFont1.Append(supplementalFont30);

            A.MinorFont minorFont1 = new A.MinorFont();
            A.LatinFont latinFont12 = new A.LatinFont() { Typeface = "Calibri", Panose = "020F0502020204030204" };
            A.EastAsianFont eastAsianFont12 = new A.EastAsianFont() { Typeface = "" };
            A.ComplexScriptFont complexScriptFont12 = new A.ComplexScriptFont() { Typeface = "" };
            A.SupplementalFont supplementalFont31 = new A.SupplementalFont() { Script = "Jpan", Typeface = "ＭＳ 明朝" };
            A.SupplementalFont supplementalFont32 = new A.SupplementalFont() { Script = "Hang", Typeface = "맑은 고딕" };
            A.SupplementalFont supplementalFont33 = new A.SupplementalFont() { Script = "Hans", Typeface = "宋体" };
            A.SupplementalFont supplementalFont34 = new A.SupplementalFont() { Script = "Hant", Typeface = "新細明體" };
            A.SupplementalFont supplementalFont35 = new A.SupplementalFont() { Script = "Arab", Typeface = "Arial" };
            A.SupplementalFont supplementalFont36 = new A.SupplementalFont() { Script = "Hebr", Typeface = "Arial" };
            A.SupplementalFont supplementalFont37 = new A.SupplementalFont() { Script = "Thai", Typeface = "Cordia New" };
            A.SupplementalFont supplementalFont38 = new A.SupplementalFont() { Script = "Ethi", Typeface = "Nyala" };
            A.SupplementalFont supplementalFont39 = new A.SupplementalFont() { Script = "Beng", Typeface = "Vrinda" };
            A.SupplementalFont supplementalFont40 = new A.SupplementalFont() { Script = "Gujr", Typeface = "Shruti" };
            A.SupplementalFont supplementalFont41 = new A.SupplementalFont() { Script = "Khmr", Typeface = "DaunPenh" };
            A.SupplementalFont supplementalFont42 = new A.SupplementalFont() { Script = "Knda", Typeface = "Tunga" };
            A.SupplementalFont supplementalFont43 = new A.SupplementalFont() { Script = "Guru", Typeface = "Raavi" };
            A.SupplementalFont supplementalFont44 = new A.SupplementalFont() { Script = "Cans", Typeface = "Euphemia" };
            A.SupplementalFont supplementalFont45 = new A.SupplementalFont() { Script = "Cher", Typeface = "Plantagenet Cherokee" };
            A.SupplementalFont supplementalFont46 = new A.SupplementalFont() { Script = "Yiii", Typeface = "Microsoft Yi Baiti" };
            A.SupplementalFont supplementalFont47 = new A.SupplementalFont() { Script = "Tibt", Typeface = "Microsoft Himalaya" };
            A.SupplementalFont supplementalFont48 = new A.SupplementalFont() { Script = "Thaa", Typeface = "MV Boli" };
            A.SupplementalFont supplementalFont49 = new A.SupplementalFont() { Script = "Deva", Typeface = "Mangal" };
            A.SupplementalFont supplementalFont50 = new A.SupplementalFont() { Script = "Telu", Typeface = "Gautami" };
            A.SupplementalFont supplementalFont51 = new A.SupplementalFont() { Script = "Taml", Typeface = "Latha" };
            A.SupplementalFont supplementalFont52 = new A.SupplementalFont() { Script = "Syrc", Typeface = "Estrangelo Edessa" };
            A.SupplementalFont supplementalFont53 = new A.SupplementalFont() { Script = "Orya", Typeface = "Kalinga" };
            A.SupplementalFont supplementalFont54 = new A.SupplementalFont() { Script = "Mlym", Typeface = "Kartika" };
            A.SupplementalFont supplementalFont55 = new A.SupplementalFont() { Script = "Laoo", Typeface = "DokChampa" };
            A.SupplementalFont supplementalFont56 = new A.SupplementalFont() { Script = "Sinh", Typeface = "Iskoola Pota" };
            A.SupplementalFont supplementalFont57 = new A.SupplementalFont() { Script = "Mong", Typeface = "Mongolian Baiti" };
            A.SupplementalFont supplementalFont58 = new A.SupplementalFont() { Script = "Viet", Typeface = "Arial" };
            A.SupplementalFont supplementalFont59 = new A.SupplementalFont() { Script = "Uigh", Typeface = "Microsoft Uighur" };
            A.SupplementalFont supplementalFont60 = new A.SupplementalFont() { Script = "Geor", Typeface = "Sylfaen" };

            minorFont1.Append(latinFont12);
            minorFont1.Append(eastAsianFont12);
            minorFont1.Append(complexScriptFont12);
            minorFont1.Append(supplementalFont31);
            minorFont1.Append(supplementalFont32);
            minorFont1.Append(supplementalFont33);
            minorFont1.Append(supplementalFont34);
            minorFont1.Append(supplementalFont35);
            minorFont1.Append(supplementalFont36);
            minorFont1.Append(supplementalFont37);
            minorFont1.Append(supplementalFont38);
            minorFont1.Append(supplementalFont39);
            minorFont1.Append(supplementalFont40);
            minorFont1.Append(supplementalFont41);
            minorFont1.Append(supplementalFont42);
            minorFont1.Append(supplementalFont43);
            minorFont1.Append(supplementalFont44);
            minorFont1.Append(supplementalFont45);
            minorFont1.Append(supplementalFont46);
            minorFont1.Append(supplementalFont47);
            minorFont1.Append(supplementalFont48);
            minorFont1.Append(supplementalFont49);
            minorFont1.Append(supplementalFont50);
            minorFont1.Append(supplementalFont51);
            minorFont1.Append(supplementalFont52);
            minorFont1.Append(supplementalFont53);
            minorFont1.Append(supplementalFont54);
            minorFont1.Append(supplementalFont55);
            minorFont1.Append(supplementalFont56);
            minorFont1.Append(supplementalFont57);
            minorFont1.Append(supplementalFont58);
            minorFont1.Append(supplementalFont59);
            minorFont1.Append(supplementalFont60);

            fontScheme1.Append(majorFont1);
            fontScheme1.Append(minorFont1);

            A.FormatScheme formatScheme1 = new A.FormatScheme() { Name = "Office" };

            A.FillStyleList fillStyleList1 = new A.FillStyleList();

            A.SolidFill solidFill75 = new A.SolidFill();
            A.SchemeColor schemeColor147 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };

            solidFill75.Append(schemeColor147);

            A.GradientFill gradientFill1 = new A.GradientFill() { RotateWithShape = true };

            A.GradientStopList gradientStopList1 = new A.GradientStopList();

            A.GradientStop gradientStop1 = new A.GradientStop() { Position = 0 };

            A.SchemeColor schemeColor148 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation86 = new A.LuminanceModulation() { Val = 110000 };
            A.SaturationModulation saturationModulation1 = new A.SaturationModulation() { Val = 105000 };
            A.Tint tint1 = new A.Tint() { Val = 67000 };

            schemeColor148.Append(luminanceModulation86);
            schemeColor148.Append(saturationModulation1);
            schemeColor148.Append(tint1);

            gradientStop1.Append(schemeColor148);

            A.GradientStop gradientStop2 = new A.GradientStop() { Position = 50000 };

            A.SchemeColor schemeColor149 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation87 = new A.LuminanceModulation() { Val = 105000 };
            A.SaturationModulation saturationModulation2 = new A.SaturationModulation() { Val = 103000 };
            A.Tint tint2 = new A.Tint() { Val = 73000 };

            schemeColor149.Append(luminanceModulation87);
            schemeColor149.Append(saturationModulation2);
            schemeColor149.Append(tint2);

            gradientStop2.Append(schemeColor149);

            A.GradientStop gradientStop3 = new A.GradientStop() { Position = 100000 };

            A.SchemeColor schemeColor150 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation88 = new A.LuminanceModulation() { Val = 105000 };
            A.SaturationModulation saturationModulation3 = new A.SaturationModulation() { Val = 109000 };
            A.Tint tint3 = new A.Tint() { Val = 81000 };

            schemeColor150.Append(luminanceModulation88);
            schemeColor150.Append(saturationModulation3);
            schemeColor150.Append(tint3);

            gradientStop3.Append(schemeColor150);

            gradientStopList1.Append(gradientStop1);
            gradientStopList1.Append(gradientStop2);
            gradientStopList1.Append(gradientStop3);
            A.LinearGradientFill linearGradientFill1 = new A.LinearGradientFill() { Angle = 5400000, Scaled = false };

            gradientFill1.Append(gradientStopList1);
            gradientFill1.Append(linearGradientFill1);

            A.GradientFill gradientFill2 = new A.GradientFill() { RotateWithShape = true };

            A.GradientStopList gradientStopList2 = new A.GradientStopList();

            A.GradientStop gradientStop4 = new A.GradientStop() { Position = 0 };

            A.SchemeColor schemeColor151 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.SaturationModulation saturationModulation4 = new A.SaturationModulation() { Val = 103000 };
            A.LuminanceModulation luminanceModulation89 = new A.LuminanceModulation() { Val = 102000 };
            A.Tint tint4 = new A.Tint() { Val = 94000 };

            schemeColor151.Append(saturationModulation4);
            schemeColor151.Append(luminanceModulation89);
            schemeColor151.Append(tint4);

            gradientStop4.Append(schemeColor151);

            A.GradientStop gradientStop5 = new A.GradientStop() { Position = 50000 };

            A.SchemeColor schemeColor152 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.SaturationModulation saturationModulation5 = new A.SaturationModulation() { Val = 110000 };
            A.LuminanceModulation luminanceModulation90 = new A.LuminanceModulation() { Val = 100000 };
            A.Shade shade1 = new A.Shade() { Val = 100000 };

            schemeColor152.Append(saturationModulation5);
            schemeColor152.Append(luminanceModulation90);
            schemeColor152.Append(shade1);

            gradientStop5.Append(schemeColor152);

            A.GradientStop gradientStop6 = new A.GradientStop() { Position = 100000 };

            A.SchemeColor schemeColor153 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.LuminanceModulation luminanceModulation91 = new A.LuminanceModulation() { Val = 99000 };
            A.SaturationModulation saturationModulation6 = new A.SaturationModulation() { Val = 120000 };
            A.Shade shade2 = new A.Shade() { Val = 78000 };

            schemeColor153.Append(luminanceModulation91);
            schemeColor153.Append(saturationModulation6);
            schemeColor153.Append(shade2);

            gradientStop6.Append(schemeColor153);

            gradientStopList2.Append(gradientStop4);
            gradientStopList2.Append(gradientStop5);
            gradientStopList2.Append(gradientStop6);
            A.LinearGradientFill linearGradientFill2 = new A.LinearGradientFill() { Angle = 5400000, Scaled = false };

            gradientFill2.Append(gradientStopList2);
            gradientFill2.Append(linearGradientFill2);

            fillStyleList1.Append(solidFill75);
            fillStyleList1.Append(gradientFill1);
            fillStyleList1.Append(gradientFill2);

            A.LineStyleList lineStyleList1 = new A.LineStyleList();

            A.Outline outline64 = new A.Outline() { Width = 6350, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill76 = new A.SolidFill();
            A.SchemeColor schemeColor154 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };

            solidFill76.Append(schemeColor154);
            A.PresetDash presetDash3 = new A.PresetDash() { Val = A.PresetLineDashValues.Solid };
            A.Miter miter1 = new A.Miter() { Limit = 800000 };

            outline64.Append(solidFill76);
            outline64.Append(presetDash3);
            outline64.Append(miter1);

            A.Outline outline65 = new A.Outline() { Width = 12700, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill77 = new A.SolidFill();
            A.SchemeColor schemeColor155 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };

            solidFill77.Append(schemeColor155);
            A.PresetDash presetDash4 = new A.PresetDash() { Val = A.PresetLineDashValues.Solid };
            A.Miter miter2 = new A.Miter() { Limit = 800000 };

            outline65.Append(solidFill77);
            outline65.Append(presetDash4);
            outline65.Append(miter2);

            A.Outline outline66 = new A.Outline() { Width = 19050, CapType = A.LineCapValues.Flat, CompoundLineType = A.CompoundLineValues.Single, Alignment = A.PenAlignmentValues.Center };

            A.SolidFill solidFill78 = new A.SolidFill();
            A.SchemeColor schemeColor156 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };

            solidFill78.Append(schemeColor156);
            A.PresetDash presetDash5 = new A.PresetDash() { Val = A.PresetLineDashValues.Solid };
            A.Miter miter3 = new A.Miter() { Limit = 800000 };

            outline66.Append(solidFill78);
            outline66.Append(presetDash5);
            outline66.Append(miter3);

            lineStyleList1.Append(outline64);
            lineStyleList1.Append(outline65);
            lineStyleList1.Append(outline66);

            A.EffectStyleList effectStyleList1 = new A.EffectStyleList();

            A.EffectStyle effectStyle1 = new A.EffectStyle();
            A.EffectList effectList26 = new A.EffectList();

            effectStyle1.Append(effectList26);

            A.EffectStyle effectStyle2 = new A.EffectStyle();
            A.EffectList effectList27 = new A.EffectList();

            effectStyle2.Append(effectList27);

            A.EffectStyle effectStyle3 = new A.EffectStyle();

            A.EffectList effectList28 = new A.EffectList();

            A.OuterShadow outerShadow1 = new A.OuterShadow() { BlurRadius = 57150L, Distance = 19050L, Direction = 5400000, Alignment = A.RectangleAlignmentValues.Center, RotateWithShape = false };

            A.RgbColorModelHex rgbColorModelHex11 = new A.RgbColorModelHex() { Val = "000000" };
            A.Alpha alpha1 = new A.Alpha() { Val = 63000 };

            rgbColorModelHex11.Append(alpha1);

            outerShadow1.Append(rgbColorModelHex11);

            effectList28.Append(outerShadow1);

            effectStyle3.Append(effectList28);

            effectStyleList1.Append(effectStyle1);
            effectStyleList1.Append(effectStyle2);
            effectStyleList1.Append(effectStyle3);

            A.BackgroundFillStyleList backgroundFillStyleList1 = new A.BackgroundFillStyleList();

            A.SolidFill solidFill79 = new A.SolidFill();
            A.SchemeColor schemeColor157 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };

            solidFill79.Append(schemeColor157);

            A.SolidFill solidFill80 = new A.SolidFill();

            A.SchemeColor schemeColor158 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.Tint tint5 = new A.Tint() { Val = 95000 };
            A.SaturationModulation saturationModulation7 = new A.SaturationModulation() { Val = 170000 };

            schemeColor158.Append(tint5);
            schemeColor158.Append(saturationModulation7);

            solidFill80.Append(schemeColor158);

            A.GradientFill gradientFill3 = new A.GradientFill() { RotateWithShape = true };

            A.GradientStopList gradientStopList3 = new A.GradientStopList();

            A.GradientStop gradientStop7 = new A.GradientStop() { Position = 0 };

            A.SchemeColor schemeColor159 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.Tint tint6 = new A.Tint() { Val = 93000 };
            A.SaturationModulation saturationModulation8 = new A.SaturationModulation() { Val = 150000 };
            A.Shade shade3 = new A.Shade() { Val = 98000 };
            A.LuminanceModulation luminanceModulation92 = new A.LuminanceModulation() { Val = 102000 };

            schemeColor159.Append(tint6);
            schemeColor159.Append(saturationModulation8);
            schemeColor159.Append(shade3);
            schemeColor159.Append(luminanceModulation92);

            gradientStop7.Append(schemeColor159);

            A.GradientStop gradientStop8 = new A.GradientStop() { Position = 50000 };

            A.SchemeColor schemeColor160 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.Tint tint7 = new A.Tint() { Val = 98000 };
            A.SaturationModulation saturationModulation9 = new A.SaturationModulation() { Val = 130000 };
            A.Shade shade4 = new A.Shade() { Val = 90000 };
            A.LuminanceModulation luminanceModulation93 = new A.LuminanceModulation() { Val = 103000 };

            schemeColor160.Append(tint7);
            schemeColor160.Append(saturationModulation9);
            schemeColor160.Append(shade4);
            schemeColor160.Append(luminanceModulation93);

            gradientStop8.Append(schemeColor160);

            A.GradientStop gradientStop9 = new A.GradientStop() { Position = 100000 };

            A.SchemeColor schemeColor161 = new A.SchemeColor() { Val = A.SchemeColorValues.PhColor };
            A.Shade shade5 = new A.Shade() { Val = 63000 };
            A.SaturationModulation saturationModulation10 = new A.SaturationModulation() { Val = 120000 };

            schemeColor161.Append(shade5);
            schemeColor161.Append(saturationModulation10);

            gradientStop9.Append(schemeColor161);

            gradientStopList3.Append(gradientStop7);
            gradientStopList3.Append(gradientStop8);
            gradientStopList3.Append(gradientStop9);
            A.LinearGradientFill linearGradientFill3 = new A.LinearGradientFill() { Angle = 5400000, Scaled = false };

            gradientFill3.Append(gradientStopList3);
            gradientFill3.Append(linearGradientFill3);

            backgroundFillStyleList1.Append(solidFill79);
            backgroundFillStyleList1.Append(solidFill80);
            backgroundFillStyleList1.Append(gradientFill3);

            formatScheme1.Append(fillStyleList1);
            formatScheme1.Append(lineStyleList1);
            formatScheme1.Append(effectStyleList1);
            formatScheme1.Append(backgroundFillStyleList1);

            themeElements1.Append(colorScheme1);
            themeElements1.Append(fontScheme1);
            themeElements1.Append(formatScheme1);
            A.ObjectDefaults objectDefaults1 = new A.ObjectDefaults();
            A.ExtraColorSchemeList extraColorSchemeList1 = new A.ExtraColorSchemeList();

            A.OfficeStyleSheetExtensionList officeStyleSheetExtensionList1 = new A.OfficeStyleSheetExtensionList();

            A.OfficeStyleSheetExtension officeStyleSheetExtension1 = new A.OfficeStyleSheetExtension() { Uri = "{05A4C25C-085E-4340-85A3-A5531E510DB2}" };

            Thm15.ThemeFamily themeFamily1 = new Thm15.ThemeFamily() { Name = "Office Theme", Id = "{62F939B6-93AF-4DB8-9C6B-D6C7DFDC589F}", Vid = "{4A3C46E8-61CC-4603-A589-7422A47A8E4A}" };
            themeFamily1.AddNamespaceDeclaration("thm15", "http://schemas.microsoft.com/office/thememl/2012/main");

            officeStyleSheetExtension1.Append(themeFamily1);

            officeStyleSheetExtensionList1.Append(officeStyleSheetExtension1);

            theme1.Append(themeElements1);
            theme1.Append(objectDefaults1);
            theme1.Append(extraColorSchemeList1);
            theme1.Append(officeStyleSheetExtensionList1);

            themePart1.Theme = theme1;
        }

        public void SetPackageProperties(OpenXmlPackage document)
        {
            document.PackageProperties.Creator = "LeBlanc,Charles [Moncton]";
            document.PackageProperties.LastModifiedBy = "LeBlanc,Charles [Moncton]";

            TVItemService tvItemService = new TVItemService(_TaskRunnerBaseService._BWObj.appTaskModel.Language, _TaskRunnerBaseService._User);
            TVItemModel tvItemModelContact = tvItemService.GetTVItemModelWithTVItemIDDB(_TaskRunnerBaseService._BWObj.appTaskModel.LastUpdateContactTVItemID);
            if (string.IsNullOrWhiteSpace(tvItemModelContact.Error))
            {
                document.PackageProperties.Creator = tvItemModelContact.TVText;
                document.PackageProperties.LastModifiedBy = tvItemModelContact.TVText;
            }
            document.PackageProperties.Revision = "1";
            document.PackageProperties.Created = DateTime.UtcNow;
            document.PackageProperties.Modified = DateTime.UtcNow;

            document.PackageProperties.Title = "";
            document.PackageProperties.Subject = "";
            document.PackageProperties.Keywords = "";
            document.PackageProperties.Description = "";
        }

     
        public void SetDefaults()
        {
            CurrentFontSize = 12;
            CurrentFontColor = null;
            CurrentFontName = null;
            CurrentFontBold = false;
            CurrentFontItalic = false;
            CurrentFontUnderline = false;
            CurrentJustificationValue = null;
            CurrentBulletStyle = null;
            CurrentBulletLevel = 0;
            CurrentHighlightColorValue = null;
            CurrentVerticalPositionValue = null;
            CurrentRunStyle = null;
            CurrentParagraphStyle = null;
            CurrentColumnCount = null;
            CurrentTableWidthInPerc = null;
            CurrentTableRowAlignmentValue = null;
            CurrentTableLeftBorder = false;
            CurrentTableRightBorder = false;
            CurrentTableTopBorder = false;
            CurrentTableBottomBorder = false;
            CurrentTableInsideHorizontalBorder = false;
            CurrentTableInsideVerticalBorder = false;
            CurrentLeftBorderValue = null;
            CurrentRightBorderValue = null;
            CurrentTopBorderValue = null;
            CurrentBottomBorderValue = null;
            CurrentInsideHorizontalBorderValue = null;
            CurrentInsideVerticalBorderValue = null;
            CurrentTableBorderColor = null;
            CurrentTableStyle = null;
            CurrentTitle = DocxServiceRootRes.Title;

        }

        #endregion Functions public

    }
}